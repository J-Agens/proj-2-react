{"ast":null,"code":"var _jsxFileName = \"/Users/Shadow/Desktop/project-2-react/src/components/cComponent.tsx\";\nimport React from 'react';\nimport { getAllUsers, myInfo } from '../api/LibraryClient';\nimport { Writerview } from './views/viewWriter';\nexport default class Control extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({\n        data: await getAllUsers(),\n        userinfo: await myInfo(this.props.writerid),\n        isError: false\n      });\n    } catch (e) {\n      this.setState({\n        isError: true,\n        errorMessage: e.message\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.state.all && this.state.data.map((u, x) => {\n      return /*#__PURE__*/React.createElement(Writerview, {\n        key: x,\n        thekey: x,\n        id: u.postId,\n        author: u.author,\n        postTitle: u.postTitle,\n        postDescription: u.postDescription,\n        status: u.status,\n        postType: u.postType,\n        postField: u.postField,\n        resolver: u.resolver,\n        dateSubmitted: u.dateSubmitted,\n        postText: u.postText,\n        keywords: u.keyWords,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      });\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/Shadow/Desktop/project-2-react/src/components/cComponent.tsx"],"names":["React","getAllUsers","myInfo","Writerview","Control","Component","constructor","props","state","componentDidMount","setState","data","userinfo","writerid","isError","e","errorMessage","message","render","all","map","u","x","postId","author","postTitle","postDescription","status","postType","postField","resolver","dateSubmitted","postText","keyWords"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,sBAApC;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAGA,eAAe,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAA+C;AAE9DC,EAAAA,WAAW,CAACC,KAAD,EAAW;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAGH;;AAED,QAAMC,iBAAN,GAA0B;AACtB,QAAI;AACA,WAAKC,QAAL,CAAc;AACVC,QAAAA,IAAI,EAAE,MAAMV,WAAW,EADb;AAEVW,QAAAA,QAAQ,EAAE,MAAMV,MAAM,CAAC,KAAKK,KAAL,CAAWM,QAAZ,CAFZ;AAGVC,QAAAA,OAAO,EAAE;AAHC,OAAd;AAKD,KANH,CAMI,OAAOC,CAAP,EAAU;AAEV,WAAKL,QAAL,CAAc;AACZI,QAAAA,OAAO,EAAE,IADG;AAEZE,QAAAA,YAAY,EAAED,CAAC,CAACE;AAFJ,OAAd;AAIH;AACJ;;AAEGC,EAAAA,MAAM,GAAE;AACJ,wBACI,0CACC,KAAKV,KAAL,CAAWW,GAAX,IAAmB,KAAKX,KAAL,CAAWG,IAAX,CAAgBS,GAAhB,CAAoB,CAACC,CAAD,EAAYC,CAAZ,KAAwB;AAC5D,0BACI,oBAAC,UAAD;AAAY,QAAA,GAAG,EAAEA,CAAjB;AAAoB,QAAA,MAAM,EAAEA,CAA5B;AAA+B,QAAA,EAAE,EAAED,CAAC,CAACE,MAArC;AAA6C,QAAA,MAAM,EAAEF,CAAC,CAACG,MAAvD;AAA+D,QAAA,SAAS,EAAEH,CAAC,CAACI,SAA5E;AACA,QAAA,eAAe,EAAEJ,CAAC,CAACK,eADnB;AACoC,QAAA,MAAM,EAAEL,CAAC,CAACM,MAD9C;AACsD,QAAA,QAAQ,EAAEN,CAAC,CAACO,QADlE;AAC4E,QAAA,SAAS,EAAEP,CAAC,CAACQ,SADzF;AAEA,QAAA,QAAQ,EAAER,CAAC,CAACS,QAFZ;AAEsB,QAAA,aAAa,EAAET,CAAC,CAACU,aAFvC;AAEsD,QAAA,QAAQ,EAAEV,CAAC,CAACW,QAFlE;AAE4E,QAAA,QAAQ,EAAEX,CAAC,CAACY,QAFxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAKK,KANW,CADpB,CADJ;AAaH;;AAvCyD","sourcesContent":["import React from 'react';\nimport { getAllUsers, myInfo } from '../api/LibraryClient';\nimport { Writerview } from './views/viewWriter';\nimport { User } from '../models/User';\n\nexport default class Control extends React.Component<any,any> {\n\nconstructor(props:any){\n    super(props);\n    this.state = {\n        \n    }\n}\n\nasync componentDidMount() {\n    try {\n        this.setState({\n            data: await getAllUsers(),\n            userinfo: await myInfo(this.props.writerid),\n            isError: false,\n        })\n      } catch (e) {\n\n        this.setState({\n          isError: true,\n          errorMessage: e.message,\n        })\n    }   \n}\n\n    render(){\n        return(\n            <>\n            {this.state.all && (this.state.data.map((u:User|any,x:number) =>{\n                return(\n                    <Writerview key={x} thekey={x} id={u.postId} author={u.author} postTitle={u.postTitle}\n                    postDescription={u.postDescription} status={u.status} postType={u.postType} postField={u.postField}\n                    resolver={u.resolver} dateSubmitted={u.dateSubmitted} postText={u.postText} keywords={u.keyWords} />\n                    )      \n                    })         \n        )}     \n            </>\n            \n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}