{"ast":null,"code":"var _jsxFileName = \"/Users/Shadow/react1/myapp/src/components/RemAll.tsx\";\nimport React from 'react';\nimport { Allreimbursements } from '../api/LibraryClient'; // import { QuickTable } from './QuickTable';\n\nexport class All extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.clearError = () => {\n      this.setState({\n        isError: false,\n        errorMessage: ''\n      });\n    };\n\n    this.state = {\n      members: [],\n      isError: false,\n      errorMessage: ''\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({\n        members: await Allreimbursements()\n      });\n    } catch (e) {\n      // We set the error information in our state.\n      // This will let us render something about the error to the end user\n      this.setState({\n        isError: true,\n        errorMessage: e.message\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.isError) {\n      //map to a string so quicktable can render this.\n      return this.state.members.map(u => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: u.reimbursementId,\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 1\n          }\n        }, \"id:  \", /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 12\n          }\n        }, u.reimbursementId)), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 1\n          }\n        }, \"author:  \", /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 16\n          }\n        }, u.author)), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 1\n          }\n        }, \"amount:  \", /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 16\n          }\n        }, u.amount)), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 1\n          }\n        }, \"description: \", /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 20\n          }\n        }, u.description)), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 1\n          }\n        }, \"status: \", /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }\n        }, u.status)), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 1\n          }\n        }, \"type: \", /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }\n        }, u.type)), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 1\n          }\n        }, \"resolver:\", /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 16\n          }\n        }, \" \", u.resolver)), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 1\n          }\n        }, \"date submitted: \", /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 23\n          }\n        }, u.dateSubmitted)), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 1\n          }\n        }, \"date resolved:\", /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }\n        }, \" \", u.dateResolved)));\n      });\n    } else {\n      switch (this.state.errorMessage) {\n        case \"Request failed with status code 402\":\n          return /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }\n          }, \"login required\");\n\n        case \"Request failed with status code 403\":\n          return /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }\n          }, \"Finance manager role is required!\");\n\n        default:\n          return /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 18\n            }\n          }, \"unknown Error\");\n      }\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/Shadow/react1/myapp/src/components/RemAll.tsx"],"names":["React","Allreimbursements","All","Component","constructor","props","clearError","setState","isError","errorMessage","state","members","componentDidMount","e","message","render","map","u","reimbursementId","author","amount","description","status","type","resolver","dateSubmitted","dateResolved"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Reimbursement } from '../models/Reimbursement';\nimport { Allreimbursements } from '../api/LibraryClient';\n// import { QuickTable } from './QuickTable';\n\ninterface IBooksDisplayState {\n  members: Reimbursement[];\n  isError: boolean;\n  errorMessage: string;\n}\n\nexport class All extends React.Component<any, IBooksDisplayState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      members: [],\n      isError: false,\n      errorMessage: '',\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({\n        members: await Allreimbursements()\n      })\n    } catch (e) {\n      // We set the error information in our state.\n      // This will let us render something about the error to the end user\n      this.setState({\n        \n        isError: true,\n        errorMessage: e.message,\n      })\n    }\n  }\n\n  \n\n  clearError = () => {\n    this.setState({\n      isError: false,\n      errorMessage: '',\n    });\n  }\n\n  render() {\n      \n    if(!this.state.isError) {\n      //map to a string so quicktable can render this.\n      \n      return this.state.members.map((u:Reimbursement)=>{\n     return(\n          <div key={u.reimbursementId} className=\"col\">\n<span>id:  <span>{u.reimbursementId}</span></span>  \n<span>author:  <span>{u.author}</span></span>  \n<span>amount:  <span>{u.amount}</span></span>  \n<span>description: <span>{u.description}</span></span>  \n<span>status: <span>{u.status}</span></span>  \n<span>type: <span>{u.type}</span></span>  \n<span>resolver:<span> {u.resolver}</span></span> \n<span>date submitted: <span>{u.dateSubmitted}</span></span> \n<span>date resolved:<span> {u.dateResolved}</span></span> \n          </div>\n         )      \n         })\n    } \nelse {\n      \n    switch(this.state.errorMessage){\n        case \"Request failed with status code 402\":\n           return <h3>login required</h3>\n        case \"Request failed with status code 403\":\n        return  <h3>Finance manager role is required!</h3>\n      default :\n          return <h3>unknown Error</h3>\n    }\n        \n    }\n    \n  }\n  \n}"]},"metadata":{},"sourceType":"module"}