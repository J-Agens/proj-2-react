{"ast":null,"code":"var _jsxFileName = \"/Users/Shadow/Desktop/project-2-react/src/components/pComponent.tsx\";\nimport React from 'react';\nimport { posts } from '../api/LibraryClient';\nexport default class Posts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      single: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({\n        single: await posts(),\n        isError: false\n      });\n    } catch (e) {\n      // We set the error information in our state.\n      // This will let us render something about the error to the end user\n      this.setState({\n        isError: true,\n        errorMessage: e.message\n      }); // }\n    }\n  }\n\n  render() {\n    return this.state.members.map((u, x) => {\n      return /*#__PURE__*/React.createElement(Eview, {\n        key: x,\n        thekey: x,\n        id: u.id,\n        username: u.username,\n        pass: u.password,\n        firstname: u.firstname,\n        lastname: u.lastname,\n        email: u.email,\n        role: u.role,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/Shadow/Desktop/project-2-react/src/components/pComponent.tsx"],"names":["React","posts","Posts","Component","constructor","props","state","single","componentDidMount","setState","isError","e","errorMessage","message","render","members","map","u","x","id","username","password","firstname","lastname","email","role"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,sBAAtB;AAEA,eAAe,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAA6C;AAE5DC,EAAAA,WAAW,CAACC,KAAD,EAAW;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAIH;;AAED,QAAMC,iBAAN,GAA0B;AACtB,QAAI;AACA,WAAKC,QAAL,CAAc;AACZF,QAAAA,MAAM,EAAE,MAAMN,KAAK,EADP;AAEZS,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KALH,CAKI,OAAOC,CAAP,EAAU;AACV;AACA;AACA,WAAKF,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE,IADG;AAEZE,QAAAA,YAAY,EAAED,CAAC,CAACE;AAFJ,OAAd,EAHU,CAOZ;AACD;AACJ;;AACGC,EAAAA,MAAM,GAAE;AACJ,WACM,KAAKR,KAAL,CAAWS,OAAX,CAAmBC,GAAnB,CAAuB,CAACC,CAAD,EAAYC,CAAZ,KAAwB;AAC7C,0BACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAEA,CAAZ;AAAe,QAAA,MAAM,EAAEA,CAAvB;AAA0B,QAAA,EAAE,EAAED,CAAC,CAACE,EAAhC;AAAoC,QAAA,QAAQ,EAAEF,CAAC,CAACG,QAAhD;AAA0D,QAAA,IAAI,EAAEH,CAAC,CAACI,QAAlE;AACC,QAAA,SAAS,EAAEJ,CAAC,CAACK,SADd;AACyB,QAAA,QAAQ,EAAEL,CAAC,CAACM,QADrC;AAEE,QAAA,KAAK,EAAEN,CAAC,CAACO,KAFX;AAEkB,QAAA,IAAI,EAAEP,CAAC,CAACQ,IAF1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAMK,KAPP,CADN;AAYH;;AAvCuD","sourcesContent":["import React from 'react';\nimport { posts } from '../api/LibraryClient';\n\nexport default class Posts extends React.Component<any,any> {\n\nconstructor(props:any){\n    super(props);\n    this.state = {\n        single: [],\n\n    }\n}\n\nasync componentDidMount() {\n    try {\n        this.setState({\n          single: await posts(),\n          isError: false,\n        })\n      } catch (e) {\n        // We set the error information in our state.\n        // This will let us render something about the error to the end user\n        this.setState({\n          isError: true,\n          errorMessage: e.message,\n        })\n      // }\n    }   \n}\n    render(){\n        return(\n             (this.state.members.map((u:User|any,x:number) =>{\n                return(\n                    <Eview key={x} thekey={x} id={u.id} username={u.username} pass={u.password}\n                     firstname={u.firstname} lastname={u.lastname}\n                      email={u.email} role={u.role} />\n           \n                    )      \n                    })\n                    \n        )\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}