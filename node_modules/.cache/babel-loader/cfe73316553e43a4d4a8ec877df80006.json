{"ast":null,"code":"var _jsxFileName = \"/Users/Shadow/react1/myapp/src/components/SingleUser.tsx\";\nimport React from 'react';\nimport { getSingle } from '../api/LibraryClient';\nexport class SingleUser extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.clearError = () => {\n      this.setState({\n        isError: false,\n        errorMessage: ''\n      });\n    };\n\n    this.state = {\n      single: 'fetching user by id',\n      isError: false,\n      errorMessage: ''\n    };\n  }\n\n  async componentDidUpdate() {\n    try {\n      this.setState({\n        single: await getSingle(this.props.userid)\n      });\n    } catch (e) {\n      // We set the error information in our state.\n      // This will let us render something about the error to the end user\n      this.setState({\n        single: '',\n        isError: true,\n        errorMessage: e.message\n      });\n    }\n  }\n\n  render() {\n    if (this.state.isError) {\n      switch (this.state.errorMessage) {\n        case \"Request failed with status code 402\":\n          return /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 19\n            }\n          }, \"login required\");\n\n        case \"Request failed with status code 403\":\n          return /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 20\n            }\n          }, \"Finance manager role is required!\");\n\n        default:\n          return /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }\n          }, \"unknown \");\n      }\n    } else {\n      return JSON.stringify(this.state.single);\n    } //     const data =  this.state.single;\n    //     if(this.state.isError) {\n    //       return(\n    // <div key={data.id} className=\"col\">\n    // <span>userid:  {data.id}</span>  \n    // <span>username:  {data.username}</span>  \n    // <span>password:  {data.password}</span>  \n    // <span>firstname: {data.firstname}</span>  \n    // <span>lastname: {data.lastname}</span>  \n    // <span>email: {data.email}</span>  \n    // <span>role: {data.role}</span>  \n    // </div>\n    //       )\n    //     } \n    // else {\n    // //map to a string so quicktable can render this. \n    // switch(this.state.errorMessage){\n    //   case \"Request failed with status code 402\":\n    //      return <h3>login required</h3>\n    //   case \"Request failed with status code 403\":\n    //      return  <h3>Finance manager role is required!</h3>\n    //   default :\n    //      return <h3>unknown </h3>\n    // }\n    //     }\n\n  }\n\n}","map":{"version":3,"sources":["/Users/Shadow/react1/myapp/src/components/SingleUser.tsx"],"names":["React","getSingle","SingleUser","Component","constructor","props","clearError","setState","isError","errorMessage","state","single","componentDidUpdate","userid","e","message","render","JSON","stringify"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAAuC,sBAAvC;AASA,OAAO,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAAkE;AAEvEC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;;AADsB,SA2BxBC,UA3BwB,GA2BX,MAAM;AACjB,WAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE,KADG;AAEZC,QAAAA,YAAY,EAAE;AAFF,OAAd;AAID,KAhCuB;;AAEtB,SAAKC,KAAL,GAAa;AACXC,MAAAA,MAAM,EAAE,qBADG;AAEXH,MAAAA,OAAO,EAAE,KAFE;AAGXC,MAAAA,YAAY,EAAE;AAHH,KAAb;AAKD;;AAED,QAAMG,kBAAN,GAA2B;AACzB,QAAI;AACF,WAAKL,QAAL,CAAc;AACZI,QAAAA,MAAM,EAAE,MAAMV,SAAS,CAAC,KAAKI,KAAL,CAAWQ,MAAZ;AADX,OAAd;AAGD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACV;AACA;AACA,WAAKP,QAAL,CAAc;AACZI,QAAAA,MAAM,EAAE,EADI;AAEZH,QAAAA,OAAO,EAAE,IAFG;AAGZC,QAAAA,YAAY,EAAEK,CAAC,CAACC;AAHJ,OAAd;AAKD;AACF;;AAaDC,EAAAA,MAAM,GAAG;AACP,QAAG,KAAKN,KAAL,CAAWF,OAAd,EAAsB;AACpB,cAAO,KAAKE,KAAL,CAAWD,YAAlB;AACE,aAAK,qCAAL;AACG,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;;AACH,aAAK,qCAAL;AACG,8BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAR;;AACH;AACG,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AANL;AAQD,KATD,MASK;AACL,aACEQ,IAAI,CAACC,SAAL,CAAe,KAAKR,KAAL,CAAWC,MAA1B,CADF;AAGD,KAdQ,CAeX;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEG;;AApFsE","sourcesContent":["import React from 'react';\nimport { User } from '../models/User';\nimport { getSingle, getAllUsers } from '../api/LibraryClient';\n\n\ninterface IBooksDisplayState {\n  single: any;\n  isError: boolean;\n  errorMessage: string;\n}\n\nexport class SingleUser extends React.Component<any, IBooksDisplayState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      single: 'fetching user by id',\n      isError: false,\n      errorMessage: '',\n    }\n  }\n\n  async componentDidUpdate() {\n    try {\n      this.setState({\n        single: await getSingle(this.props.userid)\n      })\n    } catch (e) {\n      // We set the error information in our state.\n      // This will let us render something about the error to the end user\n      this.setState({\n        single: '',\n        isError: true,\n        errorMessage: e.message,\n      })\n    }\n  }\n\n  \n\n  clearError = () => {\n    this.setState({\n      isError: false,\n      errorMessage: '',\n    });\n  }\n\n\n\n  render() {\n    if(this.state.isError){\n      switch(this.state.errorMessage){\n        case \"Request failed with status code 402\":\n           return <h3>login required</h3>\n        case \"Request failed with status code 403\":\n           return  <h3>Finance manager role is required!</h3>\n        default :\n           return <h3>unknown </h3>\n      }\n    }else{\n    return(\n      JSON.stringify(this.state.single)\n    )\n  }\n//     const data =  this.state.single;\n\n//     if(this.state.isError) {\n\n//       return(\n// <div key={data.id} className=\"col\">\n// <span>userid:  {data.id}</span>  \n// <span>username:  {data.username}</span>  \n// <span>password:  {data.password}</span>  \n// <span>firstname: {data.firstname}</span>  \n// <span>lastname: {data.lastname}</span>  \n// <span>email: {data.email}</span>  \n// <span>role: {data.role}</span>  \n// </div>\n//       )\n      \n//     } \n// else {\n      \n// //map to a string so quicktable can render this. \n// switch(this.state.errorMessage){\n//   case \"Request failed with status code 402\":\n//      return <h3>login required</h3>\n//   case \"Request failed with status code 403\":\n//      return  <h3>Finance manager role is required!</h3>\n//   default :\n//      return <h3>unknown </h3>\n// }\n        \n//     }\n    \n  }\n  \n}"]},"metadata":{},"sourceType":"module"}