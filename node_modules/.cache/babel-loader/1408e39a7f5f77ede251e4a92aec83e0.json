{"ast":null,"code":"var _jsxFileName = \"/Users/Shadow/react1/myapp/src/components/LoginComponent.tsx\";\nimport React from 'react';\nimport { Toast, ToastHeader, ToastBody } from 'reactstrap';\nimport { login } from '../api/LibraryClient';\nimport { useHistory } from 'react-router-dom'; //the updateUser prop takes a function that takes a user and returns voide\n// it will match updateUser in App.\n\nexport class LoginComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setUsername = un => {\n      this.setState({\n        username: un.currentTarget.value\n      });\n    };\n\n    this.setPassword = pw => {\n      this.setState({\n        password: pw.currentTarget.value\n      });\n    };\n\n    this.clearError = () => {\n      this.setState({\n        errorMessage: '',\n        isError: false\n      });\n    };\n\n    this.history = useHistory();\n\n    this.handleClick = () => {\n      this.history.push(\"/home\");\n    };\n\n    this.attemptLogin = async event => {\n      event.preventDefault();\n      console.log(event);\n\n      try {\n        const loggedInUser = await login(this.state.username, this.state.password);\n        this.props.updateUser(loggedInUser);\n        this.setState({\n          username: '',\n          password: ''\n        });\n\n        if (loggedInUser) {\n          history.push(\"/home\");\n        }\n      } catch (error) {\n        this.setState({\n          password: '',\n          isError: true,\n          errorMessage: error.message\n        });\n      }\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      isError: false,\n      errorMessage: ''\n    };\n  } //We'll need a few functions to modify individual pieces of our state\n  // These take change events\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.attemptLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.setUsername,\n      value: this.state.username,\n      type: \"text\",\n      name: \"username\",\n      id: \"username\",\n      placeholder: \"your username\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.setPassword,\n      value: this.state.password,\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"password\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"notdiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Toast, {\n      isOpen: this.state.isError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ToastHeader, {\n      icon: \"danger\",\n      toggle: this.clearError,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }\n    }, \"Error!\"), /*#__PURE__*/React.createElement(ToastBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, this.state.errorMessage)));\n  }\n\n}","map":{"version":3,"sources":["/Users/Shadow/react1/myapp/src/components/LoginComponent.tsx"],"names":["React","Toast","ToastHeader","ToastBody","login","useHistory","LoginComponent","Component","constructor","props","setUsername","un","setState","username","currentTarget","value","setPassword","pw","password","clearError","errorMessage","isError","history","handleClick","push","attemptLogin","event","preventDefault","console","log","loggedInUser","state","updateUser","error","message","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { User } from '../models/User';\nimport {Toast, ToastHeader, ToastBody } from 'reactstrap';\nimport { login } from '../api/LibraryClient';\nimport { useHistory } from 'react-router-dom';\n\n//the updateUser prop takes a function that takes a user and returns voide\n// it will match updateUser in App.\ninterface ILoginComponentProps {\n  updateUser: (user:User) => void;\n}\n\ninterface ILoginComponentState {\n  username: string;\n  password: string;\n  isError: boolean;\n  errorMessage: string;\n}\n\nexport class LoginComponent extends React.Component<ILoginComponentProps, ILoginComponentState> {\n\n  constructor(props: ILoginComponentProps) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      isError: false,\n      errorMessage: '',\n    }\n    \n  }\n\n \n\n  //We'll need a few functions to modify individual pieces of our state\n  // These take change events\n  setUsername = (un: any) => {\n    this.setState({\n      username: un.currentTarget.value,\n    })\n  }\n\n  setPassword = (pw: any) => {\n    this.setState({\n      password: pw.currentTarget.value,\n    })\n  }\n\n  clearError = () => {\n    this.setState({\n      errorMessage: '',\n      isError: false,\n    })\n  };\n\n   history = useHistory();\n\n   handleClick =() => {\n    this.history.push(\"/home\");\n  }\n\n \n\n  attemptLogin = async (event: any) => {\n    event.preventDefault();\n    console.log(event);\n    try {\n      const loggedInUser : User = await login(this.state.username, this.state.password);\n      this.props.updateUser(loggedInUser);\n      this.setState({\n        username: '',\n        password: '',\n      });\n      if(loggedInUser){history.push(\"/home\");}\n    } catch (error) {\n      this.setState({\n        password: '',\n        isError: true,\n        errorMessage: error.message,\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div>\n      <form onSubmit={this.attemptLogin}>\n        <div>\n          <label>Username</label>\n          <input onChange={this.setUsername} value={this.state.username} type=\"text\" name=\"username\" id=\"username\" placeholder=\"your username\" required/>\n          </div>\n          <div>\n          <label>Password</label>\n            <input onChange={this.setPassword} value={this.state.password} type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" required />\n          </div>\n          <div className=\"notdiv\">\n            <input type=\"submit\" value=\"submit\" />\n          </div>\n      </form>\n      <Toast isOpen={this.state.isError}>\n        <ToastHeader icon=\"danger\" toggle={this.clearError}>\n          Error!\n        </ToastHeader>\n        <ToastBody>\n          {this.state.errorMessage}\n        </ToastBody>\n      </Toast>\n      </div>\n    );\n  }\n\n}"]},"metadata":{},"sourceType":"module"}