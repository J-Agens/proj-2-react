{"ast":null,"code":"import axios from 'axios';\nimport { FailedLoginError } from '../errors/FailedLoginError';\nconst libraryClient = axios.create({\n  baseURL: 'http://54.174.125.219:3001/',\n  withCredentials: false\n});\nexport async function getAllWriters() {\n  const response = await libraryClient.get('/users');\n  console.log(response.data);\n  return response.data;\n}\nexport async function destroy() {\n  const response = await libraryClient.get('/logout');\n  console.log(response.data);\n}\nexport async function FetchingAllPosts() {\n  const response = await libraryClient.get('/posts');\n  return response.data;\n}\nexport async function login(un, pw) {\n  try {\n    const response = await libraryClient.post('/login', {\n      username: un,\n      password: pw\n    });\n    return response.data;\n  } catch (e) {\n    if (e.response.status === 401 || e.response.status === 400 || e.response.status === 403) {\n      throw new FailedLoginError('Failed to authenticate', un);\n    } else {\n      throw new FailedLoginError('Failed to authenticate', un);\n    }\n  }\n}","map":{"version":3,"sources":["/Users/Shadow/Desktop/project-2-react/src/api/LibraryClient.tsx"],"names":["axios","FailedLoginError","libraryClient","create","baseURL","withCredentials","getAllWriters","response","get","console","log","data","destroy","FetchingAllPosts","login","un","pw","post","username","password","e","status"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAIA,SAASC,gBAAT,QAAiC,4BAAjC;AAGA,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAN,CAAa;AACjCC,EAAAA,OAAO,EAAE,6BADwB;AAEjCC,EAAAA,eAAe,EAAE;AAFgB,CAAb,CAAtB;AAMA,OAAO,eAAeC,aAAf,GAAyD;AAC9D,QAAMC,QAAQ,GAAG,MAAML,aAAa,CAACM,GAAd,CAAkB,QAAlB,CAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACA,SAAOJ,QAAQ,CAACI,IAAhB;AAED;AAED,OAAO,eAAeC,OAAf,GAAwC;AAC7C,QAAML,QAAQ,GAAG,MAAML,aAAa,CAACM,GAAd,CAAkB,SAAlB,CAAvB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACD;AAED,OAAO,eAAeE,gBAAf,GAA0D;AAC/D,QAAMN,QAAQ,GAAG,MAAML,aAAa,CAACM,GAAd,CAAkB,QAAlB,CAAvB;AACA,SAAOD,QAAQ,CAACI,IAAhB;AAED;AASD,OAAO,eAAeG,KAAf,CAAqBC,EAArB,EAAiCC,EAAjC,EAA2D;AAChE,MAAI;AACF,UAAMT,QAAQ,GAAG,MAAML,aAAa,CAACe,IAAd,CAAmB,QAAnB,EAA6B;AAACC,MAAAA,QAAQ,EAAEH,EAAX;AAAeI,MAAAA,QAAQ,EAAEH;AAAzB,KAA7B,CAAvB;AACA,WAAOT,QAAQ,CAACI,IAAhB;AACD,GAHD,CAGE,OAAOS,CAAP,EAAU;AACV,QAAGA,CAAC,CAACb,QAAF,CAAWc,MAAX,KAAsB,GAAtB,IAA4BD,CAAC,CAACb,QAAF,CAAWc,MAAX,KAAsB,GAAlD,IAAwDD,CAAC,CAACb,QAAF,CAAWc,MAAX,KAAsB,GAAjF,EAAuF;AACrF,YAAM,IAAIpB,gBAAJ,CAAqB,wBAArB,EAA+Cc,EAA/C,CAAN;AACD,KAFD,MAEO;AACL,YAAM,IAAId,gBAAJ,CAAqB,wBAArB,EAA+Cc,EAA/C,CAAN;AACD;AACF;AAEF","sourcesContent":["import axios from 'axios';\nimport { Writer } from '../model/Writer';\nimport { Post } from '../model/Post';\n\nimport { FailedLoginError } from '../errors/FailedLoginError';\n\n\nconst libraryClient = axios.create({\n  baseURL: 'http://54.174.125.219:3001/',\n  withCredentials: false,\n});\n\n\nexport async function getAllWriters() : Promise<Writer[] | any> {\n  const response = await libraryClient.get('/users');\n  console.log(response.data);\n  return response.data;\n\n}\n\nexport async function destroy() : Promise<any> {\n  const response = await libraryClient.get('/logout');\n  console.log(response.data);\n}\n\nexport async function FetchingAllPosts() : Promise<Post[] | any> {\n  const response = await libraryClient.get('/posts');\n  return response.data;\n  \n}\n\n\n\n\n\n\n\n\nexport async function login(un: string, pw: string): Promise<any> {\n  try {\n    const response = await libraryClient.post('/login', {username: un, password: pw});\n    return response.data;\n  } catch (e) {\n    if(e.response.status === 401 ||e.response.status === 400 ||e.response.status === 403)  {\n      throw new FailedLoginError('Failed to authenticate', un);\n    } else {\n      throw new FailedLoginError('Failed to authenticate', un);\n    }\n  }\n  \n}\n"]},"metadata":{},"sourceType":"module"}