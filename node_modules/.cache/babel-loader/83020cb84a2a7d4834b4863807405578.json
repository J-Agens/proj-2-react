{"ast":null,"code":"var _jsxFileName = \"/Users/Shadow/react1/myapp/src/components/LoginComponent.tsx\";\nimport React from 'react';\nimport { login } from '../api/LibraryClient'; // import { Redirect } from 'react-router';\n//the updateUser prop takes a function that takes a user and returns voide\n// it will match updateUser in App.\n\nexport class LoginComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setUsername = un => {\n      this.setState({\n        username: un.currentTarget.value\n      });\n    };\n\n    this.setPassword = pw => {\n      this.setState({\n        password: pw.currentTarget.value\n      });\n    };\n\n    this.clearError = () => {\n      this.setState({\n        errorMessage: '',\n        isError: false,\n        success: false\n      });\n    };\n\n    this.attemptLogin = async event => {\n      event.preventDefault();\n      console.log(event);\n\n      try {\n        const loggedInUser = await login(this.state.username, this.state.password);\n        this.props.updateUser(loggedInUser);\n        this.setState({\n          username: '',\n          password: '',\n          success: true\n        });\n      } catch (error) {\n        this.setState({\n          password: '',\n          isError: true,\n          errorMessage: error.message\n        });\n      }\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      isError: false,\n      errorMessage: '',\n      success: false\n    };\n  } //We'll need a few functions to modify individual pieces of our state\n  // These take change events\n\n\n  render() {\n    if (!this.state.isError) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.attemptLogin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }\n      }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.setUsername,\n        value: this.state.username,\n        type: \"text\",\n        name: \"username\",\n        id: \"username\",\n        placeholder: \"your username\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.setPassword,\n        value: this.state.password,\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"password\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"notdiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }\n      }))), this.state.isError && /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 30\n        }\n      }, this.state.errorMessage));\n    } else {\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 18\n        }\n      }, \"you've logged in successfuly\");\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/Shadow/react1/myapp/src/components/LoginComponent.tsx"],"names":["React","login","LoginComponent","Component","constructor","props","setUsername","un","setState","username","currentTarget","value","setPassword","pw","password","clearError","errorMessage","isError","success","attemptLogin","event","preventDefault","console","log","loggedInUser","state","updateUser","error","message","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,KAAT,QAAsB,sBAAtB,C,CACA;AAEA;AACA;;AAaA,OAAO,MAAMC,cAAN,SAA6BF,KAAK,CAACG,SAAnC,CAAyF;AAE9FC,EAAAA,WAAW,CAACC,KAAD,EAA8B;AACvC,UAAMA,KAAN;;AADuC,SAazCC,WAbyC,GAa1BC,EAAD,IAAa;AACzB,WAAKC,QAAL,CAAc;AACZC,QAAAA,QAAQ,EAAEF,EAAE,CAACG,aAAH,CAAiBC;AADf,OAAd;AAGD,KAjBwC;;AAAA,SAmBzCC,WAnByC,GAmB1BC,EAAD,IAAa;AACzB,WAAKL,QAAL,CAAc;AACZM,QAAAA,QAAQ,EAAED,EAAE,CAACH,aAAH,CAAiBC;AADf,OAAd;AAGD,KAvBwC;;AAAA,SAyBzCI,UAzByC,GAyB5B,MAAM;AACjB,WAAKP,QAAL,CAAc;AACZQ,QAAAA,YAAY,EAAE,EADF;AAEZC,QAAAA,OAAO,EAAE,KAFG;AAGZC,QAAAA,OAAO,EAAE;AAHG,OAAd;AAKD,KA/BwC;;AAAA,SAiCzCC,YAjCyC,GAiC1B,MAAOC,KAAP,IAAsB;AACnCA,MAAAA,KAAK,CAACC,cAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AACA,UAAI;AACF,cAAMI,YAAmB,GAAG,MAAMvB,KAAK,CAAC,KAAKwB,KAAL,CAAWhB,QAAZ,EAAsB,KAAKgB,KAAL,CAAWX,QAAjC,CAAvC;AACA,aAAKT,KAAL,CAAWqB,UAAX,CAAsBF,YAAtB;AACA,aAAKhB,QAAL,CAAc;AACZC,UAAAA,QAAQ,EAAE,EADE;AAEZK,UAAAA,QAAQ,EAAE,EAFE;AAGZI,UAAAA,OAAO,EAAE;AAHG,SAAd;AAMD,OATD,CASE,OAAOS,KAAP,EAAc;AACd,aAAKnB,QAAL,CAAc;AACZM,UAAAA,QAAQ,EAAE,EADE;AAEZG,UAAAA,OAAO,EAAE,IAFG;AAGZD,UAAAA,YAAY,EAAEW,KAAK,CAACC;AAHR,SAAd;AAKD;AACF,KApDwC;;AAEvC,SAAKH,KAAL,GAAa;AACXhB,MAAAA,QAAQ,EAAE,EADC;AAEXK,MAAAA,QAAQ,EAAE,EAFC;AAGXG,MAAAA,OAAO,EAAE,KAHE;AAIXD,MAAAA,YAAY,EAAE,EAJH;AAKXE,MAAAA,OAAO,EAAC;AALG,KAAb;AAOD,GAX6F,CAa9F;AACA;;;AA0CAW,EAAAA,MAAM,GAAG;AACP,QAAG,CAAC,KAAKJ,KAAL,CAAWR,OAAf,EAAuB;AACvB,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAM,QAAA,QAAQ,EAAE,KAAKE,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAO,QAAA,QAAQ,EAAE,KAAKb,WAAtB;AAAmC,QAAA,KAAK,EAAE,KAAKmB,KAAL,CAAWhB,QAArD;AAA+D,QAAA,IAAI,EAAC,MAApE;AAA2E,QAAA,IAAI,EAAC,UAAhF;AAA2F,QAAA,EAAE,EAAC,UAA9F;AAAyG,QAAA,WAAW,EAAC,eAArH;AAAqI,QAAA,QAAQ,MAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEE;AAAO,QAAA,QAAQ,EAAE,KAAKG,WAAtB;AAAmC,QAAA,KAAK,EAAE,KAAKa,KAAL,CAAWX,QAArD;AAA+D,QAAA,IAAI,EAAC,UAApE;AAA+E,QAAA,IAAI,EAAC,UAApF;AAA+F,QAAA,EAAE,EAAC,UAAlG;AAA6G,QAAA,WAAW,EAAC,UAAzH;AAAoI,QAAA,QAAQ,MAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CALJ,eASI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CATJ,CADA,EAcC,KAAKW,KAAL,CAAWR,OAAX,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK,KAAKQ,KAAL,CAAWT,YAAhB,CAdvB,CADF;AAkBC,KAnBD,MAoBI;AAAE,0BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAAP;AAA8C;AACrD;;AA9E6F","sourcesContent":["import React from 'react';\nimport { User } from '../models/User';\nimport { login } from '../api/LibraryClient';\n// import { Redirect } from 'react-router';\n\n//the updateUser prop takes a function that takes a user and returns voide\n// it will match updateUser in App.\ninterface ILoginComponentProps {\n  updateUser: (user:User) => void;\n}\n\ninterface ILoginComponentState {\n  username: string;\n  password: string;\n  isError: boolean;\n  errorMessage: string;\n  success:boolean;\n}\n\nexport class LoginComponent extends React.Component<ILoginComponentProps, ILoginComponentState> {\n\n  constructor(props: ILoginComponentProps) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      isError: false,\n      errorMessage: '',\n      success:false\n    }\n  }\n\n  //We'll need a few functions to modify individual pieces of our state\n  // These take change events\n  setUsername = (un: any) => {\n    this.setState({\n      username: un.currentTarget.value,\n    })\n  }\n\n  setPassword = (pw: any) => {\n    this.setState({\n      password: pw.currentTarget.value,\n    })\n  }\n\n  clearError = () => {\n    this.setState({\n      errorMessage: '',\n      isError: false,\n      success: false\n    })\n  }\n\n  attemptLogin = async (event: any) => {\n    event.preventDefault();\n    console.log(event);\n    try {\n      const loggedInUser : User = await login(this.state.username, this.state.password);\n      this.props.updateUser(loggedInUser);\n      this.setState({\n        username: '',\n        password: '',\n        success: true\n      });\n    \n    } catch (error) {\n      this.setState({\n        password: '',\n        isError: true,\n        errorMessage: error.message,\n      })\n    }\n  }\n\n  render() {\n    if(!this.state.isError){\n    return (\n      <div>\n      <form onSubmit={this.attemptLogin}>\n        <div>\n          <label>Username</label>\n          <input onChange={this.setUsername} value={this.state.username} type=\"text\" name=\"username\" id=\"username\" placeholder=\"your username\" required/>\n          </div>\n          <div>\n          <label>Password</label>\n            <input onChange={this.setPassword} value={this.state.password} type=\"password\" name=\"password\" id=\"password\" placeholder=\"password\" required />\n          </div>\n          <div className=\"notdiv\">\n            <input type=\"submit\" value=\"submit\" />\n          </div>\n      </form>\n     { this.state.isError && <h3>{this.state.errorMessage}</h3>}\n      </div>\n    );\n    }\n    else{ return <h3>you've logged in successfuly</h3> }\n  }\n\n}"]},"metadata":{},"sourceType":"module"}