{"ast":null,"code":"var _jsxFileName = \"/Users/Shadow/react1/myapp/src/components/SingleUser.tsx\";\nimport React from 'react';\nexport class SingleUser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {// userid : this.props.userid,\n    };\n  } // constructor(props: any) {\n  //   super(props);\n  //   this.state = {\n  //       // oneMember: [],\n  //     isError: false,\n  //     errorMessage: '',\n  //     userid: '',\n  //   }\n  // }\n  // async componentDidMount() {\n  //   try {\n  //     this.setState({\n  //       single: await getSingle(1)\n  //     })\n  //   } catch (e) {\n  //     // We set the error information in our state.\n  //     // This will let us render something about the error to the end user\n  //     this.setState({\n  //       isError: true,\n  //       errorMessage: e.message,\n  //     })\n  //   }\n  // }\n  // clearError = () => {\n  //   this.setState({\n  //     isError: false,\n  //     errorMessage: '',\n  //   });\n  // }\n\n\n  async componentWillUpdate() {\n    //This runs when the component updates on the actual DOM\n    this.setState({\n      Response: this.props.userid\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }\n    }, this.state.Response); //     const data =  this.state.single;\n    //     if(this.state.isError) {\n    //       return(\n    // <div key={data.id} className=\"col\">\n    // <span>userid:  {data.id}</span>  \n    // <span>username:  {data.username}</span>  \n    // <span>password:  {data.password}</span>  \n    // <span>firstname: {data.firstname}</span>  \n    // <span>lastname: {data.lastname}</span>  \n    // <span>email: {data.email}</span>  \n    // <span>role: {data.role}</span>  \n    // </div>\n    //       )\n    //     } \n    // else {\n    // //map to a string so quicktable can render this. \n    // switch(this.state.errorMessage){\n    //   case \"Request failed with status code 402\":\n    //      return <h3>login required</h3>\n    //   case \"Request failed with status code 403\":\n    //      return  <h3>Finance manager role is required!</h3>\n    //   default :\n    // //      return <h3>unknown </h3>\n    // }\n    //     }\n  }\n\n}","map":{"version":3,"sources":["/Users/Shadow/react1/myapp/src/components/SingleUser.tsx"],"names":["React","SingleUser","Component","constructor","props","state","componentWillUpdate","setState","Response","userid","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAWA,OAAO,MAAMC,UAAN,SAAyBD,KAAK,CAACE,SAA/B,CAA4D;AAEnEC,EAAAA,WAAW,CAACC,KAAD,EAAW;AACpB,UAAMA,KAAN;AACE,SAAKC,KAAL,GAAa,CACX;AADW,KAAb;AAKH,GATkE,CAWjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMC,mBAAN,GAA4B;AAC1B;AACA,SAAKC,QAAL,CAAc;AACZC,MAAAA,QAAQ,EAAG,KAAKJ,KAAL,CAAWK;AADV,KAAd;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKL,KAAL,CAAWG,QAAhB,CADA,CADO,CAIX;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEG;;AAtFgE","sourcesContent":["import React from 'react';\nimport { User } from '../models/User';\nimport { getSingle } from '../api/LibraryClient';\n// import { QuickTable } from './QuickTable';\n\ninterface IDisplayState {\n  userid:number;\n  // oneMember:User;\n}\n\n\nexport class SingleUser extends React.Component<IDisplayState,any> {\n\nconstructor(props:any){\n  super(props)\n    this.state = {\n      // userid : this.props.userid,\n    }\n    \n \n}\n  \n  // constructor(props: any) {\n  //   super(props);\n  //   this.state = {\n  //       // oneMember: [],\n  //     isError: false,\n  //     errorMessage: '',\n  //     userid: '',\n  //   }\n  // }\n\n  // async componentDidMount() {\n  //   try {\n  //     this.setState({\n  //       single: await getSingle(1)\n  //     })\n  //   } catch (e) {\n  //     // We set the error information in our state.\n  //     // This will let us render something about the error to the end user\n  //     this.setState({\n        \n  //       isError: true,\n  //       errorMessage: e.message,\n  //     })\n  //   }\n  // }\n\n  // clearError = () => {\n  //   this.setState({\n  //     isError: false,\n  //     errorMessage: '',\n  //   });\n  // }\n\n  async componentWillUpdate() {\n    //This runs when the component updates on the actual DOM\n    this.setState({\n      Response: (this.props.userid)\n    });\n  }\n\n  render() {\n    return(\n    <h1>{this.state.Response}</h1>\n    )\n//     const data =  this.state.single;\n\n//     if(this.state.isError) {\n\n//       return(\n// <div key={data.id} className=\"col\">\n// <span>userid:  {data.id}</span>  \n// <span>username:  {data.username}</span>  \n// <span>password:  {data.password}</span>  \n// <span>firstname: {data.firstname}</span>  \n// <span>lastname: {data.lastname}</span>  \n// <span>email: {data.email}</span>  \n// <span>role: {data.role}</span>  \n// </div>\n//       )\n      \n//     } \n// else {\n      \n// //map to a string so quicktable can render this. \n// switch(this.state.errorMessage){\n//   case \"Request failed with status code 402\":\n//      return <h3>login required</h3>\n//   case \"Request failed with status code 403\":\n//      return  <h3>Finance manager role is required!</h3>\n//   default :\n// //      return <h3>unknown </h3>\n// }\n        \n//     }\n    \n  }\n  \n}"]},"metadata":{},"sourceType":"module"}