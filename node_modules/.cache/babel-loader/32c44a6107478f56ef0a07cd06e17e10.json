{"ast":null,"code":"var _jsxFileName = \"/Users/Shadow/Desktop/project-2-react/src/components/pComponent.tsx\";\nimport React from 'react';\nimport { posts } from '../api/LibraryClient';\nimport { Postview } from './views/viewPost';\nexport default class Posts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      single: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({\n        single: await posts(),\n        isError: false\n      });\n    } catch (e) {\n      // We set the error information in our state.\n      // This will let us render something about the error to the end user\n      this.setState({\n        isError: true,\n        errorMessage: e.message\n      }); // }\n    }\n  }\n\n  render() {\n    return this.state.members.map((u, x) => {\n      return /*#__PURE__*/React.createElement(Postview, {\n        key: x,\n        thekey: x,\n        id: u.postid,\n        author: u.author,\n        postTitle: u.postTitle,\n        postDescription: u.postDescription,\n        status: u.status,\n        resolver: u.resolver,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }\n      });\n    });\n  }\n\n}","map":{"version":3,"sources":["/Users/Shadow/Desktop/project-2-react/src/components/pComponent.tsx"],"names":["React","posts","Postview","Posts","Component","constructor","props","state","single","componentDidMount","setState","isError","e","errorMessage","message","render","members","map","u","x","postid","author","postTitle","postDescription","status","resolver"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,QAAsB,sBAAtB;AAEA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,eAAe,MAAMC,KAAN,SAAoBH,KAAK,CAACI,SAA1B,CAA6C;AAE5DC,EAAAA,WAAW,CAACC,KAAD,EAAW;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE;AADC,KAAb;AAIH;;AAED,QAAMC,iBAAN,GAA0B;AACtB,QAAI;AACA,WAAKC,QAAL,CAAc;AACZF,QAAAA,MAAM,EAAE,MAAMP,KAAK,EADP;AAEZU,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KALH,CAKI,OAAOC,CAAP,EAAU;AACV;AACA;AACA,WAAKF,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE,IADG;AAEZE,QAAAA,YAAY,EAAED,CAAC,CAACE;AAFJ,OAAd,EAHU,CAOZ;AACD;AACJ;;AACGC,EAAAA,MAAM,GAAE;AACJ,WACM,KAAKR,KAAL,CAAWS,OAAX,CAAmBC,GAAnB,CAAuB,CAACC,CAAD,EAAYC,CAAZ,KAAwB;AAC7C,0BACI,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,CAAf;AAAkB,QAAA,MAAM,EAAEA,CAA1B;AAA6B,QAAA,EAAE,EAAED,CAAC,CAACE,MAAnC;AAA2C,QAAA,MAAM,EAAEF,CAAC,CAACG,MAArD;AAA6D,QAAA,SAAS,EAAEH,CAAC,CAACI,SAA1E;AACA,QAAA,eAAe,EAAEJ,CAAC,CAACK,eADnB;AACoC,QAAA,MAAM,EAAEL,CAAC,CAACM,MAD9C;AAEA,QAAA,QAAQ,EAAEN,CAAC,CAACO,QAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAMK,KAPP,CADN;AAYH;;AAvCuD","sourcesContent":["import React from 'react';\nimport { posts } from '../api/LibraryClient';\nimport { User } from '../models/User';\nimport { Postview } from './views/viewPost';\n\nexport default class Posts extends React.Component<any,any> {\n\nconstructor(props:any){\n    super(props);\n    this.state = {\n        single: [],\n\n    }\n}\n\nasync componentDidMount() {\n    try {\n        this.setState({\n          single: await posts(),\n          isError: false,\n        })\n      } catch (e) {\n        // We set the error information in our state.\n        // This will let us render something about the error to the end user\n        this.setState({\n          isError: true,\n          errorMessage: e.message,\n        })\n      // }\n    }   \n}\n    render(){\n        return(\n             (this.state.members.map((u:User|any,x:number) =>{\n                return(\n                    <Postview key={x} thekey={x} id={u.postid} author={u.author} postTitle={u.postTitle}\n                    postDescription={u.postDescription} status={u.status}\n                    resolver={u.resolver} />\n           \n                    )      \n                    })\n                    \n        )\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}