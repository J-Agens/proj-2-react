{"ast":null,"code":"var _jsxFileName = \"/Users/Shadow/react1/myapp/src/components/SingleUser.tsx\";\nimport React from 'react';\nimport { getSingle } from '../api/LibraryClient'; // import { QuickTable } from './QuickTable';\n\nexport class SingleUser extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateUser = user => {\n      this.setState({\n        Onemembers: user\n      });\n    };\n\n    this.clearError = () => {\n      this.setState({\n        isError: false,\n        errorMessage: ''\n      });\n    };\n\n    this.state = {\n      Onemembers: '',\n      isError: false,\n      errorMessage: '',\n      userid: ''\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({\n        Onemembers: await getSingle(this.state.userid)\n      });\n    } catch (e) {\n      // We set the error information in our state.\n      // This will let us render something about the error to the end user\n      this.setState({\n        isError: true,\n        errorMessage: e.message\n      });\n    }\n  }\n\n  render() {\n    if (this.state.isError) {\n      switch (this.state.errorMessage) {\n        case \"Request failed with status code 402\":\n          return /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 23\n            }\n          }, \"login required\");\n\n        case \"Request failed with status code 403\":\n          return /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 24\n            }\n          }, \"Finance manager role is required!\");\n\n        default:\n          return /*#__PURE__*/React.createElement(\"h3\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 23\n            }\n          }, \"unknown Error\");\n      }\n    } else {\n      const data = this.state.Onemembers;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        key: data.id,\n        className: \"col\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 5\n        }\n      }, \"userid:  \", data.id), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 5\n        }\n      }, \"username:  \", data.username), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 5\n        }\n      }, \"password:  \", data.password), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 5\n        }\n      }, \"firstname: \", data.firstname), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 5\n        }\n      }, \"lastname: \", data.lastname), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 5\n        }\n      }, \"email: \", data.email), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 5\n        }\n      }, \"role: \", data.role));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/Shadow/react1/myapp/src/components/SingleUser.tsx"],"names":["React","getSingle","SingleUser","Component","constructor","props","updateUser","user","setState","Onemembers","clearError","isError","errorMessage","state","userid","componentDidMount","e","message","render","data","id","username","password","firstname","lastname","email","role"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,sBAA1B,C,CACA;;AAYA,OAAO,MAAMC,UAAN,SAAyBF,KAAK,CAACG,SAA/B,CAA6E;AAElFC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;;AADsB,SAyBxBC,UAzBwB,GAyBVC,IAAD,IAAc;AACzB,WAAKC,QAAL,CAAc;AACZC,QAAAA,UAAU,EAAEF;AADA,OAAd;AAGD,KA7BuB;;AAAA,SA+BxBG,UA/BwB,GA+BX,MAAM;AACjB,WAAKF,QAAL,CAAc;AACZG,QAAAA,OAAO,EAAE,KADG;AAEZC,QAAAA,YAAY,EAAE;AAFF,OAAd;AAID,KApCuB;;AAEtB,SAAKC,KAAL,GAAa;AACTJ,MAAAA,UAAU,EAAE,EADH;AAEXE,MAAAA,OAAO,EAAE,KAFE;AAGXC,MAAAA,YAAY,EAAE,EAHH;AAIXE,MAAAA,MAAM,EAAE;AAJG,KAAb;AAMD;;AAED,QAAMC,iBAAN,GAA0B;AACxB,QAAI;AACF,WAAKP,QAAL,CAAc;AACZC,QAAAA,UAAU,EAAG,MAAMR,SAAS,CAAC,KAAKY,KAAL,CAAWC,MAAZ;AADhB,OAAd;AAGD,KAJD,CAIE,OAAOE,CAAP,EAAU;AACV;AACA;AACA,WAAKR,QAAL,CAAc;AACZG,QAAAA,OAAO,EAAE,IADG;AAEZC,QAAAA,YAAY,EAAEI,CAAC,CAACC;AAFJ,OAAd;AAID;AACF;;AAeDC,EAAAA,MAAM,GAAG;AAEP,QAAG,KAAKL,KAAL,CAAWF,OAAd,EAAuB;AACnB,cAAO,KAAKE,KAAL,CAAWD,YAAlB;AACI,aAAK,qCAAL;AACG,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAP;;AACH,aAAK,qCAAL;AACG,8BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iDAAR;;AACH;AACG,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAP;AANP;AAQH,KATD,MAUC;AACD,YAAMO,IAAI,GAAI,KAAKN,KAAL,CAAWJ,UAAzB;AACA,0BACA;AAAK,QAAA,GAAG,EAAEU,IAAI,CAACC,EAAf;AAAmB,QAAA,SAAS,EAAC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAgBD,IAAI,CAACC,EAArB,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkBD,IAAI,CAACE,QAAvB,CAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkBF,IAAI,CAACG,QAAvB,CAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAkBH,IAAI,CAACI,SAAvB,CAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAiBJ,IAAI,CAACK,QAAtB,CALA,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAcL,IAAI,CAACM,KAAnB,CANA,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAaN,IAAI,CAACO,IAAlB,CAPA,CADA;AAWH;AAEE;;AAnEiF","sourcesContent":["import React from 'react';\nimport { User } from '../models/User';\nimport { getSingle } from '../api/LibraryClient';\n// import { QuickTable } from './QuickTable';\n\ninterface DisplayState {\n  Onemembers: User[]|any;\n  isError: boolean;\n  errorMessage: string;\n  userid : any;\n  \n}\ninterface ILoginComponentProps {\n  updateUser: (user:User) => void;\n}\nexport class SingleUser extends React.Component<ILoginComponentProps, DisplayState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n        Onemembers: '',\n      isError: false,\n      errorMessage: '',\n      userid: ''\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({\n        Onemembers : await getSingle(this.state.userid)\n      })\n    } catch (e) {\n      // We set the error information in our state.\n      // This will let us render something about the error to the end user\n      this.setState({\n        isError: true,\n        errorMessage: e.message,\n      })\n    }\n  }\n\n  updateUser = (user:any) => {\n    this.setState({\n      Onemembers: user,\n    })\n  }\n\n  clearError = () => {\n    this.setState({\n      isError: false,\n      errorMessage: '',\n    });\n  }\n\n  render() {\n      \n    if(this.state.isError) {\n        switch(this.state.errorMessage){\n            case \"Request failed with status code 402\":\n               return <h3>login required</h3>\n            case \"Request failed with status code 403\":\n               return  <h3>Finance manager role is required!</h3>\n            default :\n               return <h3>unknown Error</h3>\n        }\n    } \nelse {\n    const data =  this.state.Onemembers;\n    return (  \n    <div key={data.id} className=\"col\">\n    <span>userid:  {data.id}</span>  \n    <span>username:  {data.username}</span>  \n    <span>password:  {data.password}</span>  \n    <span>firstname: {data.firstname}</span>  \n    <span>lastname: {data.lastname}</span>  \n    <span>email: {data.email}</span>  \n    <span>role: {data.role}</span>  \n    </div>\n    )   \n}\n    \n  }\n  \n}"]},"metadata":{},"sourceType":"module"}