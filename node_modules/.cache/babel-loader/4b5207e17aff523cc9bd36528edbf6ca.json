{"ast":null,"code":"var _jsxFileName = \"/Users/Shadow/react1/myapp/src/App.tsx\";\n// This doesn't strictly need to be called App, its just the top level component.\nimport React from 'react';\nimport { HelloWorld } from './components/HelloWorld';\nimport { Message } from './components/Message';\nimport { ClickerCounter } from './components/ClickerCounter';\nimport { QuickTable } from './components/QuickTable';\nimport { NumberTableBuilder } from './components/NumberTableBuilder';\nimport { SwapiQuery } from './components/SwapiQuery';\nimport { BooksDisplay } from './components/BooksDisplay';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { MultiRoute } from './components/MultiRoute';\nimport { NavbarComponent } from './components/NavbarComponent'; // import { Example } from './components/NavReactstrap'\n\nimport { LoginComponent } from './components/LoginComponent'; // App is going to be a component, we can make components with functions or with classes\n// function components used to have less functionality, but now we have fully featured\n// function components with something called \"hooks\"\n// A few rules for components:\n// must be function or class\n// must start with a capital letter (UpperCamelCase)\n// must return(function) or render(class) some JSX\n// that JSX can only have one root level tag -- can't return siblings.\n\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateUser = user => {\n      this.setState({\n        loggedInUser: user\n      });\n    };\n\n    this.state = {\n      loggedInUser: null\n    };\n  }\n\n  render() {\n    // const myMessage = 'My variable message';\n    return (\n      /*#__PURE__*/\n      // This is a fragment, lets us return siblings.\n      React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 5\n        }\n      }, \"Hello \", this.state.loggedInUser ? this.state.loggedInUser.username : 'guest'), /*#__PURE__*/React.createElement(Router, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(NavbarComponent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        path: \"/hello\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(HelloWorld, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Route, {\n        path: \"/myMessage\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Message, {\n        message: \"My string Message\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Route, {\n        path: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(LoginComponent, {\n        updateUser: this.updateUser,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(Route, {\n        path: \"/swapi\",\n        component: SwapiQuery,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/numbertable\",\n        component: NumberTableBuilder,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/clicker\",\n        render: props => {\n          return /*#__PURE__*/React.createElement(ClickerCounter, Object.assign({}, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 57\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/quicktable\",\n        render: props => {\n          return /*#__PURE__*/React.createElement(QuickTable, Object.assign({\n            rows: ['some', 'props', 'rows']\n          }, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 58\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/books\",\n        render: props => {\n          return /*#__PURE__*/React.createElement(BooksDisplay, Object.assign({}, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 53\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/multi\",\n        render: props => {\n          return /*#__PURE__*/React.createElement(MultiRoute, Object.assign({}, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 53\n            }\n          }));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }\n      }))))\n    );\n  }\n\n}","map":{"version":3,"sources":["/Users/Shadow/react1/myapp/src/App.tsx"],"names":["React","HelloWorld","Message","ClickerCounter","QuickTable","NumberTableBuilder","SwapiQuery","BooksDisplay","BrowserRouter","Router","Route","Switch","MultiRoute","NavbarComponent","LoginComponent","App","Component","constructor","props","updateUser","user","setState","loggedInUser","state","render","username"],"mappings":"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","sourcesContent":["// This doesn't strictly need to be called App, its just the top level component.\nimport React from 'react';\nimport { HelloWorld } from './components/HelloWorld';\nimport { Message } from './components/Message';\nimport { ClickerCounter } from './components/ClickerCounter';\nimport { QuickTable } from './components/QuickTable';\nimport { NumberTableBuilder } from './components/NumberTableBuilder';\nimport { SwapiQuery } from './components/SwapiQuery';\nimport { BooksDisplay } from './components/BooksDisplay';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { MultiRoute } from './components/MultiRoute';\nimport { NavbarComponent } from './components/NavbarComponent';\n// import { Example } from './components/NavReactstrap'\nimport { User } from './models/User';\nimport { LoginComponent } from './components/LoginComponent';\n\n\n// App is going to be a component, we can make components with functions or with classes\n// function components used to have less functionality, but now we have fully featured\n// function components with something called \"hooks\"\n\n// A few rules for components:\n// must be function or class\n// must start with a capital letter (UpperCamelCase)\n// must return(function) or render(class) some JSX\n// that JSX can only have one root level tag -- can't return siblings.\n\ninterface IAppState {\n  loggedInUser: User | null;\n}\n\nexport class App extends React.Component<any, IAppState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      loggedInUser: null,\n    }\n  }\n\n  updateUser = (user:User) => {\n    this.setState({\n      loggedInUser: user,\n    })\n  }\n\n  render() {\n\n    // const myMessage = 'My variable message';\n\n    return (\n    // This is a fragment, lets us return siblings.\n    <>\n    {/* <h1>Hello JSX + React</h1> */}\n    <h1>Hello {this.state.loggedInUser ? this.state.loggedInUser.username : 'guest'}</h1>\n    <Router>\n      {/* Switch contains routes, only one of which will be rendered.  Whichever route\n      has the first matching path will be the one that gets rendered.  If you have some default\n      route at the top it prevent lower routes from rendering */}\n      <NavbarComponent />\n      <Switch>\n        {/* Inside the switch we make Route components, which essentially tie a url path\n        to a Reach component. */}\n        {/* This approach to making Routes lets us pass a component its props, like message */}\n        <Route path='/hello'>\n          <HelloWorld />\n        </Route>\n        <Route path='/myMessage'>\n          <Message message='My string Message' />\n        </Route>\n        <Route path=\"/login\">\n          <LoginComponent updateUser={this.updateUser} />\n        </Route>\n        {/* This approach doesn't let us pass props to SwapiQuery, but it gets us a different benefit.\n          This will let us access props from react-router : history, match and location in our component.\n          Not especially useful for SwapiQuery but useful in many other cases.  You can change the component\n          being displayed at a route based on the url. i.e. /users/1 displays user 1 in a component,\n          /users/2 displays user 2 in a component.\n         */}\n        <Route path='/swapi' component={SwapiQuery}></Route>\n        <Route path='/numbertable' component={NumberTableBuilder}></Route>\n        {/* The last way makes use of a pattern called 'render props', where you pass in a function\n        as a prop that tells a component how to render.  It looks a little strange, but it lets us use\n        both our own props and the react-router props.  Its like taking your render() function as a prop\n        instead of writing it in the class.  If you're writing a component that uses render props you do still\n        need to write a render() method, you just call the render prop in that method */}\n        <Route path='/clicker' render={(props)=>{return <ClickerCounter {...props} />}} />\n        {/* We can alsograb specific props instead of using {...props} */}\n      <Route path='/quicktable' render={(props)=>{return <QuickTable rows={['some','props','rows']} {...props} /> }}/>\n      <Route path='/books' render={(props)=>{return <BooksDisplay {...props} />}} />\n      <Route path='/multi' render={(props)=>{return <MultiRoute {...props} />}} />\n\n    </Switch>\n    </Router>\n    {/* <Example /> */}\n    </>\n    );\n  }\n\n}"]},"metadata":{},"sourceType":"module"}