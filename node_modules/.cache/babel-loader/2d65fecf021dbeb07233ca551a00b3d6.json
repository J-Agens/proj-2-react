{"ast":null,"code":"var _jsxFileName = \"/Users/Shadow/react1/myapp/src/components/GetAllreimbursements.tsx\";\nimport React from 'react';\nimport { Allreimbursements } from '../api/LibraryClient'; // import { QuickTable } from './QuickTable';\n\nexport class getAllreimbursements extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.clearError = () => {\n      this.setState({\n        isError: false,\n        errorMessage: ''\n      });\n    };\n\n    this.state = {\n      members: [],\n      isError: false,\n      errorMessage: ''\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({\n        members: await Allreimbursements()\n      });\n    } catch (e) {\n      // We set the error information in our state.\n      // This will let us render something about the error to the end user\n      this.setState({\n        isError: true,\n        errorMessage: e.message\n      });\n    }\n  }\n\n  render() {\n    if (!this.state.isError) {\n      //map to a string so quicktable can render this.\n      return this.state.members.map(u => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: u.reimbursementId,\n          className: \"col\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }\n        }, \"reimbursementId:  \", u.reimbursementId), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 11\n          }\n        }, \"author:  \", u.author), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 11\n          }\n        }, \"Amount:  \", u.amount), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 11\n          }\n        }, \"date submitted: \", u.dateSubmitted), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 11\n          }\n        }, \"date resolved: \", u.dateResolved), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }\n        }, \"description: \", u.description), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 11\n          }\n        }, \"resolver: \", u.resolver), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }\n        }, \"status: \", u.status), /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 11\n          }\n        }, \"type: \", u.type));\n      });\n    } else {\n      return /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, \"Finance manager role is required!\");\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/Shadow/react1/myapp/src/components/GetAllreimbursements.tsx"],"names":["React","Allreimbursements","getAllreimbursements","Component","constructor","props","clearError","setState","isError","errorMessage","state","members","componentDidMount","e","message","render","map","u","reimbursementId","author","amount","dateSubmitted","dateResolved","description","resolver","status","type"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,iBAAT,QAAkC,sBAAlC,C,CACA;;AAQA,OAAO,MAAMC,oBAAN,SAAmCF,KAAK,CAACG,SAAzC,CAA4E;AAEjFC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;;AADsB,SA2BxBC,UA3BwB,GA2BX,MAAM;AACjB,WAAKC,QAAL,CAAc;AACZC,QAAAA,OAAO,EAAE,KADG;AAEZC,QAAAA,YAAY,EAAE;AAFF,OAAd;AAID,KAhCuB;;AAEtB,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,EADE;AAEXH,MAAAA,OAAO,EAAE,KAFE;AAGXC,MAAAA,YAAY,EAAE;AAHH,KAAb;AAKD;;AAED,QAAMG,iBAAN,GAA0B;AACxB,QAAI;AACF,WAAKL,QAAL,CAAc;AACZI,QAAAA,OAAO,EAAE,MAAMV,iBAAiB;AADpB,OAAd;AAGD,KAJD,CAIE,OAAOY,CAAP,EAAU;AACV;AACA;AACA,WAAKN,QAAL,CAAc;AAEZC,QAAAA,OAAO,EAAE,IAFG;AAGZC,QAAAA,YAAY,EAAEI,CAAC,CAACC;AAHJ,OAAd;AAKD;AACF;;AAWDC,EAAAA,MAAM,GAAG;AAEP,QAAG,CAAC,KAAKL,KAAL,CAAWF,OAAf,EAAwB;AACtB;AAEA,aAAO,KAAKE,KAAL,CAAWC,OAAX,CAAmBK,GAAnB,CAAwBC,CAAD,IAAmB;AAClD,4BACK;AAAK,UAAA,GAAG,EAAEA,CAAC,CAACC,eAAZ;AAA6B,UAAA,SAAS,EAAC,KAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAyBD,CAAC,CAACC,eAA3B,CADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAgBD,CAAC,CAACE,MAAlB,CAFA,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAgBF,CAAC,CAACG,MAAlB,CAHA,eAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAuBH,CAAC,CAACI,aAAzB,CAJA,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAsBJ,CAAC,CAACK,YAAxB,CALA,eAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAoBL,CAAC,CAACM,WAAtB,CANA,eAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAiBN,CAAC,CAACO,QAAnB,CAPA,eAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAeP,CAAC,CAACQ,MAAjB,CARA,eASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAaR,CAAC,CAACS,IAAf,CATA,CADL;AAaK,OAdG,CAAP;AAeD,KAlBD,MAmBC;AAEL,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAAR;AAEK;AAEF;;AA/DgF","sourcesContent":["import React from 'react';\nimport { Reimbursement } from '../models/Reimbursement';\nimport { Allreimbursements } from '../api/LibraryClient';\n// import { QuickTable } from './QuickTable';\n\ninterface IBooksDisplayState {\n  members: Reimbursement[];\n  isError: boolean;\n  errorMessage: string;\n}\n\nexport class getAllreimbursements extends React.Component<any, IBooksDisplayState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      members: [],\n      isError: false,\n      errorMessage: '',\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({\n        members: await Allreimbursements()\n      })\n    } catch (e) {\n      // We set the error information in our state.\n      // This will let us render something about the error to the end user\n      this.setState({\n        \n        isError: true,\n        errorMessage: e.message,\n      })\n    }\n  }\n\n  \n\n  clearError = () => {\n    this.setState({\n      isError: false,\n      errorMessage: '',\n    });\n  }\n\n  render() {\n      \n    if(!this.state.isError) {\n      //map to a string so quicktable can render this.\n      \n      return this.state.members.map((u:Reimbursement)=>{\n     return(\n          <div key={u.reimbursementId} className=\"col\">\n          <span>reimbursementId:  {u.reimbursementId}</span>  \n          <span>author:  {u.author}</span>  \n          <span>Amount:  {u.amount}</span>  \n          <span>date submitted: {u.dateSubmitted}</span>  \n          <span>date resolved: {u.dateResolved}</span>  \n          <span>description: {u.description}</span>  \n          <span>resolver: {u.resolver}</span>  \n          <span>status: {u.status}</span>  \n          <span>type: {u.type}</span>  \n          </div>\n         )      \n         })\n    } \nelse {\n      \nreturn  <h3>Finance manager role is required!</h3>\n        \n    }\n    \n  }\n  \n}"]},"metadata":{},"sourceType":"module"}