{"ast":null,"code":"var _jsxFileName = \"/Users/Shadow/Desktop/project-2-react/src/components/postComponenet.tsx\";\nimport React from 'react';\nimport { All } from './posts/PosAll';\nimport { CreateNew } from './posts/create';\nimport { UpdatingPosts } from './posts/patching';\nimport { Authored } from './posts/author';\nimport { Stat } from './posts/bystatus'; // interface IAppState {\n//     id:number|any;\n//     userRole:string|any;\n//     // userid:number;\n//     // single: any;\n//     // levelup: Post[] | any;\n//   }\n// //   interface IApppProps {\n// //     id:number|any;\n// //   }\n\nexport default class PostComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showIn = () => {\n      this.setState({\n        random: true,\n        random1: false,\n        randomx1: false,\n        randomxx1: false,\n        random2: false,\n        random3: false,\n        random4: false\n      });\n    };\n\n    this.showAll = () => {\n      this.setState({\n        random: false,\n        random1: true,\n        random2: false,\n        random3: false,\n        random4: false,\n        randomx1: false,\n        randomxx1: false\n      });\n    };\n\n    this.showAllx = () => {\n      this.setState({\n        random: false,\n        randomx1: true,\n        randomxx1: false,\n        random1: false,\n        random2: false,\n        random3: false,\n        random4: false\n      });\n    };\n\n    this.showAllxx = () => {\n      this.setState({\n        random: false,\n        randomx1: false,\n        randomxx1: true,\n        random1: false,\n        random2: false,\n        random3: false,\n        random4: false\n      });\n    };\n\n    this.showS = () => {\n      this.setState({\n        random3: true,\n        random: false,\n        random1: false,\n        randomx1: false,\n        randomxx1: false,\n        random2: false,\n        random4: false,\n        value1: 1,\n        value2: 1\n      });\n    };\n\n    this.showUp = () => {\n      this.setState({\n        random: false,\n        random2: true,\n        random1: false,\n        random3: false,\n        random4: false,\n        randomx1: false,\n        randomxx1: false,\n        value1: 1,\n        value2: 1\n      });\n    };\n\n    this.showP = () => {\n      this.setState({\n        random: false,\n        random2: false,\n        random1: false,\n        random3: false,\n        random4: true,\n        randomx1: false,\n        randomxx1: false\n      });\n    };\n\n    this.changevalue = () => {\n      this.setState({\n        value: 1\n      });\n    };\n\n    this.updateUserxx = user => {\n      this.setState({\n        levelup: user\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        value1: e.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      this.setState({\n        value1: this.state.input\n      });\n      event.preventDefault();\n    };\n\n    this.handleChange2 = e => {\n      this.setState({\n        value2: e.target.value\n      });\n    };\n\n    this.handleSubmit2 = event => {\n      this.setState({\n        value2: this.state.input2\n      });\n      event.preventDefault();\n    };\n\n    this.state = {\n      id: this.props.id,\n      current: this.props.id,\n      userRole: this.props.userRole,\n      value1: 1,\n      input: null,\n      value2: 1,\n      input2: null,\n      handleChange: this.handleChange.bind(this),\n      handleSubmit: this.handleSubmit.bind(this),\n      handleChange2: this.handleChange2.bind(this),\n      handleSubmit2: this.handleSubmit2.bind(this),\n      random: false,\n      random1: false,\n      randomx1: false,\n      randomxx1: false,\n      random2: false,\n      random3: false,\n      random4: false,\n      single: []\n    };\n  } // shouldComponentUpdate(nextProps: any, nextState: any) {\n  //     return this.state.value !== nextState.value;\n  //   }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, (this.props.userRole === 1 || this.props.userRole === 2) && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.showUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, \" create new \"), /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.showAll,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, \"All \"), /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.showIn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, \"by ID \"), /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.showS,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }, \"by status \"), /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.showP,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, \"update \")), this.props.userRole === 3 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.showUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, \" create new \"), /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.showAllx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 13\n      }\n    }, \"Pending \"), /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.showAllxx,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, \"Resolved \")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"hideme\",\n      className: \"wrapmein\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    }, this.state.random && /*#__PURE__*/React.createElement(Authored, {\n      userid: this.state.value1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 36\n      }\n    }), this.state.random3 && /*#__PURE__*/React.createElement(Stat, {\n      who: this.props.userRole,\n      resolverr: this.props.xid,\n      single: this.state.single,\n      userid: this.state.value2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 37\n      }\n    }), this.state.random1 && /*#__PURE__*/React.createElement(All, {\n      current: this.state.current,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 37\n      }\n    }), this.state.random2 && /*#__PURE__*/React.createElement(CreateNew, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 37\n      }\n    }), this.state.random4 && /*#__PURE__*/React.createElement(UpdatingPosts, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 37\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/Shadow/Desktop/project-2-react/src/components/postComponenet.tsx"],"names":["React","All","CreateNew","UpdatingPosts","Authored","Stat","PostComponent","Component","constructor","props","showIn","setState","random","random1","randomx1","randomxx1","random2","random3","random4","showAll","showAllx","showAllxx","showS","value1","value2","showUp","showP","changevalue","value","updateUserxx","user","levelup","handleChange","e","target","handleSubmit","event","state","input","preventDefault","handleChange2","handleSubmit2","input2","id","current","userRole","bind","single","render","xid"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {All} from './posts/PosAll';\nimport {CreateNew} from './posts/create';\nimport {UpdatingPosts} from './posts/patching';\nimport { Post } from '../model/Post';\nimport {Authored} from './posts/author';\nimport {Stat} from './posts/bystatus';\n\n\n// interface IAppState {\n//     id:number|any;\n//     userRole:string|any;\n//     // userid:number;\n//     // single: any;\n//     // levelup: Post[] | any;\n//   }\n// //   interface IApppProps {\n// //     id:number|any;\n// //   }\n\nexport default class PostComponent extends React.Component<any,any> {\n\nconstructor(props:any){\n    super(props);\n    this.state = {\n        id: this.props.id,\n        current: this.props.id,\n        userRole: this.props.userRole,\n        value1: 1,\n        input: null,\n        value2: 1,\n        input2: null,\n        handleChange : this.handleChange.bind(this),\n        handleSubmit : this.handleSubmit.bind(this),\n        handleChange2 : this.handleChange2.bind(this),\n        handleSubmit2 : this.handleSubmit2.bind(this),\n        random: false,\n        random1: false,\n        randomx1: false,\n        randomxx1: false,\n        random2: false,\n        random3:false,\n        random4:false,\n        single:[],\n    }\n}\n// shouldComponentUpdate(nextProps: any, nextState: any) {\n//     return this.state.value !== nextState.value;\n//   }\n\nshowIn = () => {\n    this.setState({\n      random: true,\n      random1: false,\n      randomx1: false,\n      randomxx1: false,\n      random2:false,\n      random3:false ,\n      random4:false\n\n    })\n  }\n\n  showAll = () => {\n    this.setState({\n      random: false ,\n      random1: true,\n      random2 :false,\n      random3:false,\n      random4:false,\n      randomx1: false,\n      randomxx1: false\n    })\n  }\n  showAllx = () => {\n    this.setState({\n      random: false ,\n      randomx1: true,\n      randomxx1: false,\n      random1: false,\n      random2 :false,\n      random3:false,\n      random4:false \n    })\n  }\n  showAllxx = () => {\n    this.setState({\n      random: false ,\n      randomx1: false,\n      randomxx1: true,\n      random1: false,\n      random2 :false,\n      random3:false,\n      random4:false \n    })\n  }\n  showS = () => {\n    this.setState({\n        random3: true,\n        random: false ,\n        random1: false,\n        randomx1: false,\n        randomxx1: false,\n      random2 :false,\n      random4:false,\n      value1:1,\n      value2:1\n    })\n  }\n\n  showUp = () => {\n    this.setState({\n      random: false ,\n      random2: true,\n      random1: false,\n      random3:false,\n      random4:false,\n      randomx1: false,\n      randomxx1: false,\n      value1:1,\n      value2:1\n\n  \n    })\n  }\n\n  showP = () => {\n    this.setState({\n      random: false ,\n      random2: false,\n      random1: false,\n      random3:false,\n      random4: true,\n      randomx1: false,\n      randomxx1: false\n  \n    })\n  }\n\nchangevalue = () => {\n    this.setState({\n      value:  1     \n    })\n  }\n\n\n   updateUserxx = (user:Post) => {\n    this.setState({\n      levelup: user,\n    })\n  }\n\n  handleChange = (e:any) => {\n    this.setState({value1: e.target.value});\n\n  }\n\n  handleSubmit = (event:any)=> {\n    this.setState({value1: this.state.input});\n    event.preventDefault();\n  }\n\n  handleChange2 = (e:any) => {\n    this.setState({value2: e.target.value});\n\n  }\n\n  handleSubmit2 = (event:any)=> {\n    this.setState({value2: this.state.input2});\n    event.preventDefault();\n  }\n\n    render(){\n        return(\n            <>\n           {(this.props.userRole === 1 || this.props.userRole === 2) &&\n            <div className=\"panel\">\n            <span  onClick={this.showUp}> create new </span>\n            <span  onClick={this.showAll}>All </span>\n            <span  onClick={this.showIn}>by ID </span>\n            <span  onClick={this.showS}>by status </span>\n            <span  onClick={this.showP}>update </span>\n            </div>}\n\n            {(this.props.userRole === 3) &&\n            <div className=\"panel\">\n            <span  onClick={this.showUp}> create new </span>\n            <span  onClick={this.showAllx}>Pending </span>\n            <span  onClick={this.showAllxx}>Resolved </span>\n            </div>}\n\n          \n           \n            <div id =\"hideme\" className=\"wrapmein\">           \n            { this.state.random && <Authored userid={this.state.value1}/>}\n            { this.state.random3 && <Stat who={this.props.userRole} resolverr={this.props.xid} single={this.state.single} userid={this.state.value2}/>}\n            { this.state.random1 && <All current={this.state.current} />}\n            { this.state.random2 && <CreateNew />}\n            { this.state.random4 && <UpdatingPosts />}\n               </div>          \n            </>\n            \n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}