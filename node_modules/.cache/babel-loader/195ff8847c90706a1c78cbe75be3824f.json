{"ast":null,"code":"var _jsxFileName = \"/Users/Shadow/react1/myapp/src/App.tsx\";\n// This doesn't strictly need to be called App, its just the top level component.\nimport React from 'react';\nimport { BooksDisplay } from './components/BooksDisplay';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { NavbarComponent } from './components/NavbarComponent'; // import { Example } from './components/NavReactstrap'\n\nimport { LoginComponent } from './components/LoginComponent';\nimport Welcome from './components/Welcome';\nexport class App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.updateUser = user => {\n      this.setState({\n        loggedInUser: user\n      });\n    };\n\n    this.state = {\n      loggedInUser: null\n    };\n  }\n\n  render() {\n    var _this$state$loggedInU, _this$state$loggedInU2;\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Router, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Welcome, {\n      role: (_this$state$loggedInU = this.state.loggedInUser) === null || _this$state$loggedInU === void 0 ? void 0 : _this$state$loggedInU.role,\n      username: (_this$state$loggedInU2 = this.state.loggedInUser) === null || _this$state$loggedInU2 === void 0 ? void 0 : _this$state$loggedInU2.firstname,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(NavbarComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(LoginComponent, {\n      updateUser: this.updateUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      path: \"/books\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(BooksDisplay, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Shadow/react1/myapp/src/App.tsx"],"names":["React","BooksDisplay","BrowserRouter","Router","Route","Switch","NavbarComponent","LoginComponent","Welcome","App","Component","constructor","props","updateUser","user","setState","loggedInUser","state","render","role","firstname"],"mappings":";AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAOA,SAASC,YAAT,QAA4B,2BAA5B;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAgE,kBAAhE;AAEA,SAASC,eAAT,QAAgC,8BAAhC,C,CACA;;AAEA,SAASC,cAAT,QAA+B,6BAA/B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AAOA,OAAO,MAAMC,GAAN,SAAkBT,KAAK,CAACU,SAAxB,CAAkD;AAEvDC,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;;AADsB,SAOxBC,UAPwB,GAOVC,IAAD,IAAe;AAC1B,WAAKC,QAAL,CAAc;AACZC,QAAAA,YAAY,EAAEF;AADF,OAAd;AAGD,KAXuB;;AAEtB,SAAKG,KAAL,GAAa;AACXD,MAAAA,YAAY,EAAE;AADH,KAAb;AAGD;;AAWDE,EAAAA,MAAM,GAAG;AAAA;;AACP,wBACA,uDAEA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,OAAD;AAAS,MAAA,IAAI,2BAAE,KAAKD,KAAL,CAAWD,YAAb,0DAAE,sBAAyBG,IAAxC;AAA8C,MAAA,QAAQ,4BAAE,KAAKF,KAAL,CAAWD,YAAb,2DAAE,uBAAyBI,SAAjF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGE,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,cAAD;AAAgB,MAAA,UAAU,EAAE,KAAKP,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHF,eAOE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAPF,CAHF,CAFA,CADA;AAoBD;;AAvCsD","sourcesContent":["// This doesn't strictly need to be called App, its just the top level component.\nimport React from 'react';\nimport { HelloWorld } from './components/HelloWorld';\nimport { Message } from './components/Message';\nimport { ClickerCounter } from './components/ClickerCounter';\nimport { QuickTable } from './components/QuickTable';\nimport { NumberTableBuilder } from './components/NumberTableBuilder';\nimport { SwapiQuery } from './components/SwapiQuery';\nimport  {BooksDisplay} from './components/BooksDisplay';\nimport { BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\nimport { MultiRoute } from './components/MultiRoute';\nimport { NavbarComponent } from './components/NavbarComponent';\n// import { Example } from './components/NavReactstrap'\nimport { User } from './models/User';\nimport { LoginComponent } from './components/LoginComponent';\nimport Welcome from './components/Welcome';\n\n\ninterface IAppState {\n  loggedInUser: User | null;\n}\n\nexport class App extends React.Component<any, IAppState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      loggedInUser: null,\n    }\n  }\n\n  updateUser = (user:User) => {\n    this.setState({\n      loggedInUser: user,\n    })\n  }\n\n\n\n\n  render() {\n    return (\n    <>\n    \n    <Router>\n      <Welcome role={this.state.loggedInUser?.role} username={this.state.loggedInUser?.firstname}/>\n      <NavbarComponent />\n      <Switch>  \n        { \n\n        <Route exact path=\"/login\">\n          <LoginComponent updateUser={this.updateUser} />\n        </Route>\n        }\n        <Route path='/books'>\n          <BooksDisplay />\n        </Route> \n      </Switch>\n    </Router>\n    </>\n    );\n  }\n\n}"]},"metadata":{},"sourceType":"module"}