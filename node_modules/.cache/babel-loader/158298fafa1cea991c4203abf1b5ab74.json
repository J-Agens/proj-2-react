{"ast":null,"code":"var _jsxFileName = \"/Users/Shadow/Desktop/project-2-react/src/components/pComponent.tsx\";\nimport React from 'react';\nimport { posts, myInfo } from '../api/LibraryClient';\nimport { Postview } from './views/viewPost';\nimport { NavLink } from 'react-router-dom';\nimport { Form, FormGroup, Input } from 'reactstrap';\nexport default class Posts extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.resolvedf = () => {\n      this.setState({\n        resolved: true,\n        unresolved: false,\n        all: false\n      });\n    };\n\n    this.unresolvedf = () => {\n      this.setState({\n        resolved: false,\n        unresolved: true,\n        all: false\n      });\n    };\n\n    this.allf = () => {\n      this.setState({\n        resolved: false,\n        unresolved: false,\n        all: true\n      });\n    };\n\n    this.disable = () => {\n      this.setState({\n        info: false\n      });\n    };\n\n    this.enable = () => {\n      this.setState({\n        info: true\n      });\n    };\n\n    this.state = {\n      data: [],\n      userinfo: [],\n      pending: 0,\n      resolved: false,\n      unresolved: false,\n      all: true,\n      viewPost: true,\n      info: false,\n      username: '',\n      password: '',\n      firstname: '',\n      lastname: '',\n      email: '',\n      phone: ''\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({\n        data: await posts(this.props.writerid),\n        userinfo: await myInfo(this.props.writerid),\n        username: this.state.userinfo.username,\n        password: this.state.userinfo.password,\n        firstname: this.state.userinfo.firstname,\n        lastname: this.state.userinfo.lastname,\n        email: this.state.userinfo.email,\n        phone: this.state.userinfo.phone,\n        isError: false\n      });\n    } catch (e) {\n      // We set the error information in our state.\n      // This will let us render something about the error to the end user\n      this.setState({\n        isError: true,\n        errorMessage: e.message\n      }); // }\n    }\n  }\n\n  render() {\n    const pending = this.state.data.filter(c => c.status === \"pending\").length;\n    const resolved = this.state.data.filter(c => c.status !== \"pending\").length;\n    const Rolex = this.state.userinfo.permission;\n    let role = '';\n\n    switch (Rolex) {\n      case 1:\n        role = \"admin\";\n        break;\n\n      case 2:\n        role = \"editor\";\n        break;\n\n      default:\n        role = \"writer\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"theFrame\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box themain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxrow spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }\n    }, \"Hi \", this.state.userinfo.firstname, \" \\xA0 (\", role, \")\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"profile\",\n      onClick: this.enable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxrow spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"click\",\n      onClick: this.allf,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 71\n      }\n    }, \"All posts \", pending + resolved), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"click\",\n      onClick: this.unresolvedf,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 71\n      }\n    }, \"Pending \", pending), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"click\",\n      onClick: this.resolvedf,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 71\n      }\n    }, \"Resolved \", resolved), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spcaer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxrow spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/create\",\n      id: this.state.userinfo.writerid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 73\n      }\n    }, \"create post\")))), this.state.unresolved && this.state.data.filter(c => c.status === \"pending\").map((u, x) => {\n      return /*#__PURE__*/React.createElement(Postview, {\n        key: x,\n        thekey: x,\n        id: u.postId,\n        author: u.author,\n        postTitle: u.postTitle,\n        postDescription: u.postDescription,\n        postText: u.postText,\n        keywords: u.keyWords,\n        status: u.status,\n        resolver: u.resolver,\n        dateSubmitted: u.dateSubmitted,\n        postType: u.postType,\n        postField: u.postField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }\n      });\n    }), this.state.resolved && this.state.data.filter(c => c.status !== \"pending\").map((u, x) => {\n      return /*#__PURE__*/React.createElement(Postview, {\n        key: x,\n        thekey: x,\n        id: u.postId,\n        author: u.author,\n        postTitle: u.postTitle,\n        postDescription: u.postDescription,\n        status: u.status,\n        postType: u.postType,\n        postField: u.postField,\n        resolver: u.resolver,\n        dateSubmitted: u.dateSubmitted,\n        postText: u.postText,\n        keywords: u.keyWords,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      });\n    }), this.state.all && this.state.data.map((u, x) => {\n      return /*#__PURE__*/React.createElement(Postview, {\n        key: x,\n        thekey: x,\n        id: u.postId,\n        author: u.author,\n        postTitle: u.postTitle,\n        postDescription: u.postDescription,\n        status: u.status,\n        postType: u.postType,\n        postField: u.postField,\n        resolver: u.resolver,\n        dateSubmitted: u.dateSubmitted,\n        postText: u.postText,\n        keywords: u.keyWords,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      });\n    }), this.state.info && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"close\",\n      onClick: this.disable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, \"\\xD7\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"viewHolder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.attemptUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }\n    }, \" Edit\"), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      onChange: this.setTitle,\n      value: this.state.title,\n      type: \"text\",\n      name: \"title\",\n      id: \"posttitle\",\n      placeholder: \"set title\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      onChange: this.setDescription,\n      value: this.state.description,\n      type: \"text\",\n      name: \"description\",\n      id: \"description\",\n      placeholder: \"set description\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      onChange: this.setKeys,\n      value: this.state.keys,\n      type: \"text\",\n      name: \"keywrods\",\n      id: \"keywords\",\n      placeholder: \"set key words\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"text\",\n      onChange: this.setText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }\n    }, this.state.text)), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.setField,\n      name: \"filed\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: this.state.field1,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, this.state.field1), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Politics\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, \"Politics\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Sport\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 13\n      }\n    }, \"Sport\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Economics\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }, \"Economics\"))), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      onChange: this.setType,\n      name: \"type\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: this.state.type1,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, this.state.type1), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Article\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, \"Article\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"News\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, \"News\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Story\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    }, \"Story\"))), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"notdiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"submit\",\n      value: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 13\n      }\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Shadow/Desktop/project-2-react/src/components/pComponent.tsx"],"names":["React","posts","myInfo","Postview","NavLink","Form","FormGroup","Input","Posts","Component","constructor","props","resolvedf","setState","resolved","unresolved","all","unresolvedf","allf","disable","info","enable","state","data","userinfo","pending","viewPost","username","password","firstname","lastname","email","phone","componentDidMount","writerid","isError","e","errorMessage","message","render","filter","c","status","length","Rolex","permission","role","map","u","x","postId","author","postTitle","postDescription","postText","keyWords","resolver","dateSubmitted","postType","postField","attemptUpdate","setTitle","title","setDescription","description","setKeys","keys","setText","text","setField","field1","setType","type1"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { posts, myInfo } from '../api/LibraryClient';\nimport { Post } from '../models/Post';\nimport { Postview } from './views/viewPost';\nimport { NavLink } from 'react-router-dom';\nimport { Form, FormGroup, Input } from 'reactstrap';\n\nexport default class Posts extends React.Component<any,any> {\n\nconstructor(props:any){\n    super(props);\n    this.state = {\n        data: [],\n        userinfo: [],\n        pending: 0,\n        resolved: false,\n        unresolved:false,\n        all:true,\n        viewPost: true,\n        info: false,\n        username:'',\n        password:'',\n        firstname: '',\n        lastname:'',\n        email: '',\n        phone:'',\n    }\n}\n\nasync componentDidMount() {\n    try {\n        this.setState({\n            data: await posts(this.props.writerid),\n            userinfo: await myInfo(this.props.writerid),\n            username: this.state.userinfo.username,\n        password:this.state.userinfo.password,\n        firstname: this.state.userinfo.firstname,\n        lastname: this.state.userinfo.lastname,\n        email: this.state.userinfo.email,\n        phone:this.state.userinfo.phone,\n\n\n            isError: false,\n        })\n      } catch (e) {\n        // We set the error information in our state.\n        // This will let us render something about the error to the end user\n        this.setState({\n          isError: true,\n          errorMessage: e.message,\n        })\n      // }\n    }   \n}\n\nresolvedf = () => {\n    this.setState({\n      resolved: true,\n      unresolved: false,\n      all:false\n    })\n  }\n  unresolvedf = () => {\n    this.setState({\n      resolved: false,\n      unresolved: true,\n      all:false\n    })\n  }\n\n  allf = () => {\n    this.setState({\n      resolved: false,\n      unresolved: false,\n      all:true\n    })\n  }\n  disable = () => {\n    this.setState({\n      info:false\n    })\n  }\n  enable = () =>{\n    this.setState({\n        info: true\n    });\n\n}\n    render(){\n        const pending = this.state.data.filter((c: { status: string; }) => c.status === \"pending\").length;\n        const resolved = this.state.data.filter((c: { status: string; }) => c.status !== \"pending\").length;\n        const Rolex = this.state.userinfo.permission;\n        let role = '';\n        switch(Rolex){\n            case 1:\n                role = \"admin\";\n                break;\n                case 2:\n                role=\"editor\";\n                break;\n                default: role =\"writer\";\n        }\n\n        return(\n            <div className=\"theFrame\">\n                <div className=\"box themain\">\n        <div className=\"boxrow spacer\">Hi {this.state.userinfo.firstname} &nbsp; ({role})</div>  \n        <span className=\"profile\" onClick={this.enable}>&nbsp;</span>\n                <div className=\"boxrow spacer\">&nbsp;</div>  \n                <div className=\"boxrow\"><div className=\"spacer\"></div><label className=\"click\" onClick={this.allf}>All posts {pending + resolved}</label> </div>  \n                <div className=\"boxrow\"><div className=\"spacer\"></div><label className=\"click\" onClick={this.unresolvedf}>Pending {pending}</label> </div>  \n                <div className=\"boxrow\"><div className=\"spacer\"></div><label className=\"click\" onClick={this.resolvedf}>Resolved {resolved}</label> </div> \n                <div className=\"spcaer\">&nbsp;</div>\n                <div className=\"boxrow spacer\">\n                    \n                <NavLink to=\"/create\" id={this.state.userinfo.writerid}><button>create post</button></NavLink></div>  \n\n            </div>\n             { this.state.unresolved && (this.state.data.filter((c: { status: string; }) => c.status === \"pending\").map((u:Post|any,x:number) =>{\n                return(\n                    <Postview key={x} thekey={x} id={u.postId} author={u.author} postTitle={u.postTitle}\n                    postDescription={u.postDescription} postText={u.postText} keywords={u.keyWords} status={u.status}\n                    resolver={u.resolver} dateSubmitted={u.dateSubmitted} postType={u.postType} postField={u.postField} />\n                    )      \n                    })         \n        )}\n        {this.state.resolved && (this.state.data.filter((c: { status: string; }) => c.status !== \"pending\").map((u:Post|any,x:number) =>{\n                return(\n                    <Postview key={x} thekey={x} id={u.postId} author={u.author} postTitle={u.postTitle}\n                    postDescription={u.postDescription} status={u.status} postType={u.postType} postField={u.postField}\n                    resolver={u.resolver} dateSubmitted={u.dateSubmitted} postText={u.postText} keywords={u.keyWords} />\n                    )      \n                    })         \n        )}\n        {this.state.all && (this.state.data.map((u:Post|any,x:number) =>{\n                return(\n                    <Postview key={x} thekey={x} id={u.postId} author={u.author} postTitle={u.postTitle}\n                    postDescription={u.postDescription} status={u.status} postType={u.postType} postField={u.postField}\n                    resolver={u.resolver} dateSubmitted={u.dateSubmitted} postText={u.postText} keywords={u.keyWords} />\n                    )      \n                    })         \n        )}\n        {this.state.info && <div className=\"overlay\">\n            <span className=\"close\" onClick={this.disable}>&times;</span>\n            <div className=\"viewHolder\">\n            <Form onSubmit={this.attemptUpdate}>\n        <span className=\"tag\"> Edit</span>\n            <FormGroup>\n          <Input onChange={this.setTitle} value={this.state.title} type=\"text\" name=\"title\"\n           id=\"posttitle\" placeholder=\"set title\"\n           required/>\n           </FormGroup>\n           <FormGroup>\n           <Input onChange={this.setDescription} value={this.state.description} type=\"text\" name=\"description\"\n           id=\"description\" placeholder=\"set description\"\n           required/>\n           </FormGroup>\n           <FormGroup>\n           <Input onChange={this.setKeys} value={this.state.keys} type=\"text\" name=\"keywrods\"\n           id=\"keywords\" placeholder=\"set key words\"\n           required/>\n           </FormGroup>\n           <FormGroup>\n        <textarea name=\"text\" onChange={this.setText}>{this.state.text}</textarea>\n            \n          </FormGroup>\n          \n            <FormGroup>\n            <select onChange={this.setField} name=\"filed\" required>\n            <option value={this.state.field1} selected>{this.state.field1}</option>\n            <option value=\"Politics\">Politics</option>\n            <option value=\"Sport\">Sport</option>\n            <option value=\"Economics\">Economics</option>\n            </select>\n            </FormGroup><FormGroup>\n            <select onChange={this.setType} name=\"type\" required>\n        <option value={this.state.type1} selected>{this.state.type1}</option>\n            <option value=\"Article\">Article</option>\n            <option value=\"News\">News</option>\n            <option value=\"Story\">Story</option>\n            </select>\n          </FormGroup>\n          <FormGroup className=\"notdiv\">\n            <Input type=\"submit\" value=\"submit\" />\n          </FormGroup>\n      </Form>\n         </div>\n        </div>}\n        </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}