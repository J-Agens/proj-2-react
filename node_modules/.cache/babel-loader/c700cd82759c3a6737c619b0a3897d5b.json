{"ast":null,"code":"var _jsxFileName = \"/Users/Shadow/Desktop/project-2-react/src/components/pComponent.tsx\";\nimport React from 'react';\nimport { posts, myInfo, updateSelf } from '../api/LibraryClient';\nimport { Postview } from './views/viewPost';\nimport { NavLink } from 'react-router-dom';\nimport { Form, FormGroup, Input } from 'reactstrap';\nexport default class Posts extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.resolvedf = () => {\n      this.setState({\n        resolved: true,\n        unresolved: false,\n        all: false\n      });\n    };\n\n    this.unresolvedf = () => {\n      this.setState({\n        resolved: false,\n        unresolved: true,\n        all: false\n      });\n    };\n\n    this.allf = () => {\n      this.setState({\n        resolved: false,\n        unresolved: false,\n        all: true\n      });\n    };\n\n    this.disable = () => {\n      this.setState({\n        info: false\n      });\n    };\n\n    this.enable = () => {\n      this.setState({\n        info: true\n      });\n    };\n\n    this.setUsername = pw => {\n      this.setState({\n        username: pw.currentTarget.value\n      });\n    };\n\n    this.setPassword = pw => {\n      this.setState({\n        password: pw.currentTarget.value\n      });\n    };\n\n    this.setFirstname = pw => {\n      this.setState({\n        firstname: pw.currentTarget.value\n      });\n    };\n\n    this.setLastname = pw => {\n      this.setState({\n        lastname: pw.currentTarget.value\n      });\n    };\n\n    this.setEmail = pw => {\n      this.setState({\n        email: pw.currentTarget.value\n      });\n    };\n\n    this.setPhone = pw => {\n      this.setState({\n        phone: pw.currentTarget.value\n      });\n    };\n\n    this.attemptUpdate = async event => {\n      event.preventDefault();\n      console.log(event);\n\n      try {\n        const levelup = await updateSelf(this.props.writerid, this.state.username, this.state.password, this.state.firstname, this.state.lastname, this.state.email, this.state.phone, 1);\n        this.setState({\n          info: false // userinfo: levelup,\n\n        });\n        console.log(levelup);\n      } catch (error) {\n        this.setState({\n          info: true // text1:this.props.postText,\n          // description1: this.props.postDescription,\n          // type1: this.props.postType,\n          // field1: this.props.postField,\n          // title1: this.props.postTitle,\n          // keys1: this.props.keywords,\n          // date1: this.props.dateSubmitted,\n          // status1: this.props.status\n\n        });\n      }\n    };\n\n    this.state = {\n      data: [],\n      userinfo: [],\n      pending: 0,\n      resolved: false,\n      unresolved: false,\n      all: true,\n      viewPost: true,\n      info: false,\n      username: '',\n      password: '',\n      firstname: '',\n      lastname: '',\n      email: '',\n      phone: ''\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({\n        data: await posts(this.props.writerid),\n        userinfo: await myInfo(this.props.writerid),\n        username: this.state.userinfo.username,\n        password: this.state.userinfo.password,\n        firstname: this.state.userinfo.firstname,\n        lastname: this.state.userinfo.lastname,\n        email: this.state.userinfo.email,\n        phone: this.state.userinfo.phone,\n        isError: false\n      });\n    } catch (e) {\n      // We set the error information in our state.\n      // This will let us render something about the error to the end user\n      this.setState({\n        isError: true,\n        errorMessage: e.message\n      }); // }\n    }\n  }\n\n  render() {\n    const pending = this.state.data.filter(c => c.status === \"pending\").length;\n    const resolved = this.state.data.filter(c => c.status !== \"pending\").length;\n    const Rolex = this.state.userinfo.permission;\n    let role = '';\n\n    switch (Rolex) {\n      case 1:\n        role = \"admin\";\n        break;\n\n      case 2:\n        role = \"editor\";\n        break;\n\n      default:\n        role = \"writer\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"theFrame\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box themain\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxrow spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }\n    }, \"Hi \", this.state.userinfo.firstname, \" \\xA0 (\", role, \")\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"profile\",\n      onClick: this.enable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxrow spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 17\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"click\",\n      onClick: this.allf,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 71\n      }\n    }, \"All posts \", pending + resolved), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"click\",\n      onClick: this.unresolvedf,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 71\n      }\n    }, \"Pending \", pending), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      className: \"click\",\n      onClick: this.resolvedf,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 71\n      }\n    }, \"Resolved \", resolved), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spcaer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, \"\\xA0\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxrow spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(NavLink, {\n      to: \"/create\",\n      id: this.state.userinfo.writerid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 73\n      }\n    }, \"create post\")))), this.state.unresolved && this.state.data.filter(c => c.status === \"pending\").map((u, x) => {\n      return /*#__PURE__*/React.createElement(Postview, {\n        key: x,\n        thekey: x,\n        id: u.postId,\n        author: u.author,\n        postTitle: u.postTitle,\n        postDescription: u.postDescription,\n        postText: u.postText,\n        keywords: u.keyWords,\n        status: u.status,\n        resolver: u.resolver,\n        dateSubmitted: u.dateSubmitted,\n        postType: u.postType,\n        postField: u.postField,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }\n      });\n    }), this.state.resolved && this.state.data.filter(c => c.status !== \"pending\").map((u, x) => {\n      return /*#__PURE__*/React.createElement(Postview, {\n        key: x,\n        thekey: x,\n        id: u.postId,\n        author: u.author,\n        postTitle: u.postTitle,\n        postDescription: u.postDescription,\n        status: u.status,\n        postType: u.postType,\n        postField: u.postField,\n        resolver: u.resolver,\n        dateSubmitted: u.dateSubmitted,\n        postText: u.postText,\n        keywords: u.keyWords,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 21\n        }\n      });\n    }), this.state.all && this.state.data.map((u, x) => {\n      return /*#__PURE__*/React.createElement(Postview, {\n        key: x,\n        thekey: x,\n        id: u.postId,\n        author: u.author,\n        postTitle: u.postTitle,\n        postDescription: u.postDescription,\n        status: u.status,\n        postType: u.postType,\n        postField: u.postField,\n        resolver: u.resolver,\n        dateSubmitted: u.dateSubmitted,\n        postText: u.postText,\n        keywords: u.keyWords,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }\n      });\n    }), this.state.info && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"close\",\n      onClick: this.disable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }\n    }, \"\\xD7\"), /*#__PURE__*/React.createElement(Form, {\n      onSubmit: this.attemptUpdate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }\n    }, \" update \"), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      onChange: this.setUsername,\n      value: this.state.username,\n      type: \"text\",\n      name: \"username\",\n      id: \"set username\",\n      placeholder: \"username\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      onChange: this.setPassword,\n      value: this.state.password,\n      type: \"text\",\n      name: \"password\",\n      id: \"password\",\n      placeholder: \"set password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"text\",\n      onClick: this.setFirstname,\n      value: this.state.firstname,\n      name: \"firstname\",\n      id: \"firstname\",\n      placeholder: \"set firstname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      value: this.state.lastname,\n      type: \"text\",\n      onClick: this.setLastname,\n      name: \"lastname\",\n      id: \"lastname\",\n      placeholder: \"set lastname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      onChange: this.setEmail,\n      value: this.state.email,\n      type: \"text\",\n      name: \"email\",\n      id: \"email\",\n      placeholder: \"set email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      onChange: this.setPhone,\n      value: this.state.phone,\n      type: \"text\",\n      name: \"phone\",\n      id: \"phone\",\n      placeholder: \"set phone\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 12\n      }\n    })), /*#__PURE__*/React.createElement(FormGroup, {\n      className: \"notdiv\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      type: \"submit\",\n      value: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 13\n      }\n    })))));\n  }\n\n}","map":{"version":3,"sources":["/Users/Shadow/Desktop/project-2-react/src/components/pComponent.tsx"],"names":["React","posts","myInfo","updateSelf","Postview","NavLink","Form","FormGroup","Input","Posts","Component","constructor","props","resolvedf","setState","resolved","unresolved","all","unresolvedf","allf","disable","info","enable","setUsername","pw","username","currentTarget","value","setPassword","password","setFirstname","firstname","setLastname","lastname","setEmail","email","setPhone","phone","attemptUpdate","event","preventDefault","console","log","levelup","writerid","state","error","data","userinfo","pending","viewPost","componentDidMount","isError","e","errorMessage","message","render","filter","c","status","length","Rolex","permission","role","map","u","x","postId","author","postTitle","postDescription","postText","keyWords","resolver","dateSubmitted","postType","postField"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { posts, myInfo, updateSelf } from '../api/LibraryClient';\nimport { Post } from '../models/Post';\nimport { Postview } from './views/viewPost';\nimport { NavLink } from 'react-router-dom';\nimport { Form, FormGroup, Input } from 'reactstrap';\nimport { User } from '../models/User';\n\nexport default class Posts extends React.Component<any,any> {\n\nconstructor(props:any){\n    super(props);\n    this.state = {\n        data: [],\n        userinfo: [],\n        pending: 0,\n        resolved: false,\n        unresolved:false,\n        all:true,\n        viewPost: true,\n        info: false,\n        username:'',\n        password:'',\n        firstname: '',\n        lastname:'',\n        email: '',\n        phone:'',\n    }\n}\n\nasync componentDidMount() {\n    try {\n        this.setState({\n            data: await posts(this.props.writerid),\n            userinfo: await myInfo(this.props.writerid),\n            username: this.state.userinfo.username,\n        password:this.state.userinfo.password,\n        firstname: this.state.userinfo.firstname,\n        lastname: this.state.userinfo.lastname,\n        email: this.state.userinfo.email,\n        phone:this.state.userinfo.phone,\n            isError: false,\n        })\n      } catch (e) {\n        // We set the error information in our state.\n        // This will let us render something about the error to the end user\n        this.setState({\n          isError: true,\n          errorMessage: e.message,\n        })\n      // }\n    }   \n}\n\nresolvedf = () => {\n    this.setState({\n      resolved: true,\n      unresolved: false,\n      all:false\n    })\n  }\n  unresolvedf = () => {\n    this.setState({\n      resolved: false,\n      unresolved: true,\n      all:false\n    })\n  }\n\n  allf = () => {\n    this.setState({\n      resolved: false,\n      unresolved: false,\n      all:true\n    })\n  }\n  disable = () => {\n    this.setState({\n      info:false\n    })\n  }\n  enable = () =>{\n    this.setState({\n        info: true\n    });\n\n}\n\nsetUsername= (pw: any) => {\n    this.setState({\n      username: pw.currentTarget.value,\n    })\n  }\n  setPassword= (pw: any) => {\n    this.setState({\n      password: pw.currentTarget.value,\n    })\n  }\n  setFirstname= (pw: any) => {\n    this.setState({\n      firstname: pw.currentTarget.value,\n    })\n  }\n  setLastname= (pw: any) => {\n    this.setState({\n      lastname: pw.currentTarget.value,\n    })\n  }\n  setEmail= (pw: any) => {\n    this.setState({\n      email: pw.currentTarget.value,\n    })\n  }\n  setPhone = (pw: any) => {\n    this.setState({\n      phone: pw.currentTarget.value,\n    })\n  }\n\n  attemptUpdate = async (event: any) => {\n    event.preventDefault();\n    console.log(event);\n    try {\n      const levelup : User = await updateSelf(this.props.writerid,this.state.username,this.state.password,this.state.firstname,\n        this.state.lastname,this.state.email,this.state.phone,1);\n      this.setState({\n        info: false,\n        // userinfo: levelup,\n        \n      });\n      console.log(levelup);\n    \n    } catch (error) {\n      this.setState({\n        info: true,\n        // text1:this.props.postText,\n        // description1: this.props.postDescription,\n        // type1: this.props.postType,\n        // field1: this.props.postField,\n        // title1: this.props.postTitle,\n        // keys1: this.props.keywords,\n        // date1: this.props.dateSubmitted,\n        // status1: this.props.status\n      })\n    }\n  }\n    render(){\n        const pending = this.state.data.filter((c: { status: string; }) => c.status === \"pending\").length;\n        const resolved = this.state.data.filter((c: { status: string; }) => c.status !== \"pending\").length;\n        const Rolex = this.state.userinfo.permission;\n        let role = '';\n        switch(Rolex){\n            case 1:\n                role = \"admin\";\n                break;\n                case 2:\n                role=\"editor\";\n                break;\n                default: role =\"writer\";\n        }\n\n        return(\n            <div className=\"theFrame\">\n                <div className=\"box themain\">\n        <div className=\"boxrow spacer\">Hi {this.state.userinfo.firstname} &nbsp; ({role})</div>  \n        <span className=\"profile\" onClick={this.enable}>&nbsp;</span>\n                <div className=\"boxrow spacer\">&nbsp;</div>  \n                <div className=\"boxrow\"><div className=\"spacer\"></div><label className=\"click\" onClick={this.allf}>All posts {pending + resolved}</label> </div>  \n                <div className=\"boxrow\"><div className=\"spacer\"></div><label className=\"click\" onClick={this.unresolvedf}>Pending {pending}</label> </div>  \n                <div className=\"boxrow\"><div className=\"spacer\"></div><label className=\"click\" onClick={this.resolvedf}>Resolved {resolved}</label> </div> \n                <div className=\"spcaer\">&nbsp;</div>\n                <div className=\"boxrow spacer\">\n                    \n                <NavLink to=\"/create\" id={this.state.userinfo.writerid}><button>create post</button></NavLink></div>  \n\n            </div>\n             { this.state.unresolved && (this.state.data.filter((c: { status: string; }) => c.status === \"pending\").map((u:Post|any,x:number) =>{\n                return(\n                    <Postview key={x} thekey={x} id={u.postId} author={u.author} postTitle={u.postTitle}\n                    postDescription={u.postDescription} postText={u.postText} keywords={u.keyWords} status={u.status}\n                    resolver={u.resolver} dateSubmitted={u.dateSubmitted} postType={u.postType} postField={u.postField} />\n                    )      \n                    })         \n        )}\n        {this.state.resolved && (this.state.data.filter((c: { status: string; }) => c.status !== \"pending\").map((u:Post|any,x:number) =>{\n                return(\n                    <Postview key={x} thekey={x} id={u.postId} author={u.author} postTitle={u.postTitle}\n                    postDescription={u.postDescription} status={u.status} postType={u.postType} postField={u.postField}\n                    resolver={u.resolver} dateSubmitted={u.dateSubmitted} postText={u.postText} keywords={u.keyWords} />\n                    )      \n                    })         \n        )}\n        {this.state.all && (this.state.data.map((u:Post|any,x:number) =>{\n                return(\n                    <Postview key={x} thekey={x} id={u.postId} author={u.author} postTitle={u.postTitle}\n                    postDescription={u.postDescription} status={u.status} postType={u.postType} postField={u.postField}\n                    resolver={u.resolver} dateSubmitted={u.dateSubmitted} postText={u.postText} keywords={u.keyWords} />\n                    )      \n                    })         \n        )}\n        {this.state.info && <div className=\"overlay\">\n            <span className=\"close\" onClick={this.disable}>&times;</span>\n            \n            <Form onSubmit={this.attemptUpdate}>\n        <span className=\"tag\"> update </span>\n            <FormGroup>\n          <Input onChange={this.setUsername} value={this.state.username} type=\"text\" name=\"username\"\n           id=\"set username\" placeholder=\"username\"\n           />\n           </FormGroup>\n           <FormGroup>\n           <Input onChange={this.setPassword} value={this.state.password} type=\"text\" name=\"password\"\n           id=\"password\" placeholder=\"set password\"\n           />\n           </FormGroup>\n           <FormGroup>\n          <Input   type=\"text\" onClick={this.setFirstname} value={this.state.firstname} name=\"firstname\"\n           id=\"firstname\" placeholder=\"set firstname\"\n           />\n           </FormGroup>\n           <FormGroup>\n          <Input value={this.state.lastname} type=\"text\"  onClick={this.setLastname} name=\"lastname\"\n           id=\"lastname\" placeholder=\"set lastname\"\n           />\n           </FormGroup>\n           <FormGroup>\n           <Input onChange={this.setEmail} value={this.state.email} type=\"text\" name=\"email\"\n           id=\"email\" placeholder=\"set email\"\n           />\n           </FormGroup>\n           <FormGroup>\n           <Input onChange={this.setPhone} value={this.state.phone} type=\"text\" name=\"phone\"\n           id=\"phone\" placeholder=\"set phone\"\n           />\n            \n          </FormGroup>\n          <FormGroup className=\"notdiv\">\n            <Input type=\"submit\" value=\"submit\" />\n          </FormGroup>\n      </Form>\n         </div>\n        }\n        </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}