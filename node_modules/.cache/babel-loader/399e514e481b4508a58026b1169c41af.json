{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johna\\\\Development\\\\training\\\\react-revature\\\\projects\\\\proj-2-react\\\\src\\\\components\\\\default\\\\LoginComponent.tsx\";\nimport React from 'react';\nimport { login } from '../../api/LibraryClient';\nimport { Route, Switch, Redirect } from 'react-router'; //the updateUser prop takes a function that takes a user and returns voide\n// it will match updateUser in App.\n\nexport class LoginComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setUsername = un => {\n      this.setState({\n        username: un.currentTarget.value\n      });\n    };\n\n    this.setPassword = pw => {\n      this.setState({\n        password: pw.currentTarget.value\n      });\n    };\n\n    this.clearError = () => {\n      this.setState({\n        errorMessage: '',\n        isError: false,\n        success: false\n      });\n    };\n\n    this.attemptLogin = async event => {\n      event.preventDefault();\n      console.log(event);\n\n      try {\n        const loggedInUser = await login(this.state.username, this.state.password);\n        this.props.updateUser(loggedInUser);\n        this.setState({\n          username: '',\n          password: '',\n          success: true\n        });\n        console.log(loggedInUser);\n      } catch (error) {\n        this.setState({\n          password: '',\n          isError: true,\n          success: false,\n          errorMessage: error.message\n        });\n      }\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      isError: false,\n      errorMessage: '',\n      success: false\n    };\n  } //We'll need a few functions to modify individual pieces of our state\n  // These take change events\n\n\n  render() {\n    if (!this.state.success) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.attemptLogin,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"tag\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      }, \" Login\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }\n      }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.setUsername,\n        value: this.state.username,\n        type: \"text\",\n        name: \"username\",\n        id: \"username\",\n        placeholder: \"your username\",\n        autoComplete: this.state.username,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.setPassword,\n        value: this.state.password,\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"password\",\n        autoComplete: this.state.password,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"notdiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }\n      }))), this.state.isError && /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 30\n        }\n      }, this.state.errorMessage));\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 5\n        }\n      }, \"you've logged in successfuly\"), /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 5\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/hello\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 7\n        }\n      }))));\n    }\n  }\n\n}","map":{"version":3,"sources":["C:/Users/johna/Development/training/react-revature/projects/proj-2-react/src/components/default/LoginComponent.tsx"],"names":["React","login","Route","Switch","Redirect","LoginComponent","Component","constructor","props","setUsername","un","setState","username","currentTarget","value","setPassword","pw","password","clearError","errorMessage","isError","success","attemptLogin","event","preventDefault","console","log","loggedInUser","state","updateUser","error","message","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { User } from '../../models/User';\r\nimport { login } from '../../api/LibraryClient';\r\nimport { Route, Switch, Redirect} from 'react-router';\r\n\r\n\r\n//the updateUser prop takes a function that takes a user and returns voide\r\n// it will match updateUser in App.\r\ninterface ILoginComponentProps {\r\n  updateUser: (user:User) => void;\r\n}\r\n\r\ninterface ILoginComponentState {\r\n  username: string;\r\n  password: string;\r\n  isError: boolean;\r\n  errorMessage: string;\r\n  success:boolean;\r\n}\r\n\r\nexport class LoginComponent extends React.Component<ILoginComponentProps, ILoginComponentState> {\r\n\r\n  constructor(props: ILoginComponentProps) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      isError: false,\r\n      errorMessage: '',\r\n      success:false\r\n    }\r\n  }\r\n\r\n  //We'll need a few functions to modify individual pieces of our state\r\n  // These take change events\r\n  setUsername = (un: any) => {\r\n    this.setState({\r\n      username: un.currentTarget.value,\r\n    })\r\n  }\r\n\r\n  setPassword = (pw: any) => {\r\n    this.setState({\r\n      password: pw.currentTarget.value,\r\n    })\r\n  }\r\n\r\n  clearError = () => {\r\n    this.setState({\r\n      errorMessage: '',\r\n      isError: false,\r\n      success: false\r\n    })\r\n  }\r\n\r\n  attemptLogin = async (event: any) => {\r\n    event.preventDefault();\r\n    console.log(event);\r\n    try {\r\n      const loggedInUser : User = await login(this.state.username,this.state.password);\r\n      this.props.updateUser(loggedInUser);\r\n      this.setState({\r\n        username: '',\r\n        password: '',\r\n        success: true\r\n      });\r\n      console.log(loggedInUser);\r\n    \r\n    } catch (error) {\r\n      this.setState({\r\n        password: '',\r\n        isError: true,\r\n        success:false,\r\n        errorMessage: error.message,\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if(!this.state.success){\r\n    return (\r\n      <div>\r\n      <form onSubmit={this.attemptLogin}>\r\n      <span className=\"tag\"> Login</span>\r\n        <div>\r\n          <label>Username</label>\r\n          <input onChange={this.setUsername} value={this.state.username} type=\"text\" name=\"username\"\r\n           id=\"username\" placeholder=\"your username\"\r\n           autoComplete={this.state.username} required/>\r\n          </div>\r\n          <div>\r\n          <label>Password</label>\r\n            <input onChange={this.setPassword} value={this.state.password} type=\"password\" name=\"password\" id=\"password\" \r\n            placeholder=\"password\" autoComplete={this.state.password} required />\r\n          </div>\r\n          <div className=\"notdiv\">\r\n            <input type=\"submit\" value=\"submit\" />\r\n          </div>\r\n      </form>\r\n     { this.state.isError && <h3>{this.state.errorMessage}</h3>}\r\n      </div>\r\n    );\r\n    }\r\n    else{ return (\r\n      <>\r\n    <h3>you've logged in successfuly</h3>\r\n    <Switch>\r\n      <Route>\r\n      <Redirect to=\"/hello\"/>\r\n      </Route>\r\n    </Switch>\r\n    </>\r\n     ) \r\n    }\r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}