{"ast":null,"code":"var _jsxFileName = \"/Users/Shadow/Desktop/project-2-react/src/components/pComponent.tsx\";\nimport React from 'react';\nimport { posts, myInfo } from '../api/LibraryClient';\nimport { Postview } from './views/viewPost';\nexport default class Posts extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      single: [],\n      user: []\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({\n        single: await posts(),\n        user: myInfo(this.props.postid),\n        isError: false\n      });\n    } catch (e) {\n      // We set the error information in our state.\n      // This will let us render something about the error to the end user\n      this.setState({\n        isError: true,\n        errorMessage: e.message\n      }); // }\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"theFrame\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"boxrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, \"Hi \", this.state.user.firstname, \" \")), this.state.single.map((u, x) => {\n      return /*#__PURE__*/React.createElement(Postview, {\n        key: x,\n        thekey: x,\n        id: u.postid,\n        author: u.author,\n        postTitle: u.postTitle,\n        postDescription: u.postDescription,\n        status: u.status,\n        resolver: u.resolver,\n        dateSubmitted: u.dateSubmitted,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }\n      });\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/Shadow/Desktop/project-2-react/src/components/pComponent.tsx"],"names":["React","posts","myInfo","Postview","Posts","Component","constructor","props","state","single","user","componentDidMount","setState","postid","isError","e","errorMessage","message","render","firstname","map","u","x","author","postTitle","postDescription","status","resolver","dateSubmitted"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,sBAA9B;AAEA,SAASC,QAAT,QAAyB,kBAAzB;AAEA,eAAe,MAAMC,KAAN,SAAoBJ,KAAK,CAACK,SAA1B,CAA6C;AAE5DC,EAAAA,WAAW,CAACC,KAAD,EAAW;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,MAAM,EAAE,EADC;AAETC,MAAAA,IAAI,EAAC;AAFI,KAAb;AAKH;;AAED,QAAMC,iBAAN,GAA0B;AACtB,QAAI;AACA,WAAKC,QAAL,CAAc;AACVH,QAAAA,MAAM,EAAE,MAAMR,KAAK,EADT;AAEVS,QAAAA,IAAI,EAAER,MAAM,CAAC,KAAKK,KAAL,CAAWM,MAAZ,CAFF;AAGVC,QAAAA,OAAO,EAAE;AAHC,OAAd;AAKD,KANH,CAMI,OAAOC,CAAP,EAAU;AACV;AACA;AACA,WAAKH,QAAL,CAAc;AACZE,QAAAA,OAAO,EAAE,IADG;AAEZE,QAAAA,YAAY,EAAED,CAAC,CAACE;AAFJ,OAAd,EAHU,CAOZ;AACD;AACJ;;AACGC,EAAAA,MAAM,GAAE;AACJ,wBACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACR;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA4B,KAAKV,KAAL,CAAWE,IAAX,CAAgBS,SAA5C,MADQ,CADJ,EAIG,KAAKX,KAAL,CAAWC,MAAX,CAAkBW,GAAlB,CAAsB,CAACC,CAAD,EAAYC,CAAZ,KAAwB;AAC7C,0BACI,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAEA,CAAf;AAAkB,QAAA,MAAM,EAAEA,CAA1B;AAA6B,QAAA,EAAE,EAAED,CAAC,CAACR,MAAnC;AAA2C,QAAA,MAAM,EAAEQ,CAAC,CAACE,MAArD;AAA6D,QAAA,SAAS,EAAEF,CAAC,CAACG,SAA1E;AACA,QAAA,eAAe,EAAEH,CAAC,CAACI,eADnB;AACoC,QAAA,MAAM,EAAEJ,CAAC,CAACK,MAD9C;AAEA,QAAA,QAAQ,EAAEL,CAAC,CAACM,QAFZ;AAEsB,QAAA,aAAa,EAAEN,CAAC,CAACO,aAFvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAKK,KANN,CAJH,CADJ;AAgBH;;AA7CuD","sourcesContent":["import React from 'react';\nimport { posts, myInfo } from '../api/LibraryClient';\nimport { Post } from '../models/Post';\nimport { Postview } from './views/viewPost';\n\nexport default class Posts extends React.Component<any,any> {\n\nconstructor(props:any){\n    super(props);\n    this.state = {\n        single: [],\n        user:[]\n\n    }\n}\n\nasync componentDidMount() {\n    try {\n        this.setState({\n            single: await posts(),\n            user: myInfo(this.props.postid),\n            isError: false,\n        })\n      } catch (e) {\n        // We set the error information in our state.\n        // This will let us render something about the error to the end user\n        this.setState({\n          isError: true,\n          errorMessage: e.message,\n        })\n      // }\n    }   \n}\n    render(){\n        return(\n            <div className=\"theFrame\">\n                <div className=\"box\">\n        <div className=\"boxrow\">Hi {this.state.user.firstname} </div>  \n            </div>\n             {(this.state.single.map((u:Post|any,x:number) =>{\n                return(\n                    <Postview key={x} thekey={x} id={u.postid} author={u.author} postTitle={u.postTitle}\n                    postDescription={u.postDescription} status={u.status}\n                    resolver={u.resolver} dateSubmitted={u.dateSubmitted} />\n                    )      \n                    })\n                    \n        )}\n        </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}