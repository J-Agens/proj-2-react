{"ast":null,"code":"import _regeneratorRuntime from\"/Users/Shadow/react1/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/Shadow/react1/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"/Users/Shadow/react1/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/Shadow/react1/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/Shadow/react1/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/Shadow/react1/myapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{login}from'../api/LibraryClient';import{Route,Switch,Redirect}from'react-router';//the updateUser prop takes a function that takes a user and returns voide\n// it will match updateUser in App.\nexport var LoginComponent=/*#__PURE__*/function(_React$Component){_inherits(LoginComponent,_React$Component);var _super=_createSuper(LoginComponent);function LoginComponent(props){var _this;_classCallCheck(this,LoginComponent);_this=_super.call(this,props);_this.setUsername=function(un){_this.setState({username:un.currentTarget.value});};_this.setPassword=function(pw){_this.setState({password:pw.currentTarget.value});};_this.clearError=function(){_this.setState({errorMessage:'',isError:false,success:false});};_this.attemptLogin=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){var loggedInUser;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();console.log(event);_context.prev=2;_context.next=5;return login(_this.state.username,_this.state.password);case 5:loggedInUser=_context.sent;_this.props.updateUser(loggedInUser);_this.setState({username:'',password:'',success:true});_context.next=13;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](2);_this.setState({password:'',isError:true,success:false,errorMessage:_context.t0.message});case 13:case\"end\":return _context.stop();}}},_callee,null,[[2,10]]);}));return function(_x){return _ref.apply(this,arguments);};}();_this.state={username:'',password:'',isError:false,errorMessage:'',success:false};return _this;}//We'll need a few functions to modify individual pieces of our state\n// These take change events\n_createClass(LoginComponent,[{key:\"render\",value:function render(){if(!this.state.success){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"form\",{onSubmit:this.attemptLogin},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",null,\"Username\"),/*#__PURE__*/React.createElement(\"input\",{onChange:this.setUsername,value:this.state.username,type:\"text\",name:\"username\",id:\"username\",placeholder:\"your username\",autoComplete:this.state.username,required:true})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"label\",null,\"Password\"),/*#__PURE__*/React.createElement(\"input\",{onChange:this.setPassword,value:this.state.password,type:\"password\",name:\"password\",id:\"password\",placeholder:\"password\",autoComplete:this.state.password,required:true})),/*#__PURE__*/React.createElement(\"div\",{className:\"notdiv\"},/*#__PURE__*/React.createElement(\"input\",{type:\"submit\",value:\"submit\"}))),this.state.isError&&/*#__PURE__*/React.createElement(\"h3\",null,this.state.errorMessage));}else{return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"h3\",null,\"you've logged in successfuly\"),/*#__PURE__*/React.createElement(Switch,null,/*#__PURE__*/React.createElement(Route,null,/*#__PURE__*/React.createElement(Redirect,{to:\"/hello\"}))));}}}]);return LoginComponent;}(React.Component);","map":{"version":3,"sources":["/Users/Shadow/react1/myapp/src/components/LoginComponent.tsx"],"names":["React","login","Route","Switch","Redirect","LoginComponent","props","setUsername","un","setState","username","currentTarget","value","setPassword","pw","password","clearError","errorMessage","isError","success","attemptLogin","event","preventDefault","console","log","state","loggedInUser","updateUser","message","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { User } from '../models/User';\nimport { login } from '../api/LibraryClient';\nimport { Route, Switch, Redirect} from 'react-router';\n\n//the updateUser prop takes a function that takes a user and returns voide\n// it will match updateUser in App.\ninterface ILoginComponentProps {\n  updateUser: (user:User) => void;\n}\n\ninterface ILoginComponentState {\n  username: string;\n  password: string;\n  isError: boolean;\n  errorMessage: string;\n  success:boolean;\n}\n\nexport class LoginComponent extends React.Component<ILoginComponentProps, ILoginComponentState> {\n\n  constructor(props: ILoginComponentProps) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      isError: false,\n      errorMessage: '',\n      success:false\n    }\n  }\n\n  //We'll need a few functions to modify individual pieces of our state\n  // These take change events\n  setUsername = (un: any) => {\n    this.setState({\n      username: un.currentTarget.value,\n    })\n  }\n\n  setPassword = (pw: any) => {\n    this.setState({\n      password: pw.currentTarget.value,\n    })\n  }\n\n  clearError = () => {\n    this.setState({\n      errorMessage: '',\n      isError: false,\n      success: false\n    })\n  }\n\n  attemptLogin = async (event: any) => {\n    event.preventDefault();\n    console.log(event);\n    try {\n      const loggedInUser : User = await login(this.state.username, this.state.password);\n      this.props.updateUser(loggedInUser);\n      this.setState({\n        username: '',\n        password: '',\n        success: true\n      });\n    \n    } catch (error) {\n      this.setState({\n        password: '',\n        isError: true,\n        success:false,\n        errorMessage: error.message,\n      })\n    }\n  }\n\n  render() {\n    if(!this.state.success){\n    return (\n      <div>\n      <form onSubmit={this.attemptLogin}>\n        <div>\n          <label>Username</label>\n          <input onChange={this.setUsername} value={this.state.username} type=\"text\" name=\"username\"\n           id=\"username\" placeholder=\"your username\"\n           autoComplete={this.state.username} required/>\n          </div>\n          <div>\n          <label>Password</label>\n            <input onChange={this.setPassword} value={this.state.password} type=\"password\" name=\"password\" id=\"password\" \n            placeholder=\"password\" autoComplete={this.state.password} required />\n          </div>\n          <div className=\"notdiv\">\n            <input type=\"submit\" value=\"submit\" />\n          </div>\n      </form>\n     { this.state.isError && <h3>{this.state.errorMessage}</h3>}\n      </div>\n    );\n    }\n    else{ return (\n      <>\n    <h3>you've logged in successfuly</h3>\n    <Switch>\n      <Route>\n      <Redirect to=\"/hello\"/>\n      </Route>\n    </Switch>\n    </>\n     ) \n    }\n  }\n\n}"]},"metadata":{},"sourceType":"module"}