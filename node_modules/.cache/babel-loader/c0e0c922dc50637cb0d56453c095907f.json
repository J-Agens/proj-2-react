{"ast":null,"code":"var _jsxFileName = \"/Users/Shadow/react1/myapp/src/components/rem/create.tsx\";\nimport React from 'react';\nimport { createNew } from '../../api/LibraryClient';\nimport { Review } from '../view1'; // import { Route, Switch, Redirect} from 'react-router';\n//the updateUser prop takes a function that takes a user and returns voide\n// it will match updateUser in App.\n\nexport class UpdateRe extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setAmount = pw => {\n      this.setState({\n        amount: pw.currentTarget.value\n      });\n    };\n\n    this.setDescription = pw => {\n      this.setState({\n        description: pw.currentTarget.value\n      });\n    };\n\n    this.setType = pw => {\n      this.setState({\n        type: pw.currentTarget.value\n      });\n    };\n\n    this.clearError = () => {\n      this.setState({\n        errorMessage: '',\n        isError: false,\n        success: false,\n        id: '',\n        amount: '',\n        description: '',\n        type: ''\n      });\n    };\n\n    this.attemptUpdate = async event => {\n      event.preventDefault();\n      console.log(event);\n\n      try {\n        const levelup = await createNew(this.props.id, this.state.amount, this.state.description, this.state.type);\n        this.props.updateUserxx(levelup);\n        this.setState({\n          user: levelup,\n          amount: '',\n          description: '',\n          success: true\n        });\n        console.log(levelup);\n      } catch (error) {\n        this.setState({\n          description: '',\n          isError: true,\n          success: false,\n          errorMessage: error.message\n        });\n      }\n    };\n\n    this.state = {\n      id: '',\n      amount: '',\n      description: '',\n      type: '',\n      userid: '',\n      isError: false,\n      errorMessage: '',\n      success: false,\n      user: ''\n    };\n  }\n\n  render() {\n    if (!this.state.success) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.attemptUpdate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"tag\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }\n      }, \" New\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.setAmount,\n        value: this.state.amount,\n        type: \"number\",\n        name: \"amount\",\n        id: \"amount\",\n        placeholder: \"set amount\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.setDescription,\n        value: this.state.description,\n        type: \"text\",\n        name: \"description\",\n        placeholder: \"describe here\",\n        autoComplete: \"false\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        onChange: this.setType,\n        name: \"type\",\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, \"select type\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }\n      }, \"Food\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }\n      }, \"Travel\"), /*#__PURE__*/React.createElement(\"option\", {\n        value: \"3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, \"Other\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"notdiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 7\n        }\n      }, this.state.errorMessage));\n    } else {\n      const data = this.state.user;\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 5\n        }\n      }, \"Submitted ..\", /*#__PURE__*/React.createElement(\"span\", {\n        className: \"button\",\n        onClick: this.clearError,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 9\n        }\n      }, \"create another\")), /*#__PURE__*/React.createElement(Review, {\n        id: data.reimbursementId,\n        author: data.author,\n        amount: data.amount,\n        resolver: data.resolver,\n        status: data.status,\n        type: data.type,\n        description: data.description,\n        date1: data.dateSubmitted,\n        date2: data.dateResolved,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 5\n        }\n      }));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/Shadow/react1/myapp/src/components/rem/create.tsx"],"names":["React","createNew","Review","UpdateRe","Component","constructor","props","setAmount","pw","setState","amount","currentTarget","value","setDescription","description","setType","type","clearError","errorMessage","isError","success","id","attemptUpdate","event","preventDefault","console","log","levelup","state","updateUserxx","user","error","message","userid","render","data","reimbursementId","author","resolver","status","dateSubmitted","dateResolved"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Reimbursement } from '../../models/Reimbursement';\nimport { createNew } from '../../api/LibraryClient';\nimport { Review } from '../view1';\n// import { Route, Switch, Redirect} from 'react-router';\n\n//the updateUser prop takes a function that takes a user and returns voide\n// it will match updateUser in App.\ninterface IUpdateComponentProps {\n  updateUserxx: (user:Reimbursement) => void;\n  id:number|any;\n}\n\ninterface ILoginComponentState {\n    id: number |any,\n    amount: number |any,\n    description: number |any,\n    type: number |any,\n  userid: number | any;\n  isError: boolean;\n  errorMessage: string;\n  success:boolean;\n  user: Reimbursement |any;\n}\n\nexport class UpdateRe extends React.Component<IUpdateComponentProps, ILoginComponentState> {\n\n  constructor(props: IUpdateComponentProps) {\n    super(props);\n    this.state = {\n        id: '',\n        amount: '',\n        description: '',\n        type: '',\n      userid: '',\n      isError: false,\n      errorMessage: '',\n      success:false,\n      user:'',\n    }\n  }\n\n  setAmount= (pw: any) => {\n    this.setState({\n      amount: pw.currentTarget.value,\n    })\n  }\n  setDescription = (pw: any) => {\n    this.setState({\n      description: pw.currentTarget.value,\n    })\n  }\n  setType= (pw: any) => {\n    this.setState({\n      type: pw.currentTarget.value,\n    })\n  }\n//   setId = (pw: any) => {\n//     this.setState({\n//       id: pw.currentTarget.value,\n//     })\n//   }\n\n  clearError = () => {\n    this.setState({\n      errorMessage: '',\n      isError: false,\n      success: false,\n      id: '',\n      amount: '',\n      description: '',\n      type: '',\n\n      \n    })\n  }\n\n  attemptUpdate = async (event: any) => {\n    event.preventDefault();\n    console.log(event);\n    try {\n      const levelup : Reimbursement = await createNew(this.props.id,this.state.amount,this.state.description,this.state.type);\n      this.props.updateUserxx(levelup);\n      this.setState({\n          user: levelup,\n        amount: '',\n        description: '',\n        success: true\n      });\n      console.log(levelup);\n    \n    } catch (error) {\n      this.setState({\n        description: '',\n        isError: true,\n        success:false,\n        errorMessage: error.message,\n      })\n    }\n  }\n\n  render() {\n    if(!this.state.success){\n    return (\n      <div>\n      <form onSubmit={this.attemptUpdate}>\n        <span className=\"tag\"> New</span>\n          {/* <div>\n            <input onChange={this.setId} value={this.state.id} type=\"number\" name=\"id\"  \n            placeholder=\"ID (required!)\"  required />\n          </div> */}\n          <div>\n          <input onChange={this.setAmount} value={this.state.amount} type=\"number\" name=\"amount\"\n           id=\"amount\" placeholder=\"set amount\"\n           required/>\n            <input onChange={this.setDescription} value={this.state.description} type=\"text\" name=\"description\" \n            placeholder=\"describe here\" autoComplete='false' required />\n          </div>\n          \n            <div>\n            <select onChange={this.setType} name=\"type\" required>\n            <option >select type</option>\n            <option value=\"1\">Food</option>\n            <option value=\"2\">Travel</option>\n            <option value=\"3\">Other</option>\n            </select>\n          </div>\n          \n          <div className=\"notdiv\">\n            <input type=\"submit\" value=\"submit\" />\n          </div>\n      </form>\n     {<h3>{this.state.errorMessage}</h3>}\n      </div>\n    );\n    }\n    else{ \n        \n        const data = this.state.user;\n        \n        return (\n      <>\n    <h3>Submitted ..\n\n        <span className=\"button\" onClick={this.clearError}>create another</span>\n    </h3>\n    <Review id={data.reimbursementId} author={data.author} amount={data.amount} resolver={data.resolver} status={data.status} type={data.type} description={data.description} date1={data.dateSubmitted} date2={data.dateResolved} />\n\n    </>\n     ) \n    }\n  }\n\n}"]},"metadata":{},"sourceType":"module"}