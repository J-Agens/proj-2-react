{"ast":null,"code":"var _jsxFileName = \"/Users/Shadow/react1/myapp/src/components/updatex.tsx\";\nimport React from 'react';\nimport { updatexx } from '../api/LibraryClient';\nexport class UpdateUsers extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.setUsername = un => {\n      this.setState({\n        username: un.currentTarget.value\n      });\n    };\n\n    this.setPassword = pw => {\n      this.setState({\n        password: pw.currentTarget.value\n      });\n    };\n\n    this.setFirstname = pw => {\n      this.setState({\n        firstname: pw.currentTarget.value\n      });\n    };\n\n    this.setLastname = pw => {\n      this.setState({\n        lastname: pw.currentTarget.value\n      });\n    };\n\n    this.setEmail = pw => {\n      this.setState({\n        email: pw.currentTarget.value\n      });\n    };\n\n    this.setRoleid = pw => {\n      this.setState({\n        role: pw.currentTarget.value\n      });\n    };\n\n    this.setUserid = pw => {\n      this.setState({\n        userid: pw.currentTarget.value\n      });\n    };\n\n    this.clearError = () => {\n      this.setState({\n        errorMessage: '',\n        isError: false,\n        success: false\n      });\n    };\n\n    this.attemptUpdate = async event => {\n      event.preventDefault();\n      console.log(event);\n\n      try {\n        const levelup = await updatexx(this.state.username, this.state.password, this.state.firstname, this.state.lastname, this.state.email, this.state.role, this.state.userid);\n        this.props.updateUserxx(levelup);\n        this.setState({\n          username: '',\n          password: '',\n          success: true\n        });\n        console.log(levelup);\n      } catch (error) {\n        this.setState({\n          password: '',\n          isError: true,\n          success: false,\n          errorMessage: error.message\n        });\n      }\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      firstname: '',\n      lastname: '',\n      email: '',\n      role: '',\n      userid: 0,\n      isError: false,\n      errorMessage: '',\n      success: false\n    };\n  } //We'll need a few functions to modify individual pieces of our state\n  // These take change events\n\n\n  render() {\n    if (!this.state.success) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.attemptUpdate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"tag\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }\n      }, \" update\"), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.setUserid,\n        value: this.state.userid,\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"ID\",\n        autoComplete: this.state.userid,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.setUsername,\n        value: this.state.username,\n        type: \"text\",\n        name: \"username\",\n        id: \"username\",\n        placeholder: \"change username\",\n        autoComplete: this.state.username,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.setPassword,\n        value: this.state.password,\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"change password\",\n        autoComplete: this.state.password,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.setFirstname,\n        value: this.state.firstname,\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"change firstname\",\n        autoComplete: this.state.firstname,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.setLastname,\n        value: this.state.lastname,\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"Last name\",\n        autoComplete: this.state.lastname,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.setEmail,\n        value: this.state.email,\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"change email\",\n        autoComplete: this.state.email,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        onChange: this.setRoleid,\n        value: this.state.role,\n        type: \"password\",\n        name: \"password\",\n        id: \"password\",\n        placeholder: \"Role\",\n        autoComplete: this.state.role,\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"notdiv\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }\n      }))), /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 7\n        }\n      }, this.state.errorMessage));\n    } else {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 5\n        }\n      }, \"user updated\"));\n    }\n  }\n\n}","map":{"version":3,"sources":["/Users/Shadow/react1/myapp/src/components/updatex.tsx"],"names":["React","updatexx","UpdateUsers","Component","constructor","props","setUsername","un","setState","username","currentTarget","value","setPassword","pw","password","setFirstname","firstname","setLastname","lastname","setEmail","email","setRoleid","role","setUserid","userid","clearError","errorMessage","isError","success","attemptUpdate","event","preventDefault","console","log","levelup","state","updateUserxx","error","message","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { User } from '../models/User';\nimport { updatexx } from '../api/LibraryClient';\nimport { Route, Switch, Redirect} from 'react-router';\n\n//the updateUser prop takes a function that takes a user and returns voide\n// it will match updateUser in App.\ninterface IUpdateComponentProps {\n  updateUserxx: (user:User) => void;\n}\n\ninterface ILoginComponentState {\n  username: string;\n  password: string;\n  firstname: string;\n  lastname: string;\n  email: string;\n  role: string;\n  userid: number | any;\n  isError: boolean;\n  errorMessage: string;\n  success:boolean;\n}\n\nexport class UpdateUsers extends React.Component<IUpdateComponentProps, ILoginComponentState> {\n\n  constructor(props: IUpdateComponentProps) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      firstname: '',\n      lastname: '',\n      email: '',\n      role: '',\n      userid: 0,\n      isError: false,\n      errorMessage: '',\n      success:false\n    }\n  }\n\n  //We'll need a few functions to modify individual pieces of our state\n  // These take change events\n  setUsername = (un: any) => {\n    this.setState({\n      username: un.currentTarget.value,\n    })\n  }\n\n  setPassword = (pw: any) => {\n    this.setState({\n      password: pw.currentTarget.value,\n    })\n  }\n  setFirstname = (pw: any) => {\n    this.setState({\n      firstname: pw.currentTarget.value,\n    })\n  }\n  setLastname= (pw: any) => {\n    this.setState({\n      lastname: pw.currentTarget.value,\n    })\n  }\n  setEmail = (pw: any) => {\n    this.setState({\n      email: pw.currentTarget.value,\n    })\n  }\n  setRoleid= (pw: any) => {\n    this.setState({\n      role: pw.currentTarget.value,\n    })\n  }\n  setUserid = (pw: any) => {\n    this.setState({\n      userid: pw.currentTarget.value,\n    })\n  }\n\n  clearError = () => {\n    this.setState({\n      errorMessage: '',\n      isError: false,\n      success: false\n    })\n  }\n\n  attemptUpdate = async (event: any) => {\n    event.preventDefault();\n    console.log(event);\n    try {\n      const levelup : User = await updatexx(this.state.username, this.state.password,this.state.firstname,this.state.lastname,this.state.email,this.state.role,this.state.userid);\n      this.props.updateUserxx(levelup);\n      this.setState({\n        username: '',\n        password: '',\n        success: true\n      });\n      console.log(levelup);\n    \n    } catch (error) {\n      this.setState({\n        password: '',\n        isError: true,\n        success:false,\n        errorMessage: error.message,\n      })\n    }\n  }\n\n  render() {\n    if(!this.state.success){\n    return (\n      <div>\n      <form onSubmit={this.attemptUpdate}>\n        <span className=\"tag\"> update</span>\n          <div>\n            <input onChange={this.setUserid} value={this.state.userid} type=\"password\" name=\"password\" id=\"password\" \n            placeholder=\"ID\" autoComplete={this.state.userid} required />\n          </div>\n          <div>\n          <input onChange={this.setUsername} value={this.state.username} type=\"text\" name=\"username\"\n           id=\"username\" placeholder=\"change username\"\n           autoComplete={this.state.username} required/>\n            <input onChange={this.setPassword} value={this.state.password} type=\"password\" name=\"password\" id=\"password\" \n            placeholder=\"change password\" autoComplete={this.state.password} required />\n          </div>\n          <div>\n            <input onChange={this.setFirstname} value={this.state.firstname} type=\"password\" name=\"password\" id=\"password\" \n            placeholder=\"change firstname\" autoComplete={this.state.firstname} required />\n            <input onChange={this.setLastname} value={this.state.lastname} type=\"password\" name=\"password\" id=\"password\" \n            placeholder=\"Last name\" autoComplete={this.state.lastname} required />\n          </div>\n          <div>\n            <input onChange={this.setEmail} value={this.state.email} type=\"password\" name=\"password\" id=\"password\" \n            placeholder=\"change email\" autoComplete={this.state.email} required />\n\n            <input onChange={this.setRoleid} value={this.state.role} type=\"password\" name=\"password\" id=\"password\" \n            placeholder=\"Role\" autoComplete={this.state.role} required />\n          </div>\n          \n          <div className=\"notdiv\">\n            <input type=\"submit\" value=\"submit\" />\n          </div>\n      </form>\n     {<h3>{this.state.errorMessage}</h3>}\n      </div>\n    );\n    }\n    else{ return (\n      <>\n    <h3>user updated</h3>\n    {/* <Switch>\n      <Route>\n      <Redirect to=\"/hello\"/>\n      </Route>\n    </Switch> */}\n    </>\n     ) \n    }\n  }\n\n}"]},"metadata":{},"sourceType":"module"}