{"ast":null,"code":"var _jsxFileName = \"/Users/Shadow/react1/myapp/src/components/usersComponenet.tsx\";\nimport React from 'react';\nimport { AllUsers } from './UsersAll';\nimport { SingleUser } from './SingleUser'; // import { User } from '../models/User';\n\nexport default class users extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.show = () => {\n      this.setState({\n        random: true\n      });\n    };\n\n    this.hide = () => {\n      this.setState({\n        random: false\n      });\n    };\n\n    this.changevalue = () => {\n      this.setState({\n        value: 1\n      });\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        input: e.target.value\n      });\n    };\n\n    this.handleSubmit = event => {\n      this.setState({\n        value: this.state.input\n      });\n      event.preventDefault();\n    };\n\n    this.state = {\n      userid: 2,\n      value: '',\n      single: '',\n      input: '',\n      handleChange: this.handleChange.bind(this),\n      handleSubmit: this.handleSubmit.bind(this),\n      random: false\n    };\n  } // shouldComponentUpdate(nextProps: any, nextState: any) {\n  //     return this.state.value !== nextState.value;\n  //   }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"dif\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, \"Employee ID: \"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Fetch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"panel\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"show individual\",\n      onClick: this.show,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \"Individual \"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"hide individual\",\n      onClick: this.hide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"All \")), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"hideme\",\n      className: \"wrapmein\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, this.state.singleShow && /*#__PURE__*/React.createElement(SingleUser, {\n      userid: this.state.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 40\n      }\n    }), this.state.Allshow && /*#__PURE__*/React.createElement(AllUsers, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 37\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/Shadow/react1/myapp/src/components/usersComponenet.tsx"],"names":["React","AllUsers","SingleUser","users","Component","constructor","props","show","setState","random","hide","changevalue","value","handleChange","e","input","target","handleSubmit","event","state","preventDefault","userid","single","bind","render","singleShow","Allshow"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {AllUsers} from './UsersAll';\nimport {SingleUser} from './SingleUser';\n// import { User } from '../models/User';\nimport { getSingle } from '../api/LibraryClient';\nimport { User } from '../models/User copy';\n\n\n\ninterface IAppState {\n    userid:number;\n    single: any;\n  }\n\nexport default class users extends React.Component<IAppState,any> {\n\nconstructor(props:any){\n    super(props);\n    this.state = {\n        userid : 2,\n        value: '',\n        single:'' ,\n        input: '',\n        handleChange : this.handleChange.bind(this),\n        handleSubmit : this.handleSubmit.bind(this),\n        random: false,\n    }\n}\n// shouldComponentUpdate(nextProps: any, nextState: any) {\n//     return this.state.value !== nextState.value;\n//   }\n\nshow = () => {\n    this.setState({\n      random: true\n    })\n  }\n\n  hide = () => {\n    this.setState({\n      random: false    \n    })\n  }\n\nchangevalue = () => {\n    this.setState({\n      value:  1     \n    })\n  }\n\n  handleChange = (e:any) => {\n    this.setState({input: e.target.value});\n  }\n\n  handleSubmit = (event:any)=> {\n    this.setState({value: this.state.input});\n    event.preventDefault();\n  }\n\n    render(){\n        return(\n            <>\n            <div className=\"dif\">\n                <form onSubmit={this.handleSubmit}>\n                <label>Employee ID: </label>\n                <input type=\"text\" onChange={this.handleChange} />\n                <input type=\"submit\" value=\"Fetch\" />\n                </form>\n            </div>\n            <div className=\"panel\">\n            <span className=\"show individual\" onClick={this.show}>Individual </span>\n            <span className=\"hide individual\" onClick={this.hide}>All </span>\n            </div>\n            \n            <div id =\"hideme\" className=\"wrapmein\">\n            { this.state.singleShow && <SingleUser userid={this.state.value}/>}\n            { this.state.Allshow && <AllUsers />}\n               </div>          \n            </>\n            \n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}