{"version":3,"sources":["components/NavbarComponent.tsx","models/User.ts","models/Reimbursement.ts","errors/FailedLoginError.ts","api/LibraryClient.tsx","components/default/LoginComponent.tsx","components/default/Welcome.tsx","components/default/Logout.tsx","components/default/Home.tsx","components/default/NoMatch.tsx","components/rem/view1.tsx","errors/error1.tsx","components/rem/RemAll.tsx","components/rem/create.tsx","components/rem/patching.tsx","components/rem/author.tsx","components/rem/bystatus.tsx","components/rem/RemAllx.tsx","components/rem/RemAllxx.tsx","components/reimbursementComponenet.tsx","components/emp/view.tsx","components/emp/UsersAll.tsx","components/emp/SingleUser.tsx","components/emp/updatex.tsx","components/emp/updatexx.tsx","components/emp/UsersAllx.tsx","components/usersComponenet.tsx","App.tsx","index.tsx"],"names":["NavbarComponent","to","this","props","User","role","className","React","Component","id","username","password","firstname","lastname","email","Reimbursement","reimbursementId","author","amount","dateSubmitted","dateResolved","description","resolver","status","type","FailedLoginError","message","Error","libraryClient","axios","create","baseURL","withCredentials","getAllUsers","a","get","response","console","log","data","destroy","Allreimbursements","map","userObj","createNew","b","c","d","post","updatexx","e","f","g","patch","roleId","userId","authorRe","patching","reimbursementid","sta","getSingle","login","un","pw","LoginComponent","setUsername","setState","currentTarget","value","setPassword","clearError","errorMessage","isError","success","attemptLogin","event","preventDefault","state","loggedInUser","updateUser","onSubmit","onChange","name","placeholder","autoComplete","required","Welcome","Logout","logout","Home","NoMatch","Review","key","thekey","Math","floor","random","date1","date2","Err1","err","Err2","ErrS","JSON","stringify","All","members","u","x","current","UpdateRe","setAmount","setDescription","setType","attemptUpdate","levelup","updateUserxx","user","userid","onClick","Paa","setStatus","setTheid","theid","Authored","authorr","nextProps","nextState","Stat","single","Allx","filter","Allxx","users","showIn","random1","randomx1","randomxx1","random2","random3","random4","showAll","showAllx","showAllxx","showS","showUp","showP","changevalue","handleChange","value1","target","handleSubmit","input","handleChange2","value2","handleSubmit2","input2","userRole","bind","Eview","pass","AllUsers","SingleUser","_isMounted","access","UpdateUsers","setFirstname","setLastname","setEmail","setRoleid","setUserid","UpdateUsersx","getUser","disabled","AllUsersx","showx1","randomx2","showx2","good","App","cooid","removeUser","G","path","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.967d561f.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n\nexport class NavbarComponent extends React.Component<any,any> {\n\n\n\n  render() {\n\n    return (\n      \n    <>\n        <ul>     \n          <li><NavLink to=\"/hello\" >Home</NavLink></li>\n          {  this.props.User && <li><NavLink to=\"/employees\">{this.props.User.role=== \"employee\"? 'Profile' : 'Employees'}</NavLink></li>}\n          { this.props.User && <li><NavLink to=\"/reimbursements\"> Reimbursements</NavLink></li>}\n          <li className=\"last\">&nbsp;</li>\n          { !this.props.User && <li><NavLink to=\"/login\">Login</NavLink></li>}          \n          { this.props.User && <li><NavLink to=\"/logout\">Logout</NavLink></li>}\n        </ul>\n    </>\n    )\n    }\n}","export class User {\n  id: number;\n  username: string;\n  password: string;\n  firstname: string;\n  lastname:string;\n  email: string;\n  role: string;\n\n  constructor(id:number, username:string, password:string, firstname:string, lastname:string, email:string, role:string) {\n    this.id = id;\n    this.username = username;\n    this.password = password;\n    this.firstname = firstname;\n    this.lastname = lastname;\n    this.email = email;\n    this.role = role;\n  }\n}","export class Reimbursement {\n    reimbursementId: number; \n    author: number;\n    amount: number;\n    dateSubmitted: number;\n    dateResolved: number; \n    description: string; \n    resolver: number; // will later change to role type...\n    status: number;\n    type: number;\n\n    constructor(reimbursementId:number, author:number, amount:number, dateSubmitted: number, dateResolved:number, description: string, resolver: number, status:number, type:number) {\n      this.reimbursementId = reimbursementId;\n      this.author = author;\n      this.amount = amount;\n      this.dateSubmitted = dateSubmitted;\n      this.dateResolved = dateResolved;\n      this.description = description;\n      this.resolver = resolver;\n      this.status = status;\n      this.type = type;\n    }\n  }\n","\nexport class FailedLoginError extends Error {\n  username: string | undefined;\n\n  constructor(message?:string, username?:string) {\n    super(message);\n    this.username = username;\n  }\n}","import axios from 'axios';\nimport { User } from '../models/User';\nimport { Reimbursement } from '../models/Reimbursement';\n\nimport { FailedLoginError } from '../errors/FailedLoginError';\n\n\nconst libraryClient = axios.create({\n  baseURL: 'http://100.25.132.252:3000',\n  withCredentials: true,\n});\n\n//@adam : Library-express is running on my EC2 with public IP 18.232.125.207\n\n\nexport async function getAllUsers() : Promise<User[] | any> {\n  const response = await libraryClient.get('/users');\n  // return response.data;\n  console.log(response.data);\n  return response.data;\n  // return response.data.map((userObj: any) => {\n  //   const {id, username, password, firstname, lastname, email, role} = userObj;\n  //   return new User(id, username, password, firstname, lastname,email, role);\n  // });\n}\n\nexport async function destroy() : Promise<any> {\n  const response = await libraryClient.get('/logout');\n  // return response.data;\n  console.log(response.data);\n}\n\nexport async function Allreimbursements() : Promise<Reimbursement[] | any> {\n  const response = await libraryClient.get('/reimbursements');\n  // return response.data;\n  console.log(response.data);\n  return response.data.map((userObj: any) => {\n    const {reimbursementId, author, amount, dateSubmitted, dateResolved, description, resolver, status, type} = userObj;\n    return new Reimbursement(reimbursementId, author, amount, dateSubmitted, dateResolved,description, resolver,status, type);\n  });\n}\n\n\n\n\nexport async function createNew(a:number,b:number,c:string, d:number) : Promise<Reimbursement[] | any> {\n\n  const response = await libraryClient.post(`/reimbursements`,{id:a,amount:b,description:c,type:d});\n  return response.data;\n}\n\nexport async function updatexx(a:any,b:any,c:any,d:any,e:any,f:any, g:number) : Promise<User[] | any> {\n\n  const response = await libraryClient.patch(`/users`,{username:!!(a)?a:null,password:!!(b)?b:null,firstname:!!(c)?c:null,lastname:!!(d)?d:null,email:!!(e)?e:null,roleId:!!(f)?f:null, userId:g});\n  return response.data;\n}\n\nexport async function authorRe(id:number) : Promise<Reimbursement[] | any> {\n  const response = await libraryClient.get(`reimbursements/author/userid/${id}`);\n  console.log(response.data);\n  return response.data;\n  // return response.data.map((userObj: any) => {\n  //   const {reimbursementId, author, amount, dateSubmitted, dateResolved, description, resolver, status, type} = userObj;\n  //   return new Reimbursement(reimbursementId, author, amount, dateSubmitted, dateResolved,description, resolver,status, type);\n  // });\n}\n\nexport async function patching(a:any,b:any,c:any,d:any,e:any,f:any) : Promise<Reimbursement[] | any> {\n  const response = await libraryClient.patch(`reimbursements/`,{reimbursementid:!!(a)?a:null,resolver:!!(b)?b:null,amount:!!(c)?c:null,description:!!(d)?d:null,status:!!(e)?e:null,type:!!(f)?f:null});\n  console.log(response.data);\n  return response.data;\n  // return response.data.map((userObj: any) => {\n  //   const {reimbursementId, author, amount, dateSubmitted, dateResolved, description, resolver, status, type} = userObj;\n  //   return new Reimbursement(reimbursementId, author, amount, dateSubmitted, dateResolved,description, resolver,status, type);\n  // });\n}\n\nexport async function sta(id:number) : Promise<Reimbursement[] | any> {\n  const response = await libraryClient.get(`reimbursements/status/${id}`);\n  console.log(response.data);\n  return response.data.map((userObj: any) => {\n    const {reimbursementId, author, amount, dateSubmitted, dateResolved, description, resolver, status, type} = userObj;\n    return new Reimbursement(reimbursementId, author, amount, dateSubmitted, dateResolved,description, resolver,status, type);\n  });\n}\n\nexport async function getSingle(id:number) : Promise<User[] | any> {\n  const response = await libraryClient.get(`/users/${id}`);\n  console.log(response.data);\n  return response.data;\n}\n\nexport async function login(un: string, pw: string): Promise<User> {\n  try {\n    const response = await libraryClient.post('/login', {username: un, password: pw});\n    const {id, username, password,firstname,lastname, email, role} = response.data;\n    return new User(id, username, password, firstname,lastname, email, role);\n  } catch (e) {\n    if(e.response.status === 401 ||e.response.status === 400) {\n      throw new FailedLoginError('Failed to authenticate', un);\n    } else {\n      // We could throw a different custom error, this exposes a little too much to the user.\n      throw e;\n    }\n  }\n  \n}\n","import React from 'react';\nimport { User } from '../../models/User';\nimport { login } from '../../api/LibraryClient';\nimport { Route, Switch, Redirect} from 'react-router';\n\n//the updateUser prop takes a function that takes a user and returns voide\n// it will match updateUser in App.\ninterface ILoginComponentProps {\n  updateUser: (user:User) => void;\n}\n\ninterface ILoginComponentState {\n  username: string;\n  password: string;\n  isError: boolean;\n  errorMessage: string;\n  success:boolean;\n}\n\nexport class LoginComponent extends React.Component<ILoginComponentProps, ILoginComponentState> {\n\n  constructor(props: ILoginComponentProps) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      isError: false,\n      errorMessage: '',\n      success:false\n    }\n  }\n\n  //We'll need a few functions to modify individual pieces of our state\n  // These take change events\n  setUsername = (un: any) => {\n    this.setState({\n      username: un.currentTarget.value,\n    })\n  }\n\n  setPassword = (pw: any) => {\n    this.setState({\n      password: pw.currentTarget.value,\n    })\n  }\n\n  clearError = () => {\n    this.setState({\n      errorMessage: '',\n      isError: false,\n      success: false\n    })\n  }\n\n  attemptLogin = async (event: any) => {\n    event.preventDefault();\n    console.log(event);\n    try {\n      const loggedInUser : User = await login(this.state.username, this.state.password);\n      this.props.updateUser(loggedInUser);\n      this.setState({\n        username: '',\n        password: '',\n        success: true\n      });\n      console.log(loggedInUser);\n    \n    } catch (error) {\n      this.setState({\n        password: '',\n        isError: true,\n        success:false,\n        errorMessage: error.message,\n      })\n    }\n  }\n\n  render() {\n    if(!this.state.success){\n    return (\n      <div>\n      <form onSubmit={this.attemptLogin}>\n      <span className=\"tag\"> Login</span>\n        <div>\n          <label>Username</label>\n          <input onChange={this.setUsername} value={this.state.username} type=\"text\" name=\"username\"\n           id=\"username\" placeholder=\"your username\"\n           autoComplete={this.state.username} required/>\n          </div>\n          <div>\n          <label>Password</label>\n            <input onChange={this.setPassword} value={this.state.password} type=\"password\" name=\"password\" id=\"password\" \n            placeholder=\"password\" autoComplete={this.state.password} required />\n          </div>\n          <div className=\"notdiv\">\n            <input type=\"submit\" value=\"submit\" />\n          </div>\n      </form>\n     { this.state.isError && <h3>{this.state.errorMessage}</h3>}\n      </div>\n    );\n    }\n    else{ return (\n      <>\n    <h3>you've logged in successfuly</h3>\n    <Switch>\n      <Route>\n      <Redirect to=\"/hello\"/>\n      </Route>\n    </Switch>\n    </>\n     ) \n    }\n  }\n\n}","import React from 'react';\n\nexport default class Welcome extends React.Component<any> {\n    \n  \n    render(){\n        return(\n            <>\n            <div className=\"logoo\"> \n                <span>\n                    Hi {this.props.username},\n                </span>\n                <span className=\"farmost\">\n                    role: {this.props.role}\n                </span> \n                </div>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { User } from '../../models/User';\nimport { destroy } from '../../api/LibraryClient';\n// import { Route, Redirect, Switch} from 'react-router'\n\n\ninterface ILoginComponentProps {\n  updateUser: (user:User) => void;\n  // emptyMembers: (user:User) =>void;\n}\n\n\nexport class Logout extends React.Component<ILoginComponentProps> {\n\n  logout = async (event: any) =>  {\n    event.preventDefault();\n    try {\n      const loggedInUser : any = null;\n      // const members : any = null;\n      this.props.updateUser(loggedInUser); \n      await destroy(); \n      // this.props.emptyMembers(members) \n      // const notLogedIn = true;\n      // window.location.replace('/hello');\n      console.log(loggedInUser);\n      // return(<Switch><Route><Redirect to=\"/hello\" /></Route></Switch>);\n    } catch (error) {\n      console.log('not logged In')\n    }\n  }\n\n  render() {\n    return (\n      <div>\n      <form onSubmit={this.logout}>\n          <span>Are you sure, you wanna leave</span>\n          <div className=\"notdiv\">\n            <input type=\"submit\" value=\"YES\" />\n          </div>\n      </form>\n      </div>\n    );\n  }\n\n}","import React from 'react';\n\nexport default class Home extends React.Component<any> {\n    \n    render(){\n        return(\n            <div className=\"home\">\n            <p> Welcome to Reimburesement System</p>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router';\nimport { destroy } from '../../api/LibraryClient';\nimport {User} from '../../models/User';\n\ninterface ILoginComponentProps {\n    updateUser: (user:User) => void;\n    // emptyMembers: (user:User) =>void;\n  }\n\nexport default class NoMatch extends React.Component<ILoginComponentProps,any> {\n\n    componentDidMount(){\n        const loggedInUser : any = null;\n      this.props.updateUser(loggedInUser); \n      destroy();\n    }\n\n    render(){\n        return(\n            \n            <>\n            <Switch>\n        <Route>\n        <Redirect to=\"/hello\"/>\n        </Route>\n      </Switch>\n            </>\n        )\n    }\n}","import React from 'react';\n\n\nexport  class Review extends React.Component<any> {\n    render(){\n        return(\n            <>\n            <div key={this.props.thekey || Math.floor(Math.random() * 1000)} className=\"col\">\n            <span>Reimbursement #  <span>{this.props.id}</span></span>  \n            <span>author  <span>{this.props.author}</span></span>  \n            <span>amount  <span>{this.props.amount}</span></span>  \n            <span>description <span>{this.props.description}</span></span>  \n            <span>status <span>{this.props.status}</span></span>  \n            <span>type <span>{this.props.type}</span></span>  \n            <span>Resolver <span>{this.props.resolver}</span></span>  \n            <span>date submitted <span>{this.props.date1}</span></span> \n            <span>date resolved<span> {this.props.date2}</span></span> \n            </div>\n            </>\n        )\n    }\n}","import React from 'react';\n\nexport class Err1 extends React.Component<any> {\n    render(){\n        const err = this.props.err;\n        switch(err){\n            case \"Request failed with status code 402\":\n               return <h3>login required</h3>\n            case \"Request failed with status code 403\":\n            return  <h3>You are not authorized!</h3>\n            case \"Request failed with status code 401\":\n            return  <h3>Provide a numeric id only!</h3>\n          default :\n              return <h3>unknown Error</h3>\n        }\n    }\n}\n\nexport class Err2 extends React.Component<any> {\n    render(){\n        const err = this.props.err;\n        switch(err){\n            case \"Request failed with status code 402\":\n                return <h3>login required</h3>\n             case \"Request failed with status code 403\":\n                return  <h3>You are not authorized!</h3>\n                case \"Request failed with status code 400\":\n                return  <h3>Provide a numeric id only!</h3>\n             default :\n           return <h3>{err} </h3>\n        }\n    }\n}\nexport class ErrS extends React.Component<any> {\n    render(){\n        const err = this.props.err;\n        const data = this.props.data;\n        switch(err){\n            case \"Request failed with status code 400\":\n               return <h3>Must include numeric value</h3>\n            case \"Request failed with status code 401\":\n               return  <h3>You are not authorized!</h3>\n               case \"Request failed with status code 405\":\n               return  <h3>No Reimbursement/s found</h3>\n            default :\n               return <h3>{JSON.stringify(data)}</h3>\n        }\n    }\n}\n","import React from 'react';\nimport { Reimbursement } from '../../models/Reimbursement';\nimport { Allreimbursements } from '../../api/LibraryClient';\nimport { Review } from './view1';\nimport { Err1 } from '../../errors/error1';\n// import { QuickTable } from './QuickTable';\n\ninterface IBooksDisplayState {\n  members: Reimbursement[];\n  isError: boolean;\n  errorMessage: string;\n}\n\nexport class All extends React.Component<any, IBooksDisplayState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      members: [],\n      isError: false,\n      errorMessage: '',\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({\n        members: await Allreimbursements()\n      })\n    } catch (e) {\n      // We set the error information in our state.\n      // This will let us render something about the error to the end user\n      this.setState({\n        \n        isError: true,\n        errorMessage: e.message,\n      })\n    }\n  }\n\n  \n\n  clearError = () => {\n    this.setState({\n      isError: false,\n      errorMessage: '',\n    });\n  }\n\n  render() {\n      \n    if(!this.state.isError) {\n      //map to a string so quicktable can render this.\n      \n      return this.state.members.map((u:Reimbursement,x:number)=>{\n     return(\n      <Review key={x} thekey={x} current={this.props.current} id={u.reimbursementId} author={u.author} amount={u.amount} resolver={u.resolver} status={u.status} type={u.type} description={u.description} date1={u.dateSubmitted} date2={u.dateResolved} />\n\n         )      \n         })\n    } \nelse { \n    return <Err1 err={this.state.errorMessage} />\n        \n    }\n    \n  }\n  \n}","import React from 'react';\nimport { Reimbursement } from '../../models/Reimbursement';\nimport { createNew } from '../../api/LibraryClient';\nimport { Review } from './view1';\n// import { Route, Switch, Redirect} from 'react-router';\n\n//the updateUser prop takes a function that takes a user and returns voide\n// it will match updateUser in App.\ninterface IUpdateComponentProps {\n  updateUserxx: (user:Reimbursement) => void;\n  id:number|any;\n}\n\ninterface ILoginComponentState {\n    id: number |any,\n    amount: number |any,\n    description: number |any,\n    type: number |any,\n  userid: number | any;\n  isError: boolean;\n  errorMessage: string;\n  success:boolean;\n  user: Reimbursement |any;\n}\n\nexport class UpdateRe extends React.Component<IUpdateComponentProps, ILoginComponentState> {\n\n  constructor(props: IUpdateComponentProps) {\n    super(props);\n    this.state = {\n        id: '',\n        amount: '',\n        description: '',\n        type: '',\n      userid: '',\n      isError: false,\n      errorMessage: '',\n      success:false,\n      user:'',\n    }\n  }\n\n  setAmount= (pw: any) => {\n    this.setState({\n      amount: pw.currentTarget.value,\n    })\n  }\n  setDescription = (pw: any) => {\n    this.setState({\n      description: pw.currentTarget.value,\n    })\n  }\n  setType= (pw: any) => {\n    this.setState({\n      type: pw.currentTarget.value,\n    })\n  }\n//   setId = (pw: any) => {\n//     this.setState({\n//       id: pw.currentTarget.value,\n//     })\n//   }\n\n  clearError = () => {\n    this.setState({\n      errorMessage: '',\n      isError: false,\n      success: false,\n      id: '',\n      amount: '',\n      description: '',\n      type: '',\n\n      \n    })\n  }\n\n  attemptUpdate = async (event: any) => {\n    event.preventDefault();\n    console.log(event);\n    try {\n      const levelup : Reimbursement = await createNew(this.props.id,this.state.amount,this.state.description,this.state.type);\n      this.props.updateUserxx(levelup);\n      this.setState({\n          user: levelup,\n        amount: '',\n        description: '',\n        success: true\n      });\n      console.log(levelup);\n    \n    } catch (error) {\n      this.setState({\n        description: '',\n        isError: true,\n        success:false,\n        errorMessage: error.message,\n      })\n    }\n  }\n\n  render() {\n    if(!this.state.success){\n    return (\n      <div>\n      <form onSubmit={this.attemptUpdate}>\n        <span className=\"tag\"> New</span>\n          {/* <div>\n            <input onChange={this.setId} value={this.state.id} type=\"number\" name=\"id\"  \n            placeholder=\"ID (required!)\"  required />\n          </div> */}\n          <div>\n          <input onChange={this.setAmount} value={this.state.amount} type=\"number\" name=\"amount\"\n           id=\"amount\" placeholder=\"set amount\"\n           required/>\n            <input onChange={this.setDescription} value={this.state.description} type=\"text\" name=\"description\" \n            placeholder=\"describe here\" autoComplete='false' required />\n          </div>\n          \n            <div>\n            <select onChange={this.setType} name=\"type\" required>\n            <option >select type</option>\n            <option value=\"1\">Food</option>\n            <option value=\"2\">Travel</option>\n            <option value=\"3\">Other</option>\n            </select>\n          </div>\n          \n          <div className=\"notdiv\">\n            <input type=\"submit\" value=\"submit\" />\n          </div>\n      </form>\n     {<h3>{this.state.errorMessage}</h3>}\n      </div>\n    );\n    }\n    else{ \n        \n        const data = this.state.user;\n        \n        return (\n      <>\n    <h3>Submitted ..\n\n        <span className=\"button\" onClick={this.clearError}>create another</span>\n    </h3>\n    <Review id={data.reimbursementId} author={data.author} amount={data.amount} resolver={data.resolver} status={data.status} type={data.type} description={data.description} date1={data.dateSubmitted} date2={data.dateResolved} />\n\n    </>\n     ) \n    }\n  }\n\n}","import React from 'react';\nimport { Reimbursement } from '../../models/Reimbursement';\nimport { patching } from '../../api/LibraryClient';\nimport { Review } from './view1';\n// import { Route, Switch, Redirect} from 'react-router';\n\n//the updateUser prop takes a function that takes a user and returns voide\n// it will match updateUser in App.\ninterface IUpdateComponentProps {\n  updateUserxx: (user:Reimbursement) => void;\n  id:number|any;\n}\n\ninterface ILoginComponentState {\n    id: number |any,\n    amount: number |any,\n    description: number |any,\n    type: number |any,\n    status: number |any,\n    userid: number | any;\n    theid: number | any;\n    isError: boolean;\n  errorMessage: string;\n  success:boolean;\n  user: Reimbursement |any;\n}\n\nexport class Paa extends React.Component<IUpdateComponentProps, ILoginComponentState> {\n\n  constructor(props: IUpdateComponentProps) {\n    super(props);\n    this.state = {\n        id: '',\n        amount: '',\n        description: '',\n        type: '',\n        status: '',\n        userid: '',\n        theid: '',\n        isError: false,\n      errorMessage: '',\n      success:false,\n      user:'',\n    }\n  }\n\n  setAmount= (pw: any) => {\n    this.setState({\n      amount: pw.currentTarget.value,\n    })\n  }\n\n  setStatus= (pw: any) => {\n    this.setState({\n      status: pw.currentTarget.value,\n    })\n  }\n\n  setTheid= (pw: any) => {\n    this.setState({\n      theid: pw.currentTarget.value,\n    })\n  }\n  setDescription = (pw: any) => {\n    this.setState({\n      description: pw.currentTarget.value,\n    })\n  }\n  setType= (pw: any) => {\n    this.setState({\n      type: pw.currentTarget.value,\n    })\n  }\n//   setId = (pw: any) => {\n//     this.setState({\n//       id: pw.currentTarget.value,\n//     })\n//   }\n\n  clearError = () => {\n    this.setState({\n      errorMessage: '',\n      isError: false,\n      success: false,\n      id: '',\n      amount: '',\n      description: '',\n      type: '',\n\n      \n    })\n  }\n\n  attemptUpdate = async (event: any) => {\n    event.preventDefault();\n    console.log(event);\n    try {\n      const levelup : Reimbursement = await patching(this.state.theid,this.props.id,this.state.amount,this.state.description,this.state.status,this.state.type);\n      this.props.updateUserxx(levelup);\n      this.setState({\n          user: levelup,\n        amount: '',\n        description: '',\n        success: true\n      });\n      console.log(levelup);\n    \n    } catch (error) {\n      this.setState({\n        description: '',\n        isError: true,\n        success:false,\n        errorMessage: error.message,\n      })\n    }\n  }\n\n  render() {\n    if(!this.state.success){\n    return (\n      <div>\n      <form onSubmit={this.attemptUpdate}>\n        <span className=\"tag\"> New</span>\n          <div>\n            <input onChange={this.setTheid} value={this.state.theid} type=\"number\" name=\"id\"  \n            placeholder=\"Reimbursement ID (required!)\"  required />\n          </div>\n          <div>\n          <input onChange={this.setAmount} value={this.state.amount} type=\"number\" name=\"amount\"\n           id=\"amount\" placeholder=\"set amount\"\n           />\n            <input onChange={this.setDescription} value={this.state.description} type=\"text\" name=\"description\" \n            placeholder=\"describe here\" autoComplete='false'  />\n          </div>\n          \n            <div>\n            <select onChange={this.setType} name=\"type\" >\n            <option >select type</option>\n            <option value=\"1\">Food</option>\n            <option value=\"2\">Travel</option>\n            <option value=\"3\">Other</option>\n            </select>\n            <select onChange={this.setStatus} name=\"status\" >\n            <option >change status</option>\n            <option value=\"1\">pending</option>\n            <option value=\"2\">Aproved</option>\n            <option value=\"3\">denied</option>\n            </select>\n          </div>\n          \n          <div className=\"notdiv\">\n            <input type=\"submit\" value=\"submit\" />\n          </div>\n      </form>\n     {<h3>{this.state.errorMessage}</h3>}\n      </div>\n    );\n    }\n    else{ \n        \n        const data = this.state.user;\n        \n        return (\n      <>\n    <h3>sucessfully updated ..\n\n        <span className=\"button\" onClick={this.clearError}>updated another</span>\n    </h3>\n    <Review id={data.reimbursementId} author={data.author} amount={data.amount} resolver={data.resolver} status={data.status} type={data.type} description={data.description} date1={data.dateSubmitted} date2={data.dateResolved} />\n\n    </>\n     ) \n    }\n  }\n\n}","import React from 'react';\nimport { authorRe } from '../../api/LibraryClient';\nimport { Reimbursement } from '../../models/Reimbursement';\nimport {Review} from './view1';\nimport { Err1, ErrS } from '../../errors/error1';\n\n\ninterface IBooksDisplayState {\n  authorr: Reimbursement[]|any;\n  isError: boolean;\n  errorMessage: string;\n  userid:number;\n}\n\nexport class Authored extends React.Component<any, IBooksDisplayState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      authorr: [],\n      isError: false,\n      errorMessage: '',\n      userid: this.props.userid,\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({\n    authorr: await authorRe(this.props.userid || this.state.userid),\n          isError: false\n        })\n      }\n\n  shouldComponentUpdate(nextProps: any, nextState: any) {\n    return this.props.userid !== nextState.userid;\n  }\n\n \n\n  async UNSAFE_componentWillReceiveProps() {\n    try {\n\n      this.setState({\n        authorr: await authorRe(this.props.userid || this.state.userid),\n        isError: false\n      })\n    } catch (e) {\n      // We set the error information in our state.\n      // This will let us render something about the error to the end user\n      this.setState({\n        authorr: '',\n        isError: true,\n        errorMessage: e.message,\n      })\n    // }\n  }\n  }\n\n\n  \n\n  clearError = () => {\n    this.setState({\n      isError: false,\n      errorMessage: '',\n    });\n  }\n\n\n\n  render() {\n\n    const data = this.state.authorr;\n    if(typeof(data) === \"string\"){ \n            return <ErrS data={data} err={this.state.errorMessage} />\n    }\n\n    if(this.state.isError){\n        return <Err1 err={this.state.errorMessage} />\n    }else{\n        return (data.map((u:Reimbursement|any,x:number) =>{\n            return(\n     <Review key={x} thekey={x} id={u.reimbursementId} author={u.author} amount={u.amount}\n      resolver={u.resolver} status={u.status} type={u.type} description={u.description}\n       date1={u.dateSubmitted} date2={u.dateResolved} />\n                )      \n                })\n        )\n    }\n    \n  }\n  \n}","import React from 'react';\nimport { sta } from '../../api/LibraryClient';\nimport { Reimbursement } from '../../models/Reimbursement';\nimport { Review } from './view1';\nimport { Err2, ErrS } from '../../errors/error1';\n\n\ninterface IBooksDisplayState {\n  single: any;\n  isError: boolean;\n  errorMessage: string;\n}\n\nexport class Stat extends React.Component<any, IBooksDisplayState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      single: this.props.single,\n      isError: false,\n      errorMessage: '',\n    }\n  }\n\n  async componentDidMount() {\n    this.setState({\n      single: await sta(this.props.userid),\n          isError: false\n        })\n      }\n\n  shouldComponentUpdate(nextProps: any, nextState: any) {\n    return this.props.single !== nextState.single;\n  }\n\n  async UNSAFE_componentWillReceiveProps() {\n    try {\n\n      this.setState({\n        single: await sta(this.props.userid),\n        isError: false\n      })\n    } catch (e) {\n      // We set the error information in our state.\n      // This will let us render something about the error to the end user\n      this.setState({\n        single: '',\n        isError: true,\n        errorMessage: e.message,\n      })\n    // }\n  }\n  }\n\n  \n\n  clearError = () => {\n    this.setState({\n      isError: false,\n      errorMessage: '',\n    });\n  }\n\n\n\n  render() {\n\n    const data = this.state.single;\n    console.log(typeof(data));\n    if(typeof(data) === \"string\"){ \n        return <ErrS data={data} err={this.state.errorMessage}/>\n\n\n    }\n\n    if(this.state.isError){\n      return <Err2 err={this.state.errorMessage}/>\n    }else{\n\n        return (data.map((u:Reimbursement|any,x:number) =>{\n            return(\n                <Review key={x} thekey={x} id={u.reimbursementId} author={u.author} amount={u.amount} resolver={u.resolver} status={u.status} type={u.type} description={u.description} date1={u.dateSubmitted} date2={u.dateResolved} />\n\n)      \n})\n\n        )\n  }\n    \n  }\n  \n}","import React from 'react';\nimport { authorRe } from '../../api/LibraryClient';\nimport { Reimbursement } from '../../models/Reimbursement';\nimport {Review} from './view1';\nimport { Err1, ErrS } from '../../errors/error1';\n\n\ninterface IBooksDisplayState {\n  authorr: Reimbursement[]|any;\n  isError: boolean;\n  errorMessage: string;\n}\n\nexport class Allx extends React.Component<any, IBooksDisplayState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      authorr: 'loading..',\n      isError: false,\n      errorMessage: '',\n    }\n  }\n\n\n\n\n\n  async componentDidMount() {\n    try {\n\n      this.setState({\n        authorr: await authorRe(this.props.current),\n        isError: false\n      })\n\n    } catch (e) {\n      // We set the error information in our state.\n      // This will let us render something about the error to the end user\n      this.setState({\n        authorr: '',\n        isError: true,\n        errorMessage: e.message,\n      })\n    // }\n  }\n  }\n\n\n  \n\n  clearError = () => {\n    this.setState({\n      isError: false,\n      errorMessage: '',\n    });\n  }\n\n\n\n  render() {\n\n    const data = this.state.authorr;\n    if(typeof(data) === \"string\"){ \n            return <ErrS data={data} err={this.state.errorMessage} />\n    }\n\n    if(this.state.isError){\n        return <Err1 err={this.state.errorMessage} />\n    }else{\n        return (\n          data.filter( (x:any) => x.status === \"pending\").map((u:Reimbursement|any,x:number) =>{\n            return(\n     <Review key={x} thekey={x} id={u.reimbursementId} author={u.author} amount={u.amount}\n      resolver={u.resolver} status={u.status} type={u.type} description={u.description}\n       date1={u.dateSubmitted} date2={u.dateResolved} />\n                )      \n                })\n        )\n    }\n    \n  }\n  \n}","import React from 'react';\nimport { authorRe } from '../../api/LibraryClient';\nimport { Reimbursement } from '../../models/Reimbursement';\nimport {Review} from './view1';\nimport { Err1, ErrS } from '../../errors/error1';\n\n\ninterface IBooksDisplayState {\n  authorr: Reimbursement[]|any;\n  isError: boolean;\n  errorMessage: string;\n}\n\nexport class Allxx extends React.Component<any, IBooksDisplayState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      authorr: 'loading..',\n      isError: false,\n      errorMessage: '',\n    }\n  }\n\n\n\n\n\n  async componentDidMount() {\n    try {\n\n      this.setState({\n        authorr: await authorRe(this.props.current),\n        isError: false\n      })\n\n    } catch (e) {\n      // We set the error information in our state.\n      // This will let us render something about the error to the end user\n      this.setState({\n        authorr: '',\n        isError: true,\n        errorMessage: e.message,\n      })\n    // }\n  }\n  }\n\n\n  \n\n  clearError = () => {\n    this.setState({\n      isError: false,\n      errorMessage: '',\n    });\n  }\n\n\n\n  render() {\n\n    const data = this.state.authorr;\n    if(typeof(data) === \"string\"){ \n            return <ErrS data={data} err={this.state.errorMessage} />\n    }\n\n    if(this.state.isError){\n        return <Err1 err={this.state.errorMessage} />\n    }else{\n        return (\n          data.filter( (x:any) => x.status !== \"pending\").map((u:Reimbursement|any,x:number) =>{\n            return(\n     <Review key={x} thekey={x} id={u.reimbursementId} author={u.author} amount={u.amount}\n      resolver={u.resolver} status={u.status} type={u.type} description={u.description}\n       date1={u.dateSubmitted} date2={u.dateResolved} />\n                )      \n                })\n        )\n    }\n    \n  }\n  \n}","import React from 'react';\nimport {All} from './rem/RemAll';\nimport {UpdateRe} from './rem/create';\nimport {Paa} from './rem/patching';\nimport { Reimbursement } from '../models/Reimbursement';\nimport {Authored} from './rem/author';\nimport {Stat} from './rem/bystatus';\nimport { Allx } from './rem/RemAllx';\nimport { Allxx } from './rem/RemAllxx';\n\n// interface IAppState {\n//     id:number|any;\n//     userRole:string|any;\n//     // userid:number;\n//     // single: any;\n//     // levelup: Reimbursement[] | any;\n//   }\n// //   interface IApppProps {\n// //     id:number|any;\n// //   }\n\nexport default class users extends React.Component<any,any> {\n\nconstructor(props:any){\n    super(props);\n    this.state = {\n        id: this.props.id,\n        current: this.props.id,\n        userRole: this.props.userRole,\n        value1: -1,\n        input: null,\n        value2: 1,\n        input2: null,\n        handleChange : this.handleChange.bind(this),\n        handleSubmit : this.handleSubmit.bind(this),\n        handleChange2 : this.handleChange2.bind(this),\n        handleSubmit2 : this.handleSubmit2.bind(this),\n        random: false,\n        random1: false,\n        randomx1: false,\n        randomxx1: false,\n        random2: false,\n        random3:false,\n        random4:false,\n        single:[],\n    }\n}\n// shouldComponentUpdate(nextProps: any, nextState: any) {\n//     return this.state.value !== nextState.value;\n//   }\n\nshowIn = () => {\n    this.setState({\n      random: true,\n      random1: false,\n      randomx1: false,\n      randomxx1: false,\n      random2:false,\n      random3:false ,\n      random4:false\n\n    })\n  }\n\n  showAll = () => {\n    this.setState({\n      random: false ,\n      random1: true,\n      random2 :false,\n      random3:false,\n      random4:false,\n      randomx1: false,\n      randomxx1: false\n    })\n  }\n  showAllx = () => {\n    this.setState({\n      random: false ,\n      randomx1: true,\n      randomxx1: false,\n      random1: false,\n      random2 :false,\n      random3:false,\n      random4:false \n    })\n  }\n  showAllxx = () => {\n    this.setState({\n      random: false ,\n      randomx1: false,\n      randomxx1: true,\n      random1: false,\n      random2 :false,\n      random3:false,\n      random4:false \n    })\n  }\n  showS = () => {\n    this.setState({\n        random3: true,\n        random: false ,\n        random1: false,\n        randomx1: false,\n        randomxx1: false,\n      random2 :false,\n      random4:false,\n    })\n  }\n\n  showUp = () => {\n    this.setState({\n      random: false ,\n      random2: true,\n      random1: false,\n      random3:false,\n      random4:false,\n      randomx1: false,\n      randomxx1: false,\n\n  \n    })\n  }\n\n  showP = () => {\n    this.setState({\n      random: false ,\n      random2: false,\n      random1: false,\n      random3:false,\n      random4: true,\n      randomx1: false,\n      randomxx1: false\n  \n    })\n  }\n\nchangevalue = () => {\n    this.setState({\n      value:  1     \n    })\n  }\n\n\n   updateUserxx = (user:Reimbursement) => {\n    this.setState({\n      levelup: user,\n    })\n  }\n\n  handleChange = (e:any) => {\n    this.setState({value1: e.target.value});\n\n  }\n\n  handleSubmit = (event:any)=> {\n    this.setState({value1: this.state.input});\n    event.preventDefault();\n  }\n\n  handleChange2 = (e:any) => {\n    this.setState({value2: e.target.value});\n\n  }\n\n  handleSubmit2 = (event:any)=> {\n    this.setState({value2: this.state.input2});\n    event.preventDefault();\n  }\n\n    render(){\n        return(\n            <>\n           {(this.props.userRole === \"admin\" || this.props.userRole === \"finance-manager\") &&\n            <div className=\"panel\">\n            <span  onClick={this.showUp}> create new </span>\n            <span  onClick={this.showAll}>All </span>\n            <span className=\"nottt\">look up :  </span>\n            <span  onClick={this.showIn}>by ID </span>\n            <span  onClick={this.showS}>by status </span>\n            <span  onClick={this.showP}>update </span>\n            </div>}\n\n            {(this.props.userRole === \"employee\") &&\n            <div className=\"panel\">\n            <span  onClick={this.showUp}> create new </span>\n            <span  onClick={this.showAllx}>Pending </span>\n            <span  onClick={this.showAllxx}>Resolved </span>\n            </div>}\n\n          { this.state.random &&   <div className=\"dif\">\n                <form onSubmit={this.handleSubmit} className=\"narrow\">\n                <label>Employee's ID: </label>\n                <input type=\"text\" onChange={this.handleChange} />\n                <input type=\"submit\" value=\"Fetch\" />\n                <label>&nbsp;</label>\n                </form>\n            </div>}\n            { this.state.random3 &&   <div className=\"dif\">\n                <form onSubmit={this.handleSubmit2} className=\"narrow\">\n                <label>Reimbursement Status: </label>\n                <select onChange={this.handleChange2} >\n                <option value=\"0\">choose</option>\n                <option value=\"1\">Pending</option>\n                <option value=\"2\">Aprroved</option>\n                <option value=\"3\">Denied</option>\n                    </select>\n                <input type=\"submit\" value=\"Fetch\" />\n                <label>&nbsp;</label>\n                </form>\n            </div>}\n            <div id =\"hideme\" className=\"wrapmein\">\n\n              \n            { this.state.random && <Authored userid={this.state.value1}/>}\n            { this.state.random3 && <Stat single={this.state.single} userid={this.state.value2}/>}\n            { this.state.random1 && <All current={this.state.current} />}\n            { this.state.randomx1 && <Allx current={this.state.id} />}\n            { this.state.randomxx1 && <Allxx current={this.state.id} />}\n            { this.state.random2 && <UpdateRe id={this.state.id} updateUserxx={this.updateUserxx}/>}\n            { this.state.random4 && <Paa id={this.state.id} updateUserxx={this.updateUserxx}/>}\n               </div>          \n            </>\n            \n        )\n    }\n}","import React from 'react';\n\n\nexport  class Eview extends React.Component<any> {\n    render(){\n        return(\n            <>\n            <div key={Math.floor(Math.random() * 10)} className=\"col\">\n            <span>id:  {this.props.id}</span>  \n          <span>username:  {this.props.username}</span>  \n          <span>password:  {this.props.pass}</span>  \n          <span>firstname: {this.props.firstname}</span>  \n          <span>lastname: {this.props.lastname}</span>  \n          <span>email: {this.props.email}</span>  \n          <span>role: {this.props.role}</span>  \n          </div>\n            </>\n        )\n    }\n}","import React from 'react';\nimport { User } from '../../models/User';\nimport { getAllUsers } from '../../api/LibraryClient';\nimport { Eview } from './view';\n// import { QuickTable } from './QuickTable';\n\ninterface IBooksDisplayState {\n  members: User[]|any;\n  isError: boolean;\n  errorMessage: string;\n}\n\nexport class AllUsers extends React.Component<any, IBooksDisplayState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      members: [],\n      isError: false,\n      errorMessage: '',\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({\n        members: await getAllUsers()\n      })\n    } catch (e) {\n      // We set the error information in our state.\n      // This will let us render something about the error to the end user\n      this.setState({\n        \n        isError: true,\n        errorMessage: e.message,\n      })\n    }\n  }\n   componentWillUnmount() {\n\n      this.setState({\n        members: null,\n        isError: false,\n        errorMessage: '',\n      })\n  }\n\n  \n\n  clearError = () => {\n    this.setState({\n      isError: false,\n      errorMessage: '',\n    });\n  }\n\n  render() {\n    if(!this.state.isError) {\n      //map to a string so quicktable can render this.\n      \n      return (this.state.members.map((u:User|any,x:number) =>{\n     return(\n         <Eview key={x} thekey={x} id={u.id} username={u.username} pass={u.password}\n          firstname={u.firstname} lastname={u.lastname}\n           email={u.email} role={u.role} />\n\n         )      \n         })\n         )\n    } \nelse {\n      switch(this.state.errorMessage){\n          case \"Request failed with status code 402\":\n             return <h3>login required</h3>\n          case \"Request failed with status code 403\":\n             return  <h3>Finance manager role is required!</h3>\n          default :\n             return <h3>unknown Error</h3>\n      }\n    }\n    \n  }\n  \n}","import React from 'react';\nimport { getSingle } from '../../api/LibraryClient';\nimport { Err1, ErrS } from '../../errors/error1';\nimport { Eview } from './view';\n\n\ninterface IBooksDisplayState {\n  single: any;\n  isError: boolean;\n  errorMessage: string;\n  _isMounted:boolean;\n}\n\nexport class SingleUser extends React.Component<any, IBooksDisplayState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      single: 'fetching user by id',\n      isError: false,\n      errorMessage: '',\n      _isMounted: true,\n    }\n  }\n\n  async UNSAFE_componentWillMount() {\n    \n    try {\n      this.setState({\n        single: await getSingle(this.props.userid),\n        isError: false,\n        _isMounted : true,\n      })\n    } catch (e) {\n      // We set the error information in our state.\n      // This will let us render something about the error to the end user\n      this.setState({\n        isError: true,\n        errorMessage: e.message,\n      })\n    // }\n  }\n  }\n  shouldComponentUpdate(nextProps: any, nextState: any) {\n    return this.props.single !== nextState.single;\n  }\n\n  async componentWillUnmount(){\n    this.setState({\n      single: null,\n      isError: false,\n      _isMounted : false,\n    })\n  }\n\n  async UNSAFE_componentWillReceiveProps() {\n    \n    try {\n      this.setState({\n        single: await getSingle(this.props.userid),\n        isError: false,\n        _isMounted : false\n      })\n    } catch (e) {\n      // We set the error information in our state.\n      // This will let us render something about the error to the end user\n      this.setState({\n        isError: true,\n        errorMessage: e.message,\n      })\n    // }\n  }\n  }\n\n\n  \n\n  clearError = () => {\n    this.setState({\n      isError: false,\n      errorMessage: '',\n    });\n  }\n\n\n\n  render() {\n    const u = this.state.single;\n    if(typeof(u) === \"string\"){ \n      return <ErrS data={u} err={this.state.errorMessage} />\n}\n\nif(this.state.isError){\n  return <Err1 err={this.state.errorMessage} />\n\n    }else{\n    return(\n      <>\n     <Eview access={u.id} id={u.id} username={u.username} pass={u.password}\n          firstname={u.firstname} lastname={u.lastname}\n           email={u.email} role={u.role} />\n          </>\n    )\n  }\n    \n  }\n  \n}","import React from 'react';\nimport { User } from '../../models/User';\nimport { updatexx } from '../../api/LibraryClient';\nimport { Eview } from './view';\nimport { Err1 } from '../../errors/error1';\n// import { Route, Switch, Redirect} from 'react-router';\n\n//the updateUser prop takes a function that takes a user and returns voide\n// it will match updateUser in App.\ninterface IUpdateComponentProps {\n  updateUserxx: (user:User) => void;\n}\n\ninterface ILoginComponentState {\n  username: string|any;\n  password: string|any;\n  firstname: string|any;\n  lastname: string|any;\n  email: string|any;\n  role: string|any;\n  userid: number | any;\n  isError: boolean;\n  errorMessage: string;\n  success:boolean;\n  user: User |any;\n}\n\nexport class UpdateUsers extends React.Component<IUpdateComponentProps, ILoginComponentState> {\n\n  constructor(props: IUpdateComponentProps) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      firstname: '',\n      lastname: '',\n      email: '',\n      role: '',\n      userid: '',\n      isError: false,\n      errorMessage: '',\n      success:false,\n      user:'',\n    }\n  }\n\n  //We'll need a few functions to modify individual pieces of our state\n  // These take change events\n  setUsername = (un: any) => {   \n    this.setState({\n        username: un.currentTarget.value\n        })  \n  }\n\n  setPassword = (pw: any) => {\n    this.setState({\n      password: pw.currentTarget.value,\n    })\n  }\n  setFirstname = (pw: any) => {\n    this.setState({\n      firstname: pw.currentTarget.value,\n    })\n  }\n  setLastname= (pw: any) => {\n    this.setState({\n      lastname: pw.currentTarget.value,\n    })\n  }\n  setEmail = (pw: any) => {\n    this.setState({\n      email: pw.currentTarget.value,\n    })\n  }\n  setRoleid= (pw: any) => {\n    this.setState({\n      role: pw.currentTarget.value,\n    })\n  }\n  setUserid = (pw: any) => {\n    this.setState({\n      userid: pw.currentTarget.value,\n    })\n  }\n\n  clearError = () => {\n    this.setState({\n      errorMessage: '',\n      isError: false,\n      success: false,\n      username: '',\n      password: '',\n      firstname: '',\n      lastname: '',\n      email: '',\n      role: '',\n\n    })\n  }\n\n  attemptUpdate = async (event: any) => {\n    event.preventDefault();\n    console.log(event);\n    try {\n      const levelup : User = await updatexx(this.state.username, this.state.password,this.state.firstname,this.state.lastname,this.state.email,this.state.role,this.state.userid);\n      this.props.updateUserxx(levelup);\n      this.setState({\n          user: levelup,\n        username: '',\n        password: '',\n        success: true\n      });\n      console.log(levelup);\n    \n    } catch (error) {\n      this.setState({\n        password: '',\n        isError: true,\n        success:false,\n        errorMessage: error.message,\n      })\n    }\n  }\n\n  render() {\n      if(this.state.isError){\n          return <Err1 err={this.state.errorMessage} />\n      }\n    if(!this.state.success){\n    return (\n      <div>\n      <form onSubmit={this.attemptUpdate}>\n        <span className=\"tag\"> update</span>\n          <div>\n            <input onChange={this.setUserid} value={this.state.userid} type=\"number\" name=\"id\"  \n            placeholder=\"ID (required!)\"  required />\n          </div>\n          <div>\n          <input onChange={this.setUsername} value={this.state.username} type=\"text\" name=\"username\"\n           id=\"username\" placeholder=\"change username\"\n           autoComplete={this.state.username} />\n            <input onChange={this.setPassword} value={this.state.password} type=\"password\" name=\"password\" \n            placeholder=\"change password\" autoComplete='false' />\n          </div>\n          <div>\n            <input onChange={this.setFirstname} value={this.state.firstname} type=\"text\" name=\"firstname\" \n            placeholder=\"change firstname\"  />\n            <input onChange={this.setLastname} value={this.state.lastname} type=\"text\" name=\"lastname\" \n            placeholder=\"Last name\" />\n          </div>\n          <div>\n            <input onChange={this.setEmail} value={this.state.email} type=\"email\" name=\"email\" \n            placeholder=\"change email\"  />\n            <select onChange={this.setRoleid} name=\"roleid\">\n            <option value=\"\">select role</option>\n            <option value=\"1\">admin</option>\n            <option value=\"2\">finance-manager</option>\n            <option value=\"3\">employee</option>\n            </select>\n          </div>\n          \n          <div className=\"notdiv\">\n            <input type=\"submit\" value=\"submit\" />\n          </div>\n      </form>\n     {<h3>{this.state.errorMessage}</h3>}\n      </div>\n    );\n    }\n    else{ \n        \n        const data = this.state.user;\n        \n        return (\n      <>\n    <h3>user updated successfuly\n        <span className=\"button\" onClick={this.clearError}>Make another update</span>\n    </h3>\n    <Eview access={data.id} id={data.id} username={data.username} pass={data.password}\n          firstname={data.firstname} lastname={data.lastname}\n           email={data.email} role={data.role} />\n    </>\n     ) \n    }\n  }\n\n}","import React from 'react';\nimport { User } from '../../models/User';\nimport { updatexx } from '../../api/LibraryClient';\nimport { Eview } from './view';\nimport { Err1 } from '../../errors/error1';\n// import { Route, Switch, Redirect} from 'react-router';\n\n//the updateUser prop takes a function that takes a user and returns voide\n// it will match updateUser in App.\ninterface IUpdateComponentProps {\n  updateUserxx: (user:User) => void;\n  getUser: any;\n}\n\ninterface ILoginComponentState {\n  username: string|any;\n  password: string|any;\n  firstname: string|any;\n  lastname: string|any;\n  email: string|any;\n  role: string|any;\n  userid: number | any;\n  isError: boolean;\n  errorMessage: string;\n  success:boolean;\n  user: User |any;\n}\n\nexport class UpdateUsersx extends React.Component<IUpdateComponentProps, ILoginComponentState> {\n\n  constructor(props: IUpdateComponentProps) {\n    super(props);\n    this.state = {\n      username: '',\n      password: '',\n      firstname: '',\n      lastname: '',\n      email: '',\n      role: '',\n      userid: '',\n      isError: false,\n      errorMessage: '',\n      success:false,\n      user:'',\n    }\n  }\n\n  //We'll need a few functions to modify individual pieces of our state\n  // These take change events\n  setUsername = (un: any) => {   \n    this.setState({\n        username: un.currentTarget.value\n        })  \n  }\n\n  setPassword = (pw: any) => {\n    this.setState({\n      password: pw.currentTarget.value,\n    })\n  }\n  setFirstname = (pw: any) => {\n    this.setState({\n      firstname: pw.currentTarget.value,\n    })\n  }\n  setLastname= (pw: any) => {\n    this.setState({\n      lastname: pw.currentTarget.value,\n    })\n  }\n  setEmail = (pw: any) => {\n    this.setState({\n      email: pw.currentTarget.value,\n    })\n  }\n  setRoleid= (pw: any) => {\n    this.setState({\n      role: pw.currentTarget.value,\n    })\n  }\n  setUserid = (pw: any) => {\n    this.setState({\n      userid: pw.currentTarget.value,\n    })\n  }\n\n  clearError = () => {\n    this.setState({\n      errorMessage: '',\n      isError: false,\n      success: false,\n      username: '',\n      password: '',\n      firstname: '',\n      lastname: '',\n      email: '',\n      role: '',\n\n    })\n  }\n\n  attemptUpdate = async (event: any) => {\n    event.preventDefault();\n    console.log(event);\n    try {\n      const levelup : User = await updatexx(this.state.username, this.state.password,this.state.firstname,this.state.lastname,this.state.email,this.state.role,this.props.getUser);\n      this.props.updateUserxx(levelup);\n      this.setState({\n          user: levelup,\n        username: '',\n        password: '',\n        success: true\n      });\n      console.log(levelup);\n    \n    } catch (error) {\n      this.setState({\n        password: '',\n        isError: true,\n        success:false,\n        errorMessage: error.message,\n      })\n    }\n  }\n\n  render() {\n      if(this.state.isError){\n          return <Err1 err={this.state.errorMessage} />\n      }\n    if(!this.state.success){\n    return (\n      <div>\n      <form onSubmit={this.attemptUpdate}>\n        <span className=\"tag\"> update</span>\n          <div>\n            <input  value={this.props.getUser} type=\"hidden\" name=\"id\"  \n            placeholder=\"ID (required!)\"  required />\n          </div>\n          <div>\n          <input onChange={this.setUsername} value={this.state.username} type=\"text\" name=\"username\"\n           id=\"username\" placeholder=\"change username\"\n           autoComplete={this.state.username} disabled />\n            <input onChange={this.setPassword} value={this.state.password} type=\"password\" name=\"password\" \n            placeholder=\"change password\" autoComplete='false' />\n          </div>\n          <div>\n            <input onChange={this.setFirstname} value={this.state.firstname} type=\"text\" name=\"firstname\" \n            placeholder=\"change firstname\"  />\n            <input onChange={this.setLastname} value={this.state.lastname} type=\"text\" name=\"lastname\" \n            placeholder=\"Last name\" />\n          </div>\n          <div>\n            <input onChange={this.setEmail} value={this.state.email} type=\"email\" name=\"email\" \n            placeholder=\"change email\"  />\n            <select onChange={this.setRoleid} name=\"roleid\" disabled>\n            <option value=\"\">select role</option>\n            <option value=\"1\">admin</option>\n            <option value=\"2\">finance-manager</option>\n            <option value=\"3\">employee</option>\n            </select>\n          </div>\n          \n          <div className=\"notdiv\">\n            <input type=\"submit\" value=\"submit\" />\n          </div>\n      </form>\n     {<h3>{this.state.errorMessage}</h3>}\n      </div>\n    );\n    }\n    else{ \n        \n        const data = this.state.user;\n        \n        return (\n      <>\n    <h3>profile updated successfuly\n        <span className=\"button\" onClick={this.clearError}> Again? </span>\n    </h3>\n    <Eview access={data.id} id={data.id} username={data.username} pass={data.password}\n          firstname={data.firstname} lastname={data.lastname}\n           email={data.email} role={data.role} />\n    </>\n     ) \n    }\n  }\n\n}","import React from 'react';\nimport { User } from '../../models/User';\nimport { getSingle } from '../../api/LibraryClient';\nimport { Eview } from './view';\n// import { QuickTable } from './QuickTable';\n\ninterface IBooksDisplayState {\n  members: User[]|any;\n  isError: boolean;\n  errorMessage: string;\n}\n\nexport class AllUsersx extends React.Component<any, IBooksDisplayState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      members: [],\n      isError: false,\n      errorMessage: '',\n    }\n  }\n\n  async componentDidMount() {\n    try {\n      this.setState({\n        members: await getSingle(this.props.getUser)\n      })\n    } catch (e) {\n      // We set the error information in our state.\n      // This will let us render something about the error to the end user\n      this.setState({\n        \n        isError: true,\n        errorMessage: e.message,\n      })\n    }\n  }\n   componentWillUnmount() {\n\n      this.setState({\n        members: null,\n        isError: false,\n        errorMessage: '',\n      })\n  }\n\n  \n\n  clearError = () => {\n    this.setState({\n      isError: false,\n      errorMessage: '',\n    });\n  }\n\n  render() {\n    if(!this.state.isError) {\n      //map to a string so quicktable can render this.\n      const u = this.state.members;\n      return (\n         <Eview id={u.id} username={u.username} pass={u.password}\n          firstname={u.firstname} lastname={u.lastname}\n           email={u.email} role={u.role} />\n\n      )\n         \n         \n    } \nelse {\n      switch(this.state.errorMessage){\n          case \"Request failed with status code 402\":\n             return <h3>login required</h3>\n          case \"Request failed with status code 403\":\n             return  <h3>Finance manager role is required!</h3>\n          default :\n             return <h3>unknown Error</h3>\n      }\n    }\n    \n  }\n  \n}","import React from 'react';\nimport {AllUsers} from './emp/UsersAll';\nimport {SingleUser} from './emp/SingleUser';\nimport {UpdateUsers} from './emp/updatex';\nimport { User } from '../models/User';\n\nimport {UpdateUsersx} from './emp/updatexx';\nimport {AllUsersx} from './emp/UsersAllx';\n\n\n\n\n\n// interface IAppState {\n//     userid:number;\n//     single: any;\n//     levelup: User[] | any;\n//     userRole: any;\n//     userId: any;\n//   }\n\nexport default class users extends React.Component<any,any> {\n\nconstructor(props:any){\n    super(props);\n    this.state = {\n        userid : 2,\n        value: '',\n        single:'' ,\n        input: '',\n        handleChange : this.handleChange.bind(this),\n        handleSubmit : this.handleSubmit.bind(this),\n        random: false,\n        random1: false,\n        random2: false,\n        randomx1: false,\n        randomx2: false,\n        good:false,\n        userRole: this.props.userRole,\n        userId : this.props.userId\n    }\n}\n// shouldComponentUpdate(nextProps: any, nextState: any) {\n//     return this.state.value !== nextState.value;\n//   }\n\nshowIn = () => {\n    this.setState({\n      random: true,\n      random1: false,\n      random2:false\n    })\n  }\n\n  showAll = () => {\n    this.setState({\n      random: false ,\n      random1: true,\n      random2 :false  \n    })\n  }\n\n  showx1 = () => {\n    this.setState({\n      randomx1: true,\n      randomx2 :false  \n    })\n  }\n\n  showx2 = () => {\n    this.setState({\n      randomx1: false,\n      randomx2 :true  \n    })\n  }\n\n  showUp = () => {\n    this.setState({\n      random: false ,\n      random2: true,\n      random1: false   \n    })\n  }\n\nchangevalue = () => {\n    this.setState({\n      value:  1  ,\n    })\n  }\n\n\n   updateUserxx = (user:User) => {\n    this.setState({\n      levelup: user,\n    })\n  }\n\n  handleChange = (e:any) => {\n    this.setState({value: e.target.value,\n        good: true   \n    });\n    this.setState({random : true, random1:false})\n  }\n\n  handleSubmit = (event:any)=> {\n    this.setState({value: this.state.input,      \n        good: false    });\n    event.preventDefault();\n  }\n\n    render(){\n        return(\n            <>\n            { (this.props.userRole === \"admin\" || this.props.userRole === \"finance-manager\") &&\n            <div className=\"panel\" id=\"admin page\">\n            <span  onClick={this.showAll}>All </span>\n            <span  onClick={this.showUp}> Update  </span>\n            <span  onClick={this.showIn}>look up </span>\n            </div>}\n\n            { (this.props.userRole === \"employee\") &&\n            <div className=\"panel\" id=\"admin page\">\n            <span  onClick={this.showx1}>Profile </span>\n            <span  onClick={this.showx2}> Update Profile  </span>\n            </div>}\n\n          { this.state.random &&   <div className=\"dif\">\n                <form onSubmit={this.handleSubmit} className=\"narrow\">\n                <label>Employee ID: </label>\n                <input type=\"text\" onChange={this.handleChange} />\n                <input type=\"submit\" onClick={this.handleSubmit} value=\"Fetch\" />\n                <label>&nbsp;</label>\n                </form>\n            </div>}\n            <div className=\"wrapmein\">\n\n            { this.state.random && <SingleUser userid={this.state.value} good={this.state.good}/>}\n            { this.state.random1 && <AllUsers />}\n            { this.state.random2 && <UpdateUsers updateUserxx={this.updateUserxx}/>}\n\n            { this.state.randomx1 && <AllUsersx getUser={this.state.userId} />}\n            { this.state.randomx2 && <UpdateUsersx getUser={this.state.userId} updateUserxx={this.updateUserxx}/>}\n               </div>          \n            </>\n            \n        )\n    }\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport { NavbarComponent } from './components/NavbarComponent';\nimport { User } from './models/User';\nimport { LoginComponent } from './components/default/LoginComponent';\nimport Welcome from './components/default/Welcome';\nimport {Logout} from './components/default/Logout';\nimport Home from './components/default/Home';\nimport NoMatch from './components/default/NoMatch';\nimport Reimbursement from './components/reimbursementComponenet';\nimport Users from './components/usersComponenet';\n\n\n\n\ninterface IAppState {\n  loggedInUser: User | null;\n  id:number|any;\n  // members: User | null;\n}\n\nexport class App extends React.Component<any, IAppState> {\n\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      loggedInUser: null,\n      id: '',\n      // members :null,\n    }\n  }\n\n  updateUser = (user:User) => {\n    this.setState({\n      loggedInUser: user,\n    })\n    const cooid = this.state.loggedInUser?.id;\n    this.setState({\n      id: cooid,\n    })\n  }\n\n  // emptyMembers = (m:any) => {\n  //   this.setState({\n  //     members: null,\n  //   })\n  // }\n\n  removeUser = (u: any) => {\n    this.setState({\n      loggedInUser: null,\n    })\n  }\n\n  render() {\n    const G = this.state.loggedInUser;\n    return (\n    <>\n    <Router>\n      <div className=\"fixed\">\n    <Welcome role={G?.role || 'visitor'} username={G?.firstname || 'Guest'}/>\n    <NavbarComponent User = {this.state.loggedInUser}/>\n     </div>\n     <div className=\"wrap\">\n      <Switch>\n      <Route path=\"/hello\" exact>\n          <Home />\n        </Route>\n        <Route path=\"/\" exact>\n          <Home />\n        </Route>  \n        { <Route exact path=\"/login\">\n          <LoginComponent  updateUser={this.updateUser} />\n        </Route>}\n        { G && <Route exact path=\"/logout\">\n          <Logout updateUser={this.removeUser}/>\n        </Route>}\n        { G && <Route path='/reimbursements' exact >\n          <Reimbursement userRole={G.role} id={this.state.id}  />\n          </Route>}\n      { G && <Route path='/employees'  exact >\n        <Users userRole={G?.role} userId={G?.id} />\n        </Route>}\n        <Route><NoMatch updateUser={this.updateUser} /></Route>\n      </Switch>\n      </div>\n    </Router>\n    </>\n    );\n  }\n\n}","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}